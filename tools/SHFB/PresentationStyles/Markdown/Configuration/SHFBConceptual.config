<?xml version="1.0" encoding="utf-8"?>
<configuration verbosity="{@BuildAssemblerVerbosity}">
	<dduetools>
		<builder>
			<componentLocations>
				{@ComponentLocations}
			</componentLocations>

			<components>
				<!-- Create skeleton document -->
				<component id="Copy From File Component">
					<data file="{@PresentationPath}Transforms\SkeletonConceptual.xml" />
					<copy source="/*" target="/" />
				</component>

				<!-- Copy in the topic content-->
				<component id="Copy From Files Component">
					<copy base=".\ddueXml" file="concat($key,'.xml')" source="/topic" target="/document" />
				</component>

				<!-- Resolve tokens -->
				<component id="Shared Content Component">
					<context prefix="ddue" name="http://ddue.schemas.microsoft.com/authoring/2003/5" />
					<content file="HelpFileBuilderTokens.tokens" />
					{@TokenFiles}
					<replace elements="/*//ddue:token" item="string(.)" />
				</component>

				<!-- Copy in metadata attributes -->
				<component id="Copy From Index Component">
					<index name="metadata" value="/metadata/topic" key="@id">
						<data files="_ContentMetadata_.xml" />
					</index>
					<copy name="metadata" source="*" target="/document/metadata" />
				</component>

				<!-- Resolve code snippets -->
				<component id="Example Component">
					{@CodeSnippetsFiles}
					<colors language="VisualBasic">
						<color pattern="^\s*'[^\r\n]*" class="Comment" />
						<color pattern="\&#34;[^&#34;\r\n]*\&#34;" class="Literal" />
						<color pattern="\b((AddHandler)|(AddressOf)|(Alias)|(And)|(AndAlso)|(As)|(Boolean)|(ByRef)|(Byte)|(ByVal)|(Call)|(Case)|(Catch)|(CBool)|(CByte)|(CChar)|(CDate)|(CDec)|(CDbl)|(Char)|(CInt)|(Class)|(CLng)|(CObj)|(Const)|(Continue)|(CSByte)|(CShort)|(CSng)|(CStr)|(CType)|(CUInt)|(CULng)|(CUShort)|(Date)|(Decimal)|(Declare)|(Default)|(Delegate)|(Dim)|(DirectCast)|(Do)|(Double)|(Each)|(Else)|(ElseIf)|(End)|(EndIf)|(Enum)|(Erase)|(Error)|(Event)|(Exit)|(False)|(Finally)|(For)|(Friend)|(From)|(Function)|(Get)|(GetType)|(GetXMLNamespace)|(Global)|(GoSub)|(GoTo)|(Handles)|(If)|(Implements)|(Imports)|(In)|(Inherits)|(Integer)|(Interface)|(Is)|(IsNot)|(Let)|(Lib)|(Like)|(Long)|(Loop)|(Me)|(Mod)|(Module)|(MustInherit)|(MustOverride)|(MyBase)|(MyClass)|(Namespace)|(Narrowing)|(New)|(Next)|(Not)|(Nothing)|(NotInheritable)|(NotOverridable)|(Object)|(Of)|(On)|(Operator)|(Option)|(Optional)|(Or)|(OrElse)|(Overloads)|(Overridable)|(Overrides)|(ParamArray)|(Partial)|(Private)|(Property)|(Protected)|(Public)|(RaiseEvent)|(ReadOnly)|(ReDim)|(REM)|(RemoveHandler)|(Resume)|(Return)|(SByte)|(Select)|(Set)|(Shadows)|(Shared)|(Short)|(Single)|(Static)|(Step)|(Stop)|(String)|(Structure)|(Sub)|(SyncLock)|(Then)|(Throw)|(To)|(True)|(Try)|(TryCast)|(TypeOf)|(Variant)|(Wend)|(UInteger)|(ULong)|(UShort)|(Until)|(Using)|(When)|(Where)|(While)|(Widening)|(With)|(WithEvents)|(WriteOnly)|(Xor)|(#Const)|(#Else)|(#ElseIf)|(#End)|(#If))\b" class="Keyword" />
					</colors>
					<colors language="CSharp">
						<color pattern="/\*(.|\n)+?\*/" class="Comment" />
						<color pattern="\&#34;[^&#34;\r\n]*\&#34;" class="Literal" />
						<color pattern="//[^\r\n]*" class="Comment" />
						<color pattern="\b((abstract)|(as)|(ascending)|(base)|(bool)|(break)|(by)|(byte)|(case)|(catch)|(char)|(checked)|(class)|(const)|(continue)|(decimal)|(default)|(delegate)|(descending)|(do)|(double)|(else)|(enum)|(equals)|(event)|(explicit)|(extern)|(false)|(finally)|(fixed)|(float)|(for)|(foreach)|(from)|(get)|(goto)|(group)|(if)|(implicit)|(in)|(int)|(interface)|(internal)|(into)|(is)|(join)|(let)|(lock)|(long)|(namespace)|(new)|(null)|(object)|(operator)|(on)|(orderby)|(out)|(override)|(params)|(partial)|(private)|(protected)|(public)|(readonly)|(ref)|(return)|(sbyte)|(sealed)|(select)|(set)|(short)|(sizeof)|(stackalloc)|(static)|(string)|(struct)|(switch)|(this)|(throw)|(true)|(try)|(typeof)|(uint)|(ulong)|(unchecked)|(unsafe)|(ushort)|(using)|(value)|(var)|(vield)|(virtual)|(volatile)|(void)|(where)|(while))\b" class="Keyword" />
					</colors>
					<colors language="ManagedCPlusPlus">
						<color pattern="/\*(.|\n)+?\*/" class="Comment" />
						<color pattern="\&#34;[^&#34;\r\n]*\&#34;" class="Literal" />
						<color pattern="//[^\r\n]*" class="Comment" />
						<color pattern="\b((abstract)|(array)|(bool)|(break)|(case)|(catch)|(char)|(class)|(const)|(continue)|(default)|(delegate)|(delete)|(deprecated)|(dllexport)|(dllimport)|(do)|(double)|(else)|(enum)|(event)|(explicit)|(extern)|(false)|(finally)|(float)|(for)|(friend)|(gcnew)|(generic)|(goto)|(if)|(initonly)|(inline)|(int)|(interface)|(literal)|(long)|(mutable)|(naked)|(namespace)|(new)|(noinline)|(noreturn)|(nothrow)|(novtable)|(nullptr)|(operator)|(private)|(property)|(protected)|(public)|(ref)|(register)|(return)|(safecast)|(sealed)|(selectany)|(short)|(signed)|(sizeof)|(static)|(struct)|(switch)|(template)|(this)|(thread)|(throw)|(true)|(try)|(typedef)|(typeid)|(typename)|(union)|(unsigned)|(using)|(uuid)|(value)|(virtual)|(void)|(volatile)|(while))\b" class="Keyword" />
					</colors>
					<colors language="FSharp">
						<color pattern="\(\*(.|\n)+?\*\)" class="Comment" />"
						<color pattern="\&#34;[^&#34;\r\n]*\&#34;" class="Literal" />
						<color pattern="//[^\r\n]*" class="Comment" />
						<color pattern="\b((abstract)|(and)|(as)|(asr)|(assert)|(atomic)|(base)|(begin)|(break)|(checked)|(class)|(component)|(const)|(constraint)|(constructor)|(continue)|(default)|(delegate)|(do)|(done)|(downcast)|(downto)|(eager)|(elif)|(else)|(end)|(event)|(exception)|(extern)|(external)|(false)|(finally)|(fixed)|(for)|(fun)|(function)|(functor)|(global)|(if)|(in)|(include)|(inherit)|(inline)|(interface)|(internal)|(land)|(lazy)|(let)|(lor)|(lsl)|(lsr)|(lxor)|(match)|(member)|(method)|(mixin)|(mod)|(module)|(mutable)|(namespace)|(new)|(null)|(object)|(of)|(open)|(or)|(override)|(parallel)|(private)|(process)|(protected)|(public)|(pure)|(rec)|(return)|(sealed)|(sig)|(static)|(struct)|(tailcall)|(then)|(to)|(trait)|(true)|(try)|(type)|(upcast)|(use)|(val)|(virtual)|(void)|(volatile)|(when)|(while)|(with)|(yield))\b" class="Keyword" />
					</colors>
				</component>

				<!-- Code block component configuration.  This must appear before the TransformComponent. -->
				<component id="Code Block Component">
					<!-- Base path for relative filenames in source attributes (optional) -->
					<basePath value="{@HtmlEncProjectFolder}" />

					<!-- Base output paths for the files (required).  These should match the parent folder of the output
							 path of the HTML files (see each of the SaveComponent instances below). -->
					<outputPaths>
						{@HelpFormatOutputPaths}
					</outputPaths>

					<!-- Allow missing source files (Optional).  If omitted, it will generate errors if referenced source
							 files are missing. -->
					<allowMissingSource value="false" />

					<!-- Remove region markers from imported code blocks.  If omitted, region markers in imported code
							 blocks are left alone. -->
					<removeRegionMarkers value="false" />

					<!-- Code colorizer options (required).
							 Attributes:
									Language syntax configuration file (required, not used by Markdown)
									XSLT style sheet file (required, not used by Markdown)
									CSS style sheet file (not used for Markdown)
									Script file (not used for Markdown)
									Disabled (always disabled for Markdown, leading whitespace normalization only)
									Default language (optional)
									Enable line numbering (optional)
									Enable outlining (optional)
									Keep XML comment "see" tags within the code (optional)
									Tab size override (optional, 0 = Use syntax file setting)
									Use language name as default title (optional) -->
					<colorizer syntaxFile="{@SHFBFolder}PresentationStyles\Colorizer\highlight.xml"
							styleFile="{@SHFBFolder}PresentationStyles\Colorizer\highlight.xsl"
							stylesheet="{@SHFBFolder}PresentationStyles\Colorizer\highlight.css"
							scriptFile="{@SHFBFolder}PresentationStyles\Colorizer\highlight.js"
							disabled="true" language="cs" numberLines="false" outlining="false"
							keepSeeTags="false" tabSize="0" defaultTitle="true" />
				</component>

				<!-- Transform -->
				<component id="XSL Transform Component">
					<transform file="{@PresentationPath}Transforms\MainConceptual.xsl">
						{@TransformComponentArguments}
					</transform>
				</component>

				<!-- Resolve shared content -->
				<component id="Shared Content Component">
					<content file="{@ResourceItemsFolder}SharedContent.xml" />
					<content file="{@ResourceItemsFolder}FeedBackContent.xml" />
					<content file="{@ResourceItemsFolder}ConceptualContent.xml" />
					<!-- These must be last in order to override other elements! -->
					<content file="SHFBContent.xml" />
					{@ResourceItemFiles}
				</component>

				<!-- Resolve art links -->
				<component id="Resolve Art Links Component">
					<targets input="Media" baseOutput=".\Output\Markdown" outputPath="string('media')" link="media"
						map="_MediaContent_.xml" />
				</component>

				<!-- Resolve conceptual links -->
				<component id="Resolve Conceptual Links Component">
					<showBrokenLinkText value="true" />
					<targets base="xmlComp" type="Local" url="string(/metadata/topic/@id)" />
				</component>

				<!-- Resolve reference links -->
				<component id="Resolve Reference Links Component">
					<locale value="{@Locale}" />
					<hrefFormat value="{0}" />
					<linkTarget value="{@SdkLinkTarget}" />
					<msdnContentIdCache path="{@LocalDataFolder}Cache\MsdnContentId.cache" />
					<targets base="{@FrameworkReflectionDataFolder}" recurse="true" files="*.xml"
						type="{@WebsiteSdkLinkType}" id="FrameworkTargets">
						{@ReferenceLinkNamespaceFiles}
					</targets>
					<targets files="reflection.xml" type="Local" id="ProjectTargets" />
				</component>

				<!-- Save the result -->
				<component id="Save Component">
					<save base="Output\Markdown\" path="concat($key,'.md')" indent="{@IndentHtml}"
						omit-xml-declaration="true" add-xhtml-namespace="false" />
				</component>

			</components>
		</builder>
	</dduetools>
</configuration>
