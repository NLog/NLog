<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.Net.Http">
      <assemblydata version="4.0.0.0" culture="" key="002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Net.Http.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Net.Http.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Net.Http.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.30319.17929</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.30319.17929</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\FinalPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.Net.Http">
      <topicdata group="api" />
      <apidata name="System.Net.Http" group="namespace" />
      <elements>
        <element api="T:System.Net.Http.HttpContent" />
        <element api="T:System.Net.Http.ByteArrayContent" />
        <element api="T:System.Net.Http.ClientCertificateOption" />
        <element api="T:System.Net.Http.HttpMessageHandler" />
        <element api="T:System.Net.Http.DelegatingHandler" />
        <element api="T:System.Net.Http.FormUrlEncodedContent" />
        <element api="T:System.Net.Http.HttpMessageInvoker" />
        <element api="T:System.Net.Http.HttpClient" />
        <element api="T:System.Net.Http.HttpClientHandler" />
        <element api="T:System.Net.Http.HttpCompletionOption" />
        <element api="T:System.Net.Http.HttpMethod" />
        <element api="T:System.Net.Http.HttpRequestException" />
        <element api="T:System.Net.Http.HttpRequestMessage" />
        <element api="T:System.Net.Http.HttpResponseMessage" />
        <element api="T:System.Net.Http.MessageProcessingHandler" />
        <element api="T:System.Net.Http.MultipartContent" />
        <element api="T:System.Net.Http.MultipartFormDataContent" />
        <element api="T:System.Net.Http.StreamContent" />
        <element api="T:System.Net.Http.StringContent" />
      </elements>
      <file name="0d36ba65-1c90-0e3f-96e5-970abfecae5d" />
    </api>
    <api id="T:System.Net.Http.ByteArrayContent">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.ByteArrayContent" />
      <apidata name="ByteArrayContent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Net.Http.HttpContent" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Net.Http.FormUrlEncodedContent" ref="true" />
          <type api="T:System.Net.Http.StringContent" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
      </containers>
      <file name="60c61656-5255-30b3-de6f-16eb2b2ae201" />
    </api>
    <api id="AllMembers.T:System.Net.Http.ByteArrayContent">
      <topicdata name="ByteArrayContent" group="list" subgroup="members" typeTopicId="T:System.Net.Http.ByteArrayContent" />
      <apidata name="ByteArrayContent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Net.Http.ByteArrayContent.#ctor">
          <element api="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[])" />
          <element api="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync" />
        <element api="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)" />
        <element api="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)" />
        <element api="Overload:System.Net.Http.ByteArrayContent.CopyToAsync">
          <element api="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)" />
          <element api="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)" />
        </element>
        <element api="Overload:System.Net.Http.ByteArrayContent.Dispose">
          <element api="M:System.Net.Http.HttpContent.Dispose" />
          <element api="M:System.Net.Http.HttpContent.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Net.Http.HttpContent.Headers" />
        <element api="Overload:System.Net.Http.ByteArrayContent.LoadIntoBufferAsync">
          <element api="M:System.Net.Http.HttpContent.LoadIntoBufferAsync" />
          <element api="M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)" />
        </element>
        <element api="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync" />
        <element api="M:System.Net.Http.HttpContent.ReadAsStreamAsync" />
        <element api="M:System.Net.Http.HttpContent.ReadAsStringAsync" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.ByteArrayContent" />
      </containers>
      <file name="206f04e5-3b78-67c2-9069-cbb736323f8b" />
    </api>
    <api id="Methods.T:System.Net.Http.ByteArrayContent">
      <topicdata name="ByteArrayContent" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.ByteArrayContent" />
      <apidata name="ByteArrayContent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync" />
        <element api="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)" />
        <element api="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)" />
        <element api="Overload:System.Net.Http.ByteArrayContent.CopyToAsync">
          <element api="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)" />
          <element api="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)" />
        </element>
        <element api="Overload:System.Net.Http.ByteArrayContent.Dispose">
          <element api="M:System.Net.Http.HttpContent.Dispose" />
          <element api="M:System.Net.Http.HttpContent.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Http.ByteArrayContent.LoadIntoBufferAsync">
          <element api="M:System.Net.Http.HttpContent.LoadIntoBufferAsync" />
          <element api="M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)" />
        </element>
        <element api="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync" />
        <element api="M:System.Net.Http.HttpContent.ReadAsStreamAsync" />
        <element api="M:System.Net.Http.HttpContent.ReadAsStringAsync" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.ByteArrayContent" />
      </containers>
      <file name="d3fa9690-41c9-ad66-d406-170a2ac7b681" />
    </api>
    <api id="Properties.T:System.Net.Http.ByteArrayContent">
      <topicdata name="ByteArrayContent" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.ByteArrayContent" />
      <apidata name="ByteArrayContent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Net.Http.HttpContent.Headers" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.ByteArrayContent" />
      </containers>
      <file name="8937c27f-2859-3f3e-3bc5-e5987e524456" />
    </api>
    <api id="Overload:System.Net.Http.ByteArrayContent.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.ByteArrayContent" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[])" />
        <element api="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.ByteArrayContent" ref="true" />
      </containers>
      <file name="25ed5470-0817-6c57-a3f2-b477d1a00445" />
    </api>
    <api id="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.ByteArrayContent.#ctor" />
      <parameters>
        <parameter name="content">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.ByteArrayContent" ref="true" />
      </containers>
      <file name="958b1b0f-80f7-8468-4a68-aae799f4b317" />
    </api>
    <api id="M:System.Net.Http.ByteArrayContent.#ctor(System.Byte[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.ByteArrayContent.#ctor" />
      <parameters>
        <parameter name="content">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.ByteArrayContent" ref="true" />
      </containers>
      <file name="02d32780-c69c-4bb8-e898-abf04dd90b40" />
    </api>
    <api id="M:System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync">
      <topicdata group="api" />
      <apidata name="CreateContentReadStreamAsync" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.Http.HttpContent.CreateContentReadStreamAsync">
          <type api="T:System.Net.Http.HttpContent" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.IO.Stream" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.ByteArrayContent" ref="true" />
      </containers>
      <file name="791a244f-4178-f4c8-d333-3c46cc1cd8ef" />
    </api>
    <api id="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <topicdata group="api" />
      <apidata name="SerializeToStreamAsync" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
          <type api="T:System.Net.Http.HttpContent" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Net.TransportContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.ByteArrayContent" ref="true" />
      </containers>
      <file name="9224949e-5bba-c5b4-2c31-4085b64e1e05" />
    </api>
    <api id="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)">
      <topicdata group="api" />
      <apidata name="TryComputeLength" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.Http.HttpContent.TryComputeLength(System.Int64@)">
          <type api="T:System.Net.Http.HttpContent" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="length" out="true">
          <referenceTo>
            <type api="T:System.Int64" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.ByteArrayContent" ref="true" />
      </containers>
      <file name="42330794-0013-0b54-8cdb-97b10c40e04e" />
    </api>
    <api id="T:System.Net.Http.ClientCertificateOption">
      <topicdata group="api" />
      <apidata name="ClientCertificateOption" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Net.Http.ClientCertificateOption.Automatic" />
        <element api="F:System.Net.Http.ClientCertificateOption.Manual" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
      </containers>
      <file name="c4bafb30-14b4-503c-9a5e-9059d33df9ce" />
    </api>
    <api id="F:System.Net.Http.ClientCertificateOption.Automatic">
      <topicdata group="api" notopic="" />
      <apidata name="Automatic" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.Http.ClientCertificateOption" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.ClientCertificateOption" ref="false" />
      </containers>
      <file name="609efb65-04d9-5f82-4c5f-85d45c10941d" />
    </api>
    <api id="F:System.Net.Http.ClientCertificateOption.Manual">
      <topicdata group="api" notopic="" />
      <apidata name="Manual" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.Http.ClientCertificateOption" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.ClientCertificateOption" ref="false" />
      </containers>
      <file name="3c71d9e0-a5c3-e4d7-7b02-22c01a64853b" />
    </api>
    <api id="T:System.Net.Http.DelegatingHandler">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.DelegatingHandler" />
      <apidata name="DelegatingHandler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Net.Http.HttpMessageHandler" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Net.Http.MessageProcessingHandler" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
      </containers>
      <file name="529fd8da-b8f1-e03a-f4dd-9f2bfddd34eb" />
    </api>
    <api id="AllMembers.T:System.Net.Http.DelegatingHandler">
      <topicdata name="DelegatingHandler" group="list" subgroup="members" typeTopicId="T:System.Net.Http.DelegatingHandler" />
      <apidata name="DelegatingHandler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Net.Http.DelegatingHandler.#ctor">
          <element api="M:System.Net.Http.DelegatingHandler.#ctor" />
          <element api="M:System.Net.Http.DelegatingHandler.#ctor(System.Net.Http.HttpMessageHandler)" />
        </element>
        <element api="Overload:System.Net.Http.DelegatingHandler.Dispose">
          <element api="M:System.Net.Http.HttpMessageHandler.Dispose" />
          <element api="M:System.Net.Http.DelegatingHandler.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Net.Http.DelegatingHandler.InnerHandler" />
        <element api="M:System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.DelegatingHandler" />
      </containers>
      <file name="7d99b002-57e5-db8a-b0f3-710c58787e83" />
    </api>
    <api id="Methods.T:System.Net.Http.DelegatingHandler">
      <topicdata name="DelegatingHandler" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.DelegatingHandler" />
      <apidata name="DelegatingHandler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Net.Http.DelegatingHandler.Dispose">
          <element api="M:System.Net.Http.HttpMessageHandler.Dispose" />
          <element api="M:System.Net.Http.DelegatingHandler.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.DelegatingHandler" />
      </containers>
      <file name="8c4d09ab-507c-eb7a-105c-1daf952e2df4" />
    </api>
    <api id="Properties.T:System.Net.Http.DelegatingHandler">
      <topicdata name="DelegatingHandler" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.DelegatingHandler" />
      <apidata name="DelegatingHandler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Net.Http.DelegatingHandler.InnerHandler" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.DelegatingHandler" />
      </containers>
      <file name="34341995-de17-5663-1f5a-51925b287bd1" />
    </api>
    <api id="Overload:System.Net.Http.DelegatingHandler.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.DelegatingHandler" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.Http.DelegatingHandler.#ctor" />
        <element api="M:System.Net.Http.DelegatingHandler.#ctor(System.Net.Http.HttpMessageHandler)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.DelegatingHandler" ref="true" />
      </containers>
      <file name="7171ecd6-dcb8-d3be-53a7-fbfe03571a8c" />
    </api>
    <api id="Overload:System.Net.Http.DelegatingHandler.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.DelegatingHandler" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Http.HttpMessageHandler.Dispose" />
        <element api="M:System.Net.Http.DelegatingHandler.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.DelegatingHandler" ref="true" />
      </containers>
      <file name="c94a0563-c7ee-7e8b-fe43-92bc66ed3b22" />
    </api>
    <api id="M:System.Net.Http.DelegatingHandler.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Net.Http.DelegatingHandler.#ctor" />
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.DelegatingHandler" ref="true" />
      </containers>
      <file name="1dd124f4-ea21-1a7a-69f6-98f47b68e4cb" />
    </api>
    <api id="M:System.Net.Http.DelegatingHandler.#ctor(System.Net.Http.HttpMessageHandler)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Net.Http.DelegatingHandler.#ctor" />
      <parameters>
        <parameter name="innerHandler">
          <type api="T:System.Net.Http.HttpMessageHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.DelegatingHandler" ref="true" />
      </containers>
      <file name="0ee9ce5a-cbac-3b7a-e47e-92a46732e0a4" />
    </api>
    <api id="M:System.Net.Http.DelegatingHandler.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Net.Http.DelegatingHandler.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)">
          <type api="T:System.Net.Http.HttpMessageHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.DelegatingHandler" ref="true" />
      </containers>
      <file name="f1a89fc3-38b1-1a10-4071-1be0d43f64da" />
    </api>
    <api id="P:System.Net.Http.DelegatingHandler.InnerHandler">
      <topicdata group="api" />
      <apidata name="InnerHandler" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_InnerHandler" />
      <setter name="set_InnerHandler" />
      <returns>
        <type api="T:System.Net.Http.HttpMessageHandler" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.DelegatingHandler" ref="true" />
      </containers>
      <file name="95f8e57c-671a-da01-bb89-61d158f5188d" />
    </api>
    <api id="M:System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="SendAsync" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <type api="T:System.Net.Http.HttpMessageHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="request">
          <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.DelegatingHandler" ref="true" />
      </containers>
      <file name="8415e864-9f21-a3ea-a918-d53487fb6e8e" />
    </api>
    <api id="T:System.Net.Http.FormUrlEncodedContent">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.FormUrlEncodedContent" />
      <apidata name="FormUrlEncodedContent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Net.Http.ByteArrayContent" ref="true" />
          <type api="T:System.Net.Http.HttpContent" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
      </containers>
      <file name="70e0c62f-4adf-c3a9-022d-1b6d8bd64b5d" />
    </api>
    <api id="AllMembers.T:System.Net.Http.FormUrlEncodedContent">
      <topicdata name="FormUrlEncodedContent" group="list" subgroup="members" typeTopicId="T:System.Net.Http.FormUrlEncodedContent" />
      <apidata name="FormUrlEncodedContent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync" />
        <element api="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)" />
        <element api="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)" />
        <element api="M:System.Net.Http.FormUrlEncodedContent.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
        <element api="Overload:System.Net.Http.FormUrlEncodedContent.CopyToAsync">
          <element api="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)" />
          <element api="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)" />
        </element>
        <element api="Overload:System.Net.Http.FormUrlEncodedContent.Dispose">
          <element api="M:System.Net.Http.HttpContent.Dispose" />
          <element api="M:System.Net.Http.HttpContent.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Net.Http.HttpContent.Headers" />
        <element api="Overload:System.Net.Http.FormUrlEncodedContent.LoadIntoBufferAsync">
          <element api="M:System.Net.Http.HttpContent.LoadIntoBufferAsync" />
          <element api="M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)" />
        </element>
        <element api="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync" />
        <element api="M:System.Net.Http.HttpContent.ReadAsStreamAsync" />
        <element api="M:System.Net.Http.HttpContent.ReadAsStringAsync" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.FormUrlEncodedContent" />
      </containers>
      <file name="942d69f6-a480-074e-3d6f-6cb3d1ffcccf" />
    </api>
    <api id="Methods.T:System.Net.Http.FormUrlEncodedContent">
      <topicdata name="FormUrlEncodedContent" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.FormUrlEncodedContent" />
      <apidata name="FormUrlEncodedContent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync" />
        <element api="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)" />
        <element api="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)" />
        <element api="Overload:System.Net.Http.FormUrlEncodedContent.CopyToAsync">
          <element api="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)" />
          <element api="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)" />
        </element>
        <element api="Overload:System.Net.Http.FormUrlEncodedContent.Dispose">
          <element api="M:System.Net.Http.HttpContent.Dispose" />
          <element api="M:System.Net.Http.HttpContent.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Http.FormUrlEncodedContent.LoadIntoBufferAsync">
          <element api="M:System.Net.Http.HttpContent.LoadIntoBufferAsync" />
          <element api="M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)" />
        </element>
        <element api="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync" />
        <element api="M:System.Net.Http.HttpContent.ReadAsStreamAsync" />
        <element api="M:System.Net.Http.HttpContent.ReadAsStringAsync" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.FormUrlEncodedContent" />
      </containers>
      <file name="3d4ae5a5-59fc-4b32-18cc-518f94132669" />
    </api>
    <api id="Properties.T:System.Net.Http.FormUrlEncodedContent">
      <topicdata name="FormUrlEncodedContent" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.FormUrlEncodedContent" />
      <apidata name="FormUrlEncodedContent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Net.Http.HttpContent.Headers" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.FormUrlEncodedContent" />
      </containers>
      <file name="6ddc172f-09e8-e3a4-afab-f6d755319675" />
    </api>
    <api id="M:System.Net.Http.FormUrlEncodedContent.#ctor(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="nameValueCollection">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.FormUrlEncodedContent" ref="true" />
      </containers>
      <file name="8089be42-40a8-c0b9-9756-2ee78c62c057" />
    </api>
    <api id="T:System.Net.Http.HttpClient">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.HttpClient" />
      <apidata name="HttpClient" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.Http.HttpClient.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Net.Http.HttpMessageInvoker" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
      </containers>
      <file name="547a0c7c-c134-b0ba-abba-de75abc038bf" />
    </api>
    <api id="AllMembers.T:System.Net.Http.HttpClient">
      <topicdata name="HttpClient" group="list" subgroup="members" typeTopicId="T:System.Net.Http.HttpClient" />
      <apidata name="HttpClient" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.Http.HttpClient.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Net.Http.HttpClient.#ctor">
          <element api="M:System.Net.Http.HttpClient.#ctor" />
          <element api="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)" />
          <element api="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)" />
        </element>
        <element api="P:System.Net.Http.HttpClient.BaseAddress" />
        <element api="M:System.Net.Http.HttpClient.CancelPendingRequests" />
        <element api="P:System.Net.Http.HttpClient.DefaultRequestHeaders" />
        <element api="Overload:System.Net.Http.HttpClient.DeleteAsync">
          <element api="M:System.Net.Http.HttpClient.DeleteAsync(System.String)" />
          <element api="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)" />
          <element api="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)" />
          <element api="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.Net.Http.HttpClient.Dispose">
          <element api="M:System.Net.Http.HttpMessageInvoker.Dispose" />
          <element api="M:System.Net.Http.HttpClient.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Http.HttpClient.GetAsync">
          <element api="M:System.Net.Http.HttpClient.GetAsync(System.String)" />
          <element api="M:System.Net.Http.HttpClient.GetAsync(System.Uri)" />
          <element api="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)" />
          <element api="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)" />
          <element api="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)" />
          <element api="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)" />
          <element api="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)" />
          <element api="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.Net.Http.HttpClient.GetByteArrayAsync">
          <element api="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)" />
          <element api="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)" />
        </element>
        <element api="Overload:System.Net.Http.HttpClient.GetStreamAsync">
          <element api="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)" />
          <element api="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)" />
        </element>
        <element api="Overload:System.Net.Http.HttpClient.GetStringAsync">
          <element api="M:System.Net.Http.HttpClient.GetStringAsync(System.String)" />
          <element api="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)" />
        </element>
        <element api="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize" />
        <element api="Overload:System.Net.Http.HttpClient.PostAsync">
          <element api="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)" />
          <element api="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)" />
          <element api="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
          <element api="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.Net.Http.HttpClient.PutAsync">
          <element api="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)" />
          <element api="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)" />
          <element api="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
          <element api="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.Net.Http.HttpClient.SendAsync">
          <element api="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" />
          <element api="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)" />
          <element api="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
          <element api="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)" />
        </element>
        <element api="P:System.Net.Http.HttpClient.Timeout" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" />
      </containers>
      <file name="21f4984c-99ca-6638-6c4e-c64a4747859d" />
    </api>
    <api id="Methods.T:System.Net.Http.HttpClient">
      <topicdata name="HttpClient" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.HttpClient" />
      <apidata name="HttpClient" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.Http.HttpClient.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Net.Http.HttpClient.CancelPendingRequests" />
        <element api="Overload:System.Net.Http.HttpClient.DeleteAsync">
          <element api="M:System.Net.Http.HttpClient.DeleteAsync(System.String)" />
          <element api="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)" />
          <element api="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)" />
          <element api="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.Net.Http.HttpClient.Dispose">
          <element api="M:System.Net.Http.HttpMessageInvoker.Dispose" />
          <element api="M:System.Net.Http.HttpClient.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Http.HttpClient.GetAsync">
          <element api="M:System.Net.Http.HttpClient.GetAsync(System.String)" />
          <element api="M:System.Net.Http.HttpClient.GetAsync(System.Uri)" />
          <element api="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)" />
          <element api="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)" />
          <element api="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)" />
          <element api="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)" />
          <element api="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)" />
          <element api="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.Net.Http.HttpClient.GetByteArrayAsync">
          <element api="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)" />
          <element api="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)" />
        </element>
        <element api="Overload:System.Net.Http.HttpClient.GetStreamAsync">
          <element api="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)" />
          <element api="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)" />
        </element>
        <element api="Overload:System.Net.Http.HttpClient.GetStringAsync">
          <element api="M:System.Net.Http.HttpClient.GetStringAsync(System.String)" />
          <element api="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)" />
        </element>
        <element api="Overload:System.Net.Http.HttpClient.PostAsync">
          <element api="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)" />
          <element api="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)" />
          <element api="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
          <element api="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.Net.Http.HttpClient.PutAsync">
          <element api="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)" />
          <element api="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)" />
          <element api="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
          <element api="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.Net.Http.HttpClient.SendAsync">
          <element api="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" />
          <element api="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)" />
          <element api="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
          <element api="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" />
      </containers>
      <file name="338c26c2-5887-7be7-6040-ab517c743948" />
    </api>
    <api id="Properties.T:System.Net.Http.HttpClient">
      <topicdata name="HttpClient" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.HttpClient" />
      <apidata name="HttpClient" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.Http.HttpClient.#ctor" />
      <elements>
        <element api="P:System.Net.Http.HttpClient.BaseAddress" />
        <element api="P:System.Net.Http.HttpClient.DefaultRequestHeaders" />
        <element api="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize" />
        <element api="P:System.Net.Http.HttpClient.Timeout" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" />
      </containers>
      <file name="826e8d7d-7b4d-ca3c-ffff-e26168fd8765" />
    </api>
    <api id="Overload:System.Net.Http.HttpClient.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.HttpClient" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.Http.HttpClient.#ctor" />
        <element api="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)" />
        <element api="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="cb0f0a2c-d5c3-82ad-787d-42e4259c6112" />
    </api>
    <api id="Overload:System.Net.Http.HttpClient.DeleteAsync">
      <topicdata name="DeleteAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.HttpClient" />
      <apidata name="DeleteAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Http.HttpClient.DeleteAsync(System.String)" />
        <element api="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)" />
        <element api="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)" />
        <element api="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="adbf7c00-93e9-f74f-c8cd-2f24835b6bd8" />
    </api>
    <api id="Overload:System.Net.Http.HttpClient.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.HttpClient" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Http.HttpMessageInvoker.Dispose" />
        <element api="M:System.Net.Http.HttpClient.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="a402011a-10d5-4318-a423-f6935658893a" />
    </api>
    <api id="Overload:System.Net.Http.HttpClient.GetAsync">
      <topicdata name="GetAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.HttpClient" />
      <apidata name="GetAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Http.HttpClient.GetAsync(System.String)" />
        <element api="M:System.Net.Http.HttpClient.GetAsync(System.Uri)" />
        <element api="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)" />
        <element api="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)" />
        <element api="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)" />
        <element api="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)" />
        <element api="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)" />
        <element api="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="4b5f67ec-7b50-614d-3796-bb7176af0b71" />
    </api>
    <api id="Overload:System.Net.Http.HttpClient.GetByteArrayAsync">
      <topicdata name="GetByteArrayAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.HttpClient" />
      <apidata name="GetByteArrayAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)" />
        <element api="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="faf9b105-fffd-550e-01ae-39e65cef5ec8" />
    </api>
    <api id="Overload:System.Net.Http.HttpClient.GetStreamAsync">
      <topicdata name="GetStreamAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.HttpClient" />
      <apidata name="GetStreamAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)" />
        <element api="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="fdc9de40-3ece-f432-bf9f-0f0a526a5d5c" />
    </api>
    <api id="Overload:System.Net.Http.HttpClient.GetStringAsync">
      <topicdata name="GetStringAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.HttpClient" />
      <apidata name="GetStringAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Http.HttpClient.GetStringAsync(System.String)" />
        <element api="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="243ebd18-f540-4653-f402-d25aa89e4476" />
    </api>
    <api id="Overload:System.Net.Http.HttpClient.PostAsync">
      <topicdata name="PostAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.HttpClient" />
      <apidata name="PostAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)" />
        <element api="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)" />
        <element api="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
        <element api="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="f032292c-3c9c-f70a-5a0d-55d047b93ff0" />
    </api>
    <api id="Overload:System.Net.Http.HttpClient.PutAsync">
      <topicdata name="PutAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.HttpClient" />
      <apidata name="PutAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)" />
        <element api="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)" />
        <element api="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
        <element api="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="3f28f4a8-de3e-c3f3-a70d-73d9a3a1ad28" />
    </api>
    <api id="Overload:System.Net.Http.HttpClient.SendAsync">
      <topicdata name="SendAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.HttpClient" />
      <apidata name="SendAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)" />
        <element api="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)" />
        <element api="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
        <element api="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="eb6cd683-e4cf-c628-875d-96543baab6ce" />
    </api>
    <api id="M:System.Net.Http.HttpClient.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.HttpClient.#ctor" />
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="b260dc1c-8ede-28f0-ee0c-fc865fa91092" />
    </api>
    <api id="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.HttpClient.#ctor" />
      <parameters>
        <parameter name="handler">
          <type api="T:System.Net.Http.HttpMessageHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="490c84bd-4c1f-c356-9042-5c1c728fd7c0" />
    </api>
    <api id="M:System.Net.Http.HttpClient.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.HttpClient.#ctor" />
      <parameters>
        <parameter name="handler">
          <type api="T:System.Net.Http.HttpMessageHandler" ref="true" />
        </parameter>
        <parameter name="disposeHandler">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="ed80c5ba-a79b-e9d6-7f48-24c11756b1c6" />
    </api>
    <api id="P:System.Net.Http.HttpClient.BaseAddress">
      <topicdata group="api" />
      <apidata name="BaseAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BaseAddress" />
      <setter name="set_BaseAddress" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="e2c6b1f3-352c-ad25-3520-a9608b902f14" />
    </api>
    <api id="M:System.Net.Http.HttpClient.CancelPendingRequests">
      <topicdata group="api" />
      <apidata name="CancelPendingRequests" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="4acd420e-5ec4-3639-e1c9-80ec3bbd7c53" />
    </api>
    <api id="P:System.Net.Http.HttpClient.DefaultRequestHeaders">
      <topicdata group="api" />
      <apidata name="DefaultRequestHeaders" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultRequestHeaders" />
      <returns>
        <type api="T:System.Net.Http.Headers.HttpRequestHeaders" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="c6434325-3cd2-b544-4d85-b74f02e686eb" />
    </api>
    <api id="M:System.Net.Http.HttpClient.DeleteAsync(System.String)">
      <topicdata group="api" />
      <apidata name="DeleteAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpClient.DeleteAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestUri">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="9de106be-dd07-7cf8-f622-5d3879d279e5" />
    </api>
    <api id="M:System.Net.Http.HttpClient.DeleteAsync(System.String,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="DeleteAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpClient.DeleteAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestUri">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="548cad71-b237-6fa9-a39c-a0050a6158ce" />
    </api>
    <api id="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri)">
      <topicdata group="api" />
      <apidata name="DeleteAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpClient.DeleteAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="abbb0010-7df2-7095-3131-ca0493b9877d" />
    </api>
    <api id="M:System.Net.Http.HttpClient.DeleteAsync(System.Uri,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="DeleteAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpClient.DeleteAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="7d40db37-34b9-7f80-8415-51a3748656a6" />
    </api>
    <api id="M:System.Net.Http.HttpClient.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Net.Http.HttpClient.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)">
          <type api="T:System.Net.Http.HttpMessageInvoker" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="abe03a1d-a0f0-1ded-2adc-0a9f78dcf66b" />
    </api>
    <api id="M:System.Net.Http.HttpClient.GetAsync(System.String)">
      <topicdata group="api" />
      <apidata name="GetAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpClient.GetAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestUri">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="6be12302-f5b4-fc98-22bf-1126c2071f25" />
    </api>
    <api id="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption)">
      <topicdata group="api" />
      <apidata name="GetAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpClient.GetAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestUri">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="completionOption">
          <type api="T:System.Net.Http.HttpCompletionOption" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="fe1c41a0-5fc2-da0c-a8bd-4e1b811224eb" />
    </api>
    <api id="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="GetAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpClient.GetAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestUri">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="completionOption">
          <type api="T:System.Net.Http.HttpCompletionOption" ref="false" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="758d5330-bb6a-99b5-5c3d-e9f8f321bbf9" />
    </api>
    <api id="M:System.Net.Http.HttpClient.GetAsync(System.String,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="GetAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpClient.GetAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestUri">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="ac763760-55e6-8853-efce-428efe9353d4" />
    </api>
    <api id="M:System.Net.Http.HttpClient.GetAsync(System.Uri)">
      <topicdata group="api" />
      <apidata name="GetAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpClient.GetAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="62259b6c-7f59-4208-2a7c-fae8442c6d5e" />
    </api>
    <api id="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption)">
      <topicdata group="api" />
      <apidata name="GetAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpClient.GetAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="completionOption">
          <type api="T:System.Net.Http.HttpCompletionOption" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="294316eb-e220-98cf-5c6c-bb3d28ed8686" />
    </api>
    <api id="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="GetAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpClient.GetAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="completionOption">
          <type api="T:System.Net.Http.HttpCompletionOption" ref="false" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="baa8915d-8da9-76db-1f3b-3d771357e0ce" />
    </api>
    <api id="M:System.Net.Http.HttpClient.GetAsync(System.Uri,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="GetAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpClient.GetAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="2b237be9-0e9f-f605-ef0e-b7df2ba6ddc6" />
    </api>
    <api id="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.String)">
      <topicdata group="api" />
      <apidata name="GetByteArrayAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpClient.GetByteArrayAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestUri">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="b982340f-b114-a240-73ed-bfcf4c20567d" />
    </api>
    <api id="M:System.Net.Http.HttpClient.GetByteArrayAsync(System.Uri)">
      <topicdata group="api" />
      <apidata name="GetByteArrayAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpClient.GetByteArrayAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="ccc7b2f4-a9b6-2fe3-6bd7-e972331c6765" />
    </api>
    <api id="M:System.Net.Http.HttpClient.GetStreamAsync(System.String)">
      <topicdata group="api" />
      <apidata name="GetStreamAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpClient.GetStreamAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestUri">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.IO.Stream" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="699efa34-e2ae-5e42-7e70-ba77bb660e5e" />
    </api>
    <api id="M:System.Net.Http.HttpClient.GetStreamAsync(System.Uri)">
      <topicdata group="api" />
      <apidata name="GetStreamAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpClient.GetStreamAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.IO.Stream" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="6fcc042a-877a-62ea-a896-46853e397091" />
    </api>
    <api id="M:System.Net.Http.HttpClient.GetStringAsync(System.String)">
      <topicdata group="api" />
      <apidata name="GetStringAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpClient.GetStringAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestUri">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="a5fc7f6b-f439-68a3-ed0d-87c1df412605" />
    </api>
    <api id="M:System.Net.Http.HttpClient.GetStringAsync(System.Uri)">
      <topicdata group="api" />
      <apidata name="GetStringAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpClient.GetStringAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="9f8a858d-a8a8-de07-42da-27890d45013f" />
    </api>
    <api id="P:System.Net.Http.HttpClient.MaxResponseContentBufferSize">
      <topicdata group="api" />
      <apidata name="MaxResponseContentBufferSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxResponseContentBufferSize" />
      <setter name="set_MaxResponseContentBufferSize" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="371281b4-91d8-41b5-af90-7f1fec9819db" />
    </api>
    <api id="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent)">
      <topicdata group="api" />
      <apidata name="PostAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpClient.PostAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestUri">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="content">
          <type api="T:System.Net.Http.HttpContent" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="ec62ae99-e3c5-56b0-8674-dc29ea732b44" />
    </api>
    <api id="M:System.Net.Http.HttpClient.PostAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="PostAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpClient.PostAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestUri">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="content">
          <type api="T:System.Net.Http.HttpContent" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="78e05460-340a-4ae9-3a27-2a4fbec37a15" />
    </api>
    <api id="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent)">
      <topicdata group="api" />
      <apidata name="PostAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpClient.PostAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="content">
          <type api="T:System.Net.Http.HttpContent" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="d0c6817c-0f6f-af90-feb1-1658064c9f17" />
    </api>
    <api id="M:System.Net.Http.HttpClient.PostAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="PostAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpClient.PostAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="content">
          <type api="T:System.Net.Http.HttpContent" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="5a2e7dfa-791a-9892-c9c1-28ec91439631" />
    </api>
    <api id="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent)">
      <topicdata group="api" />
      <apidata name="PutAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpClient.PutAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestUri">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="content">
          <type api="T:System.Net.Http.HttpContent" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="c1160f01-3f8b-d54a-94d3-47b3471c2204" />
    </api>
    <api id="M:System.Net.Http.HttpClient.PutAsync(System.String,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="PutAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpClient.PutAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestUri">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="content">
          <type api="T:System.Net.Http.HttpContent" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="5c822d7d-3df1-22b2-21a2-c65888dd060e" />
    </api>
    <api id="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent)">
      <topicdata group="api" />
      <apidata name="PutAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpClient.PutAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="content">
          <type api="T:System.Net.Http.HttpContent" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="cc809fa9-caa0-6ab4-ba16-2c67df7be97c" />
    </api>
    <api id="M:System.Net.Http.HttpClient.PutAsync(System.Uri,System.Net.Http.HttpContent,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="PutAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpClient.PutAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="requestUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="content">
          <type api="T:System.Net.Http.HttpContent" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="b7a0f8bd-db4b-5271-3933-89b96501c80d" />
    </api>
    <api id="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage)">
      <topicdata group="api" />
      <apidata name="SendAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpClient.SendAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="request">
          <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="cdb70d89-2879-d605-11ac-7d265d542c39" />
    </api>
    <api id="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption)">
      <topicdata group="api" />
      <apidata name="SendAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpClient.SendAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="request">
          <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
        </parameter>
        <parameter name="completionOption">
          <type api="T:System.Net.Http.HttpCompletionOption" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="18657edd-4980-2249-d083-d51b88e49d74" />
    </api>
    <api id="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpCompletionOption,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="SendAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpClient.SendAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="request">
          <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
        </parameter>
        <parameter name="completionOption">
          <type api="T:System.Net.Http.HttpCompletionOption" ref="false" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="a56bb3f5-058f-818f-d5f9-71d4753909f0" />
    </api>
    <api id="M:System.Net.Http.HttpClient.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="SendAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpClient.SendAsync" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <type api="T:System.Net.Http.HttpMessageInvoker" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="request">
          <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="c4a3b0f2-da7f-8c4f-89ee-fddfcdfbaecf" />
    </api>
    <api id="P:System.Net.Http.HttpClient.Timeout">
      <topicdata group="api" />
      <apidata name="Timeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Timeout" />
      <setter name="set_Timeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClient" ref="true" />
      </containers>
      <file name="ce9819be-f68a-b2f7-c0c0-d791e8851242" />
    </api>
    <api id="T:System.Net.Http.HttpClientHandler">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.HttpClientHandler" />
      <apidata name="HttpClientHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.Http.HttpClientHandler.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Net.Http.HttpMessageHandler" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
      </containers>
      <file name="ca3c73d2-9980-7500-285b-cba177d3d999" />
    </api>
    <api id="AllMembers.T:System.Net.Http.HttpClientHandler">
      <topicdata name="HttpClientHandler" group="list" subgroup="members" typeTopicId="T:System.Net.Http.HttpClientHandler" />
      <apidata name="HttpClientHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.Http.HttpClientHandler.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Net.Http.HttpClientHandler.#ctor" />
        <element api="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" />
        <element api="P:System.Net.Http.HttpClientHandler.AutomaticDecompression" />
        <element api="P:System.Net.Http.HttpClientHandler.ClientCertificateOptions" />
        <element api="P:System.Net.Http.HttpClientHandler.CookieContainer" />
        <element api="P:System.Net.Http.HttpClientHandler.Credentials" />
        <element api="Overload:System.Net.Http.HttpClientHandler.Dispose">
          <element api="M:System.Net.Http.HttpMessageHandler.Dispose" />
          <element api="M:System.Net.Http.HttpClientHandler.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" />
        <element api="P:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize" />
        <element api="P:System.Net.Http.HttpClientHandler.PreAuthenticate" />
        <element api="P:System.Net.Http.HttpClientHandler.Proxy" />
        <element api="M:System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
        <element api="P:System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression" />
        <element api="P:System.Net.Http.HttpClientHandler.SupportsProxy" />
        <element api="P:System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration" />
        <element api="P:System.Net.Http.HttpClientHandler.UseCookies" />
        <element api="P:System.Net.Http.HttpClientHandler.UseDefaultCredentials" />
        <element api="P:System.Net.Http.HttpClientHandler.UseProxy" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClientHandler" />
      </containers>
      <file name="fa4c3fc2-74f1-1993-2a81-f8d089b3b037" />
    </api>
    <api id="Methods.T:System.Net.Http.HttpClientHandler">
      <topicdata name="HttpClientHandler" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.HttpClientHandler" />
      <apidata name="HttpClientHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.Http.HttpClientHandler.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Net.Http.HttpClientHandler.Dispose">
          <element api="M:System.Net.Http.HttpMessageHandler.Dispose" />
          <element api="M:System.Net.Http.HttpClientHandler.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClientHandler" />
      </containers>
      <file name="2c10aaa8-3ac1-9715-d1b1-6f69e70d89ce" />
    </api>
    <api id="Properties.T:System.Net.Http.HttpClientHandler">
      <topicdata name="HttpClientHandler" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.HttpClientHandler" />
      <apidata name="HttpClientHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.Http.HttpClientHandler.#ctor" />
      <elements>
        <element api="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" />
        <element api="P:System.Net.Http.HttpClientHandler.AutomaticDecompression" />
        <element api="P:System.Net.Http.HttpClientHandler.ClientCertificateOptions" />
        <element api="P:System.Net.Http.HttpClientHandler.CookieContainer" />
        <element api="P:System.Net.Http.HttpClientHandler.Credentials" />
        <element api="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" />
        <element api="P:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize" />
        <element api="P:System.Net.Http.HttpClientHandler.PreAuthenticate" />
        <element api="P:System.Net.Http.HttpClientHandler.Proxy" />
        <element api="P:System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression" />
        <element api="P:System.Net.Http.HttpClientHandler.SupportsProxy" />
        <element api="P:System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration" />
        <element api="P:System.Net.Http.HttpClientHandler.UseCookies" />
        <element api="P:System.Net.Http.HttpClientHandler.UseDefaultCredentials" />
        <element api="P:System.Net.Http.HttpClientHandler.UseProxy" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClientHandler" />
      </containers>
      <file name="0077cb1f-013f-8933-29ed-6c18a6665e9a" />
    </api>
    <api id="Overload:System.Net.Http.HttpClientHandler.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.HttpClientHandler" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Http.HttpMessageHandler.Dispose" />
        <element api="M:System.Net.Http.HttpClientHandler.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClientHandler" ref="true" />
      </containers>
      <file name="3f463da7-48d2-5a4c-19b5-ff981073dbf1" />
    </api>
    <api id="M:System.Net.Http.HttpClientHandler.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClientHandler" ref="true" />
      </containers>
      <file name="09c9ac48-3290-6905-44d2-f75f17e46c63" />
    </api>
    <api id="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect">
      <topicdata group="api" />
      <apidata name="AllowAutoRedirect" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowAutoRedirect" />
      <setter name="set_AllowAutoRedirect" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClientHandler" ref="true" />
      </containers>
      <file name="1db798e6-6c13-defc-381e-b0fca6819419" />
    </api>
    <api id="P:System.Net.Http.HttpClientHandler.AutomaticDecompression">
      <topicdata group="api" />
      <apidata name="AutomaticDecompression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AutomaticDecompression" />
      <setter name="set_AutomaticDecompression" />
      <returns>
        <type api="T:System.Net.DecompressionMethods" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClientHandler" ref="true" />
      </containers>
      <file name="821d41cd-bd94-79e3-3190-06bb334fbae1" />
    </api>
    <api id="P:System.Net.Http.HttpClientHandler.ClientCertificateOptions">
      <topicdata group="api" />
      <apidata name="ClientCertificateOptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ClientCertificateOptions" />
      <setter name="set_ClientCertificateOptions" />
      <returns>
        <type api="T:System.Net.Http.ClientCertificateOption" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClientHandler" ref="true" />
      </containers>
      <file name="661b43a0-0a0a-417c-0252-84418f849378" />
    </api>
    <api id="P:System.Net.Http.HttpClientHandler.CookieContainer">
      <topicdata group="api" />
      <apidata name="CookieContainer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CookieContainer" />
      <setter name="set_CookieContainer" />
      <returns>
        <type api="T:System.Net.CookieContainer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClientHandler" ref="true" />
      </containers>
      <file name="04f43437-df05-820c-24e0-0ae432242573" />
    </api>
    <api id="P:System.Net.Http.HttpClientHandler.Credentials">
      <topicdata group="api" />
      <apidata name="Credentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Credentials" />
      <setter name="set_Credentials" />
      <returns>
        <type api="T:System.Net.ICredentials" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClientHandler" ref="true" />
      </containers>
      <file name="1c987607-2444-fb16-6132-5af1a23c8cfd" />
    </api>
    <api id="M:System.Net.Http.HttpClientHandler.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Net.Http.HttpClientHandler.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)">
          <type api="T:System.Net.Http.HttpMessageHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClientHandler" ref="true" />
      </containers>
      <file name="2e2ad9de-4606-cc50-f005-2f7724ba5c3d" />
    </api>
    <api id="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections">
      <topicdata group="api" />
      <apidata name="MaxAutomaticRedirections" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxAutomaticRedirections" />
      <setter name="set_MaxAutomaticRedirections" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClientHandler" ref="true" />
      </containers>
      <file name="f8450bad-13fe-2558-7211-3b7228df4896" />
    </api>
    <api id="P:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize">
      <topicdata group="api" />
      <apidata name="MaxRequestContentBufferSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxRequestContentBufferSize" />
      <setter name="set_MaxRequestContentBufferSize" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClientHandler" ref="true" />
      </containers>
      <file name="940dbd28-ddf8-4d1e-274b-67df35826808" />
    </api>
    <api id="P:System.Net.Http.HttpClientHandler.PreAuthenticate">
      <topicdata group="api" />
      <apidata name="PreAuthenticate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PreAuthenticate" />
      <setter name="set_PreAuthenticate" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClientHandler" ref="true" />
      </containers>
      <file name="3c0693ea-0023-f3d5-af98-a8463e995517" />
    </api>
    <api id="P:System.Net.Http.HttpClientHandler.Proxy">
      <topicdata group="api" />
      <apidata name="Proxy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Proxy" />
      <setter name="set_Proxy" />
      <returns>
        <type api="T:System.Net.IWebProxy" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClientHandler" ref="true" />
      </containers>
      <file name="f5dd581c-c30e-2484-95fd-ecce3b1af2a2" />
    </api>
    <api id="M:System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="SendAsync" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <type api="T:System.Net.Http.HttpMessageHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="request">
          <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClientHandler" ref="true" />
      </containers>
      <file name="8d9bcb61-e2ad-ff28-e788-9901efc9c8d2" />
    </api>
    <api id="P:System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression">
      <topicdata group="api" />
      <apidata name="SupportsAutomaticDecompression" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_SupportsAutomaticDecompression" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClientHandler" ref="true" />
      </containers>
      <file name="8022e074-de0b-f1f2-b6a0-29c4452f7fd4" />
    </api>
    <api id="P:System.Net.Http.HttpClientHandler.SupportsProxy">
      <topicdata group="api" />
      <apidata name="SupportsProxy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_SupportsProxy" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClientHandler" ref="true" />
      </containers>
      <file name="801aa7f2-ba92-97ba-b164-c93bef4830a5" />
    </api>
    <api id="P:System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration">
      <topicdata group="api" />
      <apidata name="SupportsRedirectConfiguration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_SupportsRedirectConfiguration" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClientHandler" ref="true" />
      </containers>
      <file name="cc6ff513-485e-c30d-db0a-0456b5a26018" />
    </api>
    <api id="P:System.Net.Http.HttpClientHandler.UseCookies">
      <topicdata group="api" />
      <apidata name="UseCookies" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UseCookies" />
      <setter name="set_UseCookies" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClientHandler" ref="true" />
      </containers>
      <file name="1a838ff0-fcee-42e3-9eaa-a0f05d8afc6a" />
    </api>
    <api id="P:System.Net.Http.HttpClientHandler.UseDefaultCredentials">
      <topicdata group="api" />
      <apidata name="UseDefaultCredentials" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UseDefaultCredentials" />
      <setter name="set_UseDefaultCredentials" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClientHandler" ref="true" />
      </containers>
      <file name="0bdd5cd9-5470-f7b6-7c94-44aeb55915f0" />
    </api>
    <api id="P:System.Net.Http.HttpClientHandler.UseProxy">
      <topicdata group="api" />
      <apidata name="UseProxy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UseProxy" />
      <setter name="set_UseProxy" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpClientHandler" ref="true" />
      </containers>
      <file name="c11499c1-0631-e9bf-3816-621e958d1b7f" />
    </api>
    <api id="T:System.Net.Http.HttpCompletionOption">
      <topicdata group="api" />
      <apidata name="HttpCompletionOption" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Net.Http.HttpCompletionOption.ResponseContentRead" />
        <element api="F:System.Net.Http.HttpCompletionOption.ResponseHeadersRead" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
      </containers>
      <file name="7f0db615-6f19-d53b-7f14-a655b07407ff" />
    </api>
    <api id="F:System.Net.Http.HttpCompletionOption.ResponseContentRead">
      <topicdata group="api" notopic="" />
      <apidata name="ResponseContentRead" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.Http.HttpCompletionOption" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpCompletionOption" ref="false" />
      </containers>
      <file name="f8a4d3ab-07b5-28b0-a563-5e99d630d48e" />
    </api>
    <api id="F:System.Net.Http.HttpCompletionOption.ResponseHeadersRead">
      <topicdata group="api" notopic="" />
      <apidata name="ResponseHeadersRead" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.Http.HttpCompletionOption" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpCompletionOption" ref="false" />
      </containers>
      <file name="f523496c-5a5a-6bc3-cb76-c61b7a600169" />
    </api>
    <api id="T:System.Net.Http.HttpContent">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.HttpContent" />
      <apidata name="HttpContent" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Net.Http.ByteArrayContent" ref="true" />
          <type api="T:System.Net.Http.MultipartContent" ref="true" />
          <type api="T:System.Net.Http.StreamContent" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
      </containers>
      <file name="5bb845cd-05d5-9d64-d3a9-182b95e9fd96" />
    </api>
    <api id="AllMembers.T:System.Net.Http.HttpContent">
      <topicdata name="HttpContent" group="list" subgroup="members" typeTopicId="T:System.Net.Http.HttpContent" />
      <apidata name="HttpContent" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Net.Http.HttpContent.#ctor" />
        <element api="Overload:System.Net.Http.HttpContent.CopyToAsync">
          <element api="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)" />
          <element api="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)" />
        </element>
        <element api="M:System.Net.Http.HttpContent.CreateContentReadStreamAsync" />
        <element api="Overload:System.Net.Http.HttpContent.Dispose">
          <element api="M:System.Net.Http.HttpContent.Dispose" />
          <element api="M:System.Net.Http.HttpContent.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Net.Http.HttpContent.Headers" />
        <element api="Overload:System.Net.Http.HttpContent.LoadIntoBufferAsync">
          <element api="M:System.Net.Http.HttpContent.LoadIntoBufferAsync" />
          <element api="M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)" />
        </element>
        <element api="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync" />
        <element api="M:System.Net.Http.HttpContent.ReadAsStreamAsync" />
        <element api="M:System.Net.Http.HttpContent.ReadAsStringAsync" />
        <element api="M:System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)" />
        <element api="M:System.Net.Http.HttpContent.TryComputeLength(System.Int64@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpContent" />
      </containers>
      <file name="b0e2b60d-4b70-a3da-cc19-c378e4edc02a" />
    </api>
    <api id="Methods.T:System.Net.Http.HttpContent">
      <topicdata name="HttpContent" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.HttpContent" />
      <apidata name="HttpContent" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Net.Http.HttpContent.CopyToAsync">
          <element api="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)" />
          <element api="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)" />
        </element>
        <element api="M:System.Net.Http.HttpContent.CreateContentReadStreamAsync" />
        <element api="Overload:System.Net.Http.HttpContent.Dispose">
          <element api="M:System.Net.Http.HttpContent.Dispose" />
          <element api="M:System.Net.Http.HttpContent.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Http.HttpContent.LoadIntoBufferAsync">
          <element api="M:System.Net.Http.HttpContent.LoadIntoBufferAsync" />
          <element api="M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)" />
        </element>
        <element api="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync" />
        <element api="M:System.Net.Http.HttpContent.ReadAsStreamAsync" />
        <element api="M:System.Net.Http.HttpContent.ReadAsStringAsync" />
        <element api="M:System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)" />
        <element api="M:System.Net.Http.HttpContent.TryComputeLength(System.Int64@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpContent" />
      </containers>
      <file name="48707757-6e34-7e08-a376-7afb310dc8da" />
    </api>
    <api id="Properties.T:System.Net.Http.HttpContent">
      <topicdata name="HttpContent" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.HttpContent" />
      <apidata name="HttpContent" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Net.Http.HttpContent.Headers" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpContent" />
      </containers>
      <file name="b705da93-94b3-f80c-dc76-3a140b1d303f" />
    </api>
    <api id="Overload:System.Net.Http.HttpContent.CopyToAsync">
      <topicdata name="CopyToAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.HttpContent" />
      <apidata name="CopyToAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)" />
        <element api="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpContent" ref="true" />
      </containers>
      <file name="a5ab0ea8-a8d0-0347-d238-a333036f0700" />
    </api>
    <api id="Overload:System.Net.Http.HttpContent.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.HttpContent" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Http.HttpContent.Dispose" />
        <element api="M:System.Net.Http.HttpContent.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpContent" ref="true" />
      </containers>
      <file name="406d833c-9e93-5ed4-6af2-f7846cd87353" />
    </api>
    <api id="Overload:System.Net.Http.HttpContent.LoadIntoBufferAsync">
      <topicdata name="LoadIntoBufferAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.HttpContent" />
      <apidata name="LoadIntoBufferAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Http.HttpContent.LoadIntoBufferAsync" />
        <element api="M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpContent" ref="true" />
      </containers>
      <file name="a744f92a-11b9-ceee-2f57-ab74b2c6f90c" />
    </api>
    <api id="M:System.Net.Http.HttpContent.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpContent" ref="true" />
      </containers>
      <file name="1c1c9daf-a08f-f91a-94b8-b749d8e81ae0" />
    </api>
    <api id="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="CopyToAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpContent.CopyToAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpContent" ref="true" />
      </containers>
      <file name="b249a26e-c4b6-f85a-ddd8-5af5926d42a6" />
    </api>
    <api id="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)">
      <topicdata group="api" />
      <apidata name="CopyToAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpContent.CopyToAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Net.TransportContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpContent" ref="true" />
      </containers>
      <file name="991a9984-6d19-ce09-11f7-fdf2051c3087" />
    </api>
    <api id="M:System.Net.Http.HttpContent.CreateContentReadStreamAsync">
      <topicdata group="api" />
      <apidata name="CreateContentReadStreamAsync" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.IO.Stream" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpContent" ref="true" />
      </containers>
      <file name="7d233dc4-2b1e-ec24-086a-9a6bd15a790b" />
    </api>
    <api id="M:System.Net.Http.HttpContent.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpContent.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpContent" ref="true" />
      </containers>
      <file name="3513e52e-a025-339d-0977-442c2e52681b" />
    </api>
    <api id="M:System.Net.Http.HttpContent.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Net.Http.HttpContent.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpContent" ref="true" />
      </containers>
      <file name="4233a582-3986-47e1-eae0-9466add65471" />
    </api>
    <api id="P:System.Net.Http.HttpContent.Headers">
      <topicdata group="api" />
      <apidata name="Headers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Headers" />
      <returns>
        <type api="T:System.Net.Http.Headers.HttpContentHeaders" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpContent" ref="true" />
      </containers>
      <file name="918eaf17-3d5e-4c35-b4db-3aabbde7fbd7" />
    </api>
    <api id="M:System.Net.Http.HttpContent.LoadIntoBufferAsync">
      <topicdata group="api" />
      <apidata name="LoadIntoBufferAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpContent.LoadIntoBufferAsync" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpContent" ref="true" />
      </containers>
      <file name="b67cff15-7dfd-bcd3-e7ac-4cb64e47a155" />
    </api>
    <api id="M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)">
      <topicdata group="api" />
      <apidata name="LoadIntoBufferAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpContent.LoadIntoBufferAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="maxBufferSize">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpContent" ref="true" />
      </containers>
      <file name="70eaca62-a74b-4c57-f1c4-5795dc9aac65" />
    </api>
    <api id="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync">
      <topicdata group="api" />
      <apidata name="ReadAsByteArrayAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpContent" ref="true" />
      </containers>
      <file name="f98d48a1-a08a-0536-72de-f7678d923ad0" />
    </api>
    <api id="M:System.Net.Http.HttpContent.ReadAsStreamAsync">
      <topicdata group="api" />
      <apidata name="ReadAsStreamAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.IO.Stream" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpContent" ref="true" />
      </containers>
      <file name="480420fd-12d1-3761-3267-f05eef04f94f" />
    </api>
    <api id="M:System.Net.Http.HttpContent.ReadAsStringAsync">
      <topicdata group="api" />
      <apidata name="ReadAsStringAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpContent" ref="true" />
      </containers>
      <file name="3d00ea14-70e9-1e13-340d-73907a55d43a" />
    </api>
    <api id="M:System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <topicdata group="api" />
      <apidata name="SerializeToStreamAsync" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Net.TransportContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpContent" ref="true" />
      </containers>
      <file name="f1f4cf1e-dc96-777c-7893-000b4f45422f" />
    </api>
    <api id="M:System.Net.Http.HttpContent.TryComputeLength(System.Int64@)">
      <topicdata group="api" />
      <apidata name="TryComputeLength" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="length" out="true">
          <referenceTo>
            <type api="T:System.Int64" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpContent" ref="true" />
      </containers>
      <file name="d93569a4-b721-4a96-935c-7d969d7625fa" />
    </api>
    <api id="T:System.Net.Http.HttpMessageHandler">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.HttpMessageHandler" />
      <apidata name="HttpMessageHandler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Net.Http.DelegatingHandler" ref="true" />
          <type api="T:System.Net.Http.HttpClientHandler" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
      </containers>
      <file name="b70f9cfb-96b7-1bfb-3f15-7c1b92d8b49c" />
    </api>
    <api id="AllMembers.T:System.Net.Http.HttpMessageHandler">
      <topicdata name="HttpMessageHandler" group="list" subgroup="members" typeTopicId="T:System.Net.Http.HttpMessageHandler" />
      <apidata name="HttpMessageHandler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Net.Http.HttpMessageHandler.#ctor" />
        <element api="Overload:System.Net.Http.HttpMessageHandler.Dispose">
          <element api="M:System.Net.Http.HttpMessageHandler.Dispose" />
          <element api="M:System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpMessageHandler" />
      </containers>
      <file name="03bf0c7c-2a07-34dc-228b-7a4c1de4df3a" />
    </api>
    <api id="Methods.T:System.Net.Http.HttpMessageHandler">
      <topicdata name="HttpMessageHandler" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.HttpMessageHandler" />
      <apidata name="HttpMessageHandler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Net.Http.HttpMessageHandler.Dispose">
          <element api="M:System.Net.Http.HttpMessageHandler.Dispose" />
          <element api="M:System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpMessageHandler" />
      </containers>
      <file name="65699027-974a-9a23-3500-095b4cf8a826" />
    </api>
    <api id="Overload:System.Net.Http.HttpMessageHandler.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.HttpMessageHandler" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Http.HttpMessageHandler.Dispose" />
        <element api="M:System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpMessageHandler" ref="true" />
      </containers>
      <file name="b31a339f-1b99-276a-1e56-6025a9226d9b" />
    </api>
    <api id="M:System.Net.Http.HttpMessageHandler.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpMessageHandler" ref="true" />
      </containers>
      <file name="6d21a05d-315c-fa04-3e89-08342784c42e" />
    </api>
    <api id="M:System.Net.Http.HttpMessageHandler.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpMessageHandler.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpMessageHandler" ref="true" />
      </containers>
      <file name="d172b1da-b27a-219f-e4ae-0276cc157a23" />
    </api>
    <api id="M:System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Net.Http.HttpMessageHandler.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpMessageHandler" ref="true" />
      </containers>
      <file name="c3e41b51-b47b-838f-76dd-82b5227b8995" />
    </api>
    <api id="M:System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="SendAsync" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpMessageHandler" ref="true" />
      </containers>
      <file name="51f6d49c-4d55-b03b-25f6-e97764f576e6" />
    </api>
    <api id="T:System.Net.Http.HttpMessageInvoker">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.HttpMessageInvoker" />
      <apidata name="HttpMessageInvoker" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Net.Http.HttpClient" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
      </containers>
      <file name="bd7299ae-b53b-7baa-0c3b-e913481b78a5" />
    </api>
    <api id="AllMembers.T:System.Net.Http.HttpMessageInvoker">
      <topicdata name="HttpMessageInvoker" group="list" subgroup="members" typeTopicId="T:System.Net.Http.HttpMessageInvoker" />
      <apidata name="HttpMessageInvoker" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Net.Http.HttpMessageInvoker.#ctor">
          <element api="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)" />
          <element api="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Http.HttpMessageInvoker.Dispose">
          <element api="M:System.Net.Http.HttpMessageInvoker.Dispose" />
          <element api="M:System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpMessageInvoker" />
      </containers>
      <file name="f06c44a8-2146-fd07-49d0-ce70102d7327" />
    </api>
    <api id="Methods.T:System.Net.Http.HttpMessageInvoker">
      <topicdata name="HttpMessageInvoker" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.HttpMessageInvoker" />
      <apidata name="HttpMessageInvoker" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Net.Http.HttpMessageInvoker.Dispose">
          <element api="M:System.Net.Http.HttpMessageInvoker.Dispose" />
          <element api="M:System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpMessageInvoker" />
      </containers>
      <file name="e872b33e-b304-4b89-8f1f-a8f6294446b1" />
    </api>
    <api id="Overload:System.Net.Http.HttpMessageInvoker.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.HttpMessageInvoker" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)" />
        <element api="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpMessageInvoker" ref="true" />
      </containers>
      <file name="883bbf29-7e8d-d421-78e9-49cecdcf9d61" />
    </api>
    <api id="Overload:System.Net.Http.HttpMessageInvoker.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.HttpMessageInvoker" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Http.HttpMessageInvoker.Dispose" />
        <element api="M:System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpMessageInvoker" ref="true" />
      </containers>
      <file name="0d958b21-95f7-0e1a-a671-b54efbc0b08d" />
    </api>
    <api id="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.HttpMessageInvoker.#ctor" />
      <parameters>
        <parameter name="handler">
          <type api="T:System.Net.Http.HttpMessageHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpMessageInvoker" ref="true" />
      </containers>
      <file name="113135d1-7e93-848f-e4be-d4f483371452" />
    </api>
    <api id="M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.HttpMessageInvoker.#ctor" />
      <parameters>
        <parameter name="handler">
          <type api="T:System.Net.Http.HttpMessageHandler" ref="true" />
        </parameter>
        <parameter name="disposeHandler">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpMessageInvoker" ref="true" />
      </containers>
      <file name="8eb43718-28de-c9f4-185a-9cc2c06fb560" />
    </api>
    <api id="M:System.Net.Http.HttpMessageInvoker.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpMessageInvoker.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpMessageInvoker" ref="true" />
      </containers>
      <file name="a86da5ae-12e1-c525-db77-1fafa9e6a506" />
    </api>
    <api id="M:System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Net.Http.HttpMessageInvoker.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpMessageInvoker" ref="true" />
      </containers>
      <file name="8c6c3bfc-37a4-eae2-b931-d664a0179095" />
    </api>
    <api id="M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="SendAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpMessageInvoker" ref="true" />
      </containers>
      <file name="22c0111e-b7fe-19d4-6c6c-01826db62950" />
    </api>
    <api id="T:System.Net.Http.HttpMethod">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.HttpMethod" />
      <apidata name="HttpMethod" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.HttpMethod" ref="true" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
      </containers>
      <file name="d63a4ea5-2c4f-299f-6666-0ea99f9d2f2f" />
    </api>
    <api id="AllMembers.T:System.Net.Http.HttpMethod">
      <topicdata name="HttpMethod" group="list" subgroup="members" typeTopicId="T:System.Net.Http.HttpMethod" />
      <apidata name="HttpMethod" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Net.Http.HttpMethod.#ctor(System.String)" />
        <element api="P:System.Net.Http.HttpMethod.Delete" />
        <element api="Overload:System.Net.Http.HttpMethod.Equals">
          <element api="M:System.Net.Http.HttpMethod.Equals(System.Net.Http.HttpMethod)" />
          <element api="M:System.Net.Http.HttpMethod.Equals(System.Object)" />
        </element>
        <element api="P:System.Net.Http.HttpMethod.Get" />
        <element api="M:System.Net.Http.HttpMethod.GetHashCode" />
        <element api="P:System.Net.Http.HttpMethod.Head" />
        <element api="P:System.Net.Http.HttpMethod.Method" />
        <element api="M:System.Net.Http.HttpMethod.op_Equality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)" />
        <element api="M:System.Net.Http.HttpMethod.op_Inequality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)" />
        <element api="P:System.Net.Http.HttpMethod.Options" />
        <element api="P:System.Net.Http.HttpMethod.Post" />
        <element api="P:System.Net.Http.HttpMethod.Put" />
        <element api="M:System.Net.Http.HttpMethod.ToString" />
        <element api="P:System.Net.Http.HttpMethod.Trace" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpMethod" />
      </containers>
      <file name="94cd6f64-ddaf-de59-90fa-93f675e9a15d" />
    </api>
    <api id="Methods.T:System.Net.Http.HttpMethod">
      <topicdata name="HttpMethod" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.HttpMethod" />
      <apidata name="HttpMethod" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.Http.HttpMethod.Equals">
          <element api="M:System.Net.Http.HttpMethod.Equals(System.Net.Http.HttpMethod)" />
          <element api="M:System.Net.Http.HttpMethod.Equals(System.Object)" />
        </element>
        <element api="M:System.Net.Http.HttpMethod.GetHashCode" />
        <element api="M:System.Net.Http.HttpMethod.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpMethod" />
      </containers>
      <file name="9ddcb1ef-2f7a-68bf-09f2-a6b7697fdc8e" />
    </api>
    <api id="Operators.T:System.Net.Http.HttpMethod">
      <topicdata name="HttpMethod" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Net.Http.HttpMethod" />
      <apidata name="HttpMethod" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Net.Http.HttpMethod.op_Equality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)" />
        <element api="M:System.Net.Http.HttpMethod.op_Inequality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpMethod" />
      </containers>
      <file name="6452d8b2-bc41-c337-3eb1-75af3ecfa988" />
    </api>
    <api id="Properties.T:System.Net.Http.HttpMethod">
      <topicdata name="HttpMethod" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.HttpMethod" />
      <apidata name="HttpMethod" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Net.Http.HttpMethod.Delete" />
        <element api="P:System.Net.Http.HttpMethod.Get" />
        <element api="P:System.Net.Http.HttpMethod.Head" />
        <element api="P:System.Net.Http.HttpMethod.Method" />
        <element api="P:System.Net.Http.HttpMethod.Options" />
        <element api="P:System.Net.Http.HttpMethod.Post" />
        <element api="P:System.Net.Http.HttpMethod.Put" />
        <element api="P:System.Net.Http.HttpMethod.Trace" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpMethod" />
      </containers>
      <file name="94dd83b8-3070-9278-04af-348ebe4eb79e" />
    </api>
    <api id="Overload:System.Net.Http.HttpMethod.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.HttpMethod" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Http.HttpMethod.Equals(System.Net.Http.HttpMethod)" />
        <element api="M:System.Net.Http.HttpMethod.Equals(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpMethod" ref="true" />
      </containers>
      <file name="76f5b50d-ad41-300e-4b73-eb2335f6dc60" />
    </api>
    <api id="M:System.Net.Http.HttpMethod.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="method">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpMethod" ref="true" />
      </containers>
      <file name="4a4f928c-aacb-d9fb-4475-a6e490a30866" />
    </api>
    <api id="P:System.Net.Http.HttpMethod.Delete">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Delete" />
      <returns>
        <type api="T:System.Net.Http.HttpMethod" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpMethod" ref="true" />
      </containers>
      <file name="5d10b9d9-ef21-c967-2a84-cd9e18418ad7" />
    </api>
    <api id="M:System.Net.Http.HttpMethod.Equals(System.Net.Http.HttpMethod)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpMethod.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Net.Http.HttpMethod" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Net.Http.HttpMethod" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpMethod" ref="true" />
      </containers>
      <file name="76f25929-9101-a89c-63ae-c8299647b8e3" />
    </api>
    <api id="M:System.Net.Http.HttpMethod.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpMethod.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpMethod" ref="true" />
      </containers>
      <file name="8a50dcc5-f773-7e1e-04d7-73ee6e80d9ae" />
    </api>
    <api id="P:System.Net.Http.HttpMethod.Get">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Get" />
      <returns>
        <type api="T:System.Net.Http.HttpMethod" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpMethod" ref="true" />
      </containers>
      <file name="cf9aa865-fc55-f81c-38cb-57b11c79ba90" />
    </api>
    <api id="M:System.Net.Http.HttpMethod.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpMethod" ref="true" />
      </containers>
      <file name="77894717-02b2-505e-0196-969d37a201ef" />
    </api>
    <api id="P:System.Net.Http.HttpMethod.Head">
      <topicdata group="api" />
      <apidata name="Head" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Head" />
      <returns>
        <type api="T:System.Net.Http.HttpMethod" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpMethod" ref="true" />
      </containers>
      <file name="92d82dad-bb0d-7269-d1ae-bd9ad9b57409" />
    </api>
    <api id="P:System.Net.Http.HttpMethod.Method">
      <topicdata group="api" />
      <apidata name="Method" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Method" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpMethod" ref="true" />
      </containers>
      <file name="a33fe511-f2e9-d27f-79cf-e04c7074ac3a" />
    </api>
    <api id="M:System.Net.Http.HttpMethod.op_Equality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Net.Http.HttpMethod" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Net.Http.HttpMethod" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpMethod" ref="true" />
      </containers>
      <file name="0132a72b-da29-d38f-74ff-084672d5d903" />
    </api>
    <api id="M:System.Net.Http.HttpMethod.op_Inequality(System.Net.Http.HttpMethod,System.Net.Http.HttpMethod)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Net.Http.HttpMethod" ref="true" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Net.Http.HttpMethod" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpMethod" ref="true" />
      </containers>
      <file name="92a23b66-edeb-2264-4ef9-482fb6972677" />
    </api>
    <api id="P:System.Net.Http.HttpMethod.Options">
      <topicdata group="api" />
      <apidata name="Options" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Options" />
      <returns>
        <type api="T:System.Net.Http.HttpMethod" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpMethod" ref="true" />
      </containers>
      <file name="f6248dce-4714-0ac9-4aa6-bf0848429d06" />
    </api>
    <api id="P:System.Net.Http.HttpMethod.Post">
      <topicdata group="api" />
      <apidata name="Post" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Post" />
      <returns>
        <type api="T:System.Net.Http.HttpMethod" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpMethod" ref="true" />
      </containers>
      <file name="569778c5-5490-d926-7aca-2bba34d6fc0e" />
    </api>
    <api id="P:System.Net.Http.HttpMethod.Put">
      <topicdata group="api" />
      <apidata name="Put" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Put" />
      <returns>
        <type api="T:System.Net.Http.HttpMethod" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpMethod" ref="true" />
      </containers>
      <file name="b7110da9-5e7b-b41f-3122-a78a967bafc1" />
    </api>
    <api id="M:System.Net.Http.HttpMethod.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpMethod" ref="true" />
      </containers>
      <file name="fbaf63c8-781d-3279-d23a-b2e6ccbb3128" />
    </api>
    <api id="P:System.Net.Http.HttpMethod.Trace">
      <topicdata group="api" />
      <apidata name="Trace" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Trace" />
      <returns>
        <type api="T:System.Net.Http.HttpMethod" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpMethod" ref="true" />
      </containers>
      <file name="b9ce963a-4610-af88-f1ab-ec11daf55609" />
    </api>
    <api id="T:System.Net.Http.HttpRequestException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.HttpRequestException" />
      <apidata name="HttpRequestException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.Http.HttpRequestException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
      </containers>
      <file name="5faf52f2-323f-6287-c0ac-0f6fe7d80738" />
    </api>
    <api id="AllMembers.T:System.Net.Http.HttpRequestException">
      <topicdata name="HttpRequestException" group="list" subgroup="members" typeTopicId="T:System.Net.Http.HttpRequestException" />
      <apidata name="HttpRequestException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.Http.HttpRequestException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.Http.HttpRequestException.#ctor">
          <element api="M:System.Net.Http.HttpRequestException.#ctor" />
          <element api="M:System.Net.Http.HttpRequestException.#ctor(System.String)" />
          <element api="M:System.Net.Http.HttpRequestException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpRequestException" />
      </containers>
      <file name="0410bb6c-424c-11a1-4883-fc8bbec01ea2" />
    </api>
    <api id="Methods.T:System.Net.Http.HttpRequestException">
      <topicdata name="HttpRequestException" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.HttpRequestException" />
      <apidata name="HttpRequestException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.Http.HttpRequestException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpRequestException" />
      </containers>
      <file name="a58671ca-23fd-08fa-9343-245ab9e173b5" />
    </api>
    <api id="Properties.T:System.Net.Http.HttpRequestException">
      <topicdata name="HttpRequestException" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.HttpRequestException" />
      <apidata name="HttpRequestException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.Http.HttpRequestException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpRequestException" />
      </containers>
      <file name="a8d80047-440f-26d8-927c-2689910a683e" />
    </api>
    <api id="Overload:System.Net.Http.HttpRequestException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.HttpRequestException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.Http.HttpRequestException.#ctor" />
        <element api="M:System.Net.Http.HttpRequestException.#ctor(System.String)" />
        <element api="M:System.Net.Http.HttpRequestException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpRequestException" ref="true" />
      </containers>
      <file name="c1ee5eb0-7a30-70fb-5475-305131e329f1" />
    </api>
    <api id="M:System.Net.Http.HttpRequestException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.HttpRequestException.#ctor" />
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpRequestException" ref="true" />
      </containers>
      <file name="67b913a3-a957-be87-c2af-18920f6888b7" />
    </api>
    <api id="M:System.Net.Http.HttpRequestException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.HttpRequestException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpRequestException" ref="true" />
      </containers>
      <file name="b7f2d7b3-e461-3187-8df5-bb9160d040f0" />
    </api>
    <api id="M:System.Net.Http.HttpRequestException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.HttpRequestException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpRequestException" ref="true" />
      </containers>
      <file name="4667a049-a5d7-cdbc-9874-fee07d8efff1" />
    </api>
    <api id="T:System.Net.Http.HttpRequestMessage">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.HttpRequestMessage" />
      <apidata name="HttpRequestMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.Http.HttpRequestMessage.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
      </containers>
      <file name="845c8c11-2948-b3ff-18f2-91a2ee215e47" />
    </api>
    <api id="AllMembers.T:System.Net.Http.HttpRequestMessage">
      <topicdata name="HttpRequestMessage" group="list" subgroup="members" typeTopicId="T:System.Net.Http.HttpRequestMessage" />
      <apidata name="HttpRequestMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.Http.HttpRequestMessage.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.Http.HttpRequestMessage.#ctor">
          <element api="M:System.Net.Http.HttpRequestMessage.#ctor" />
          <element api="M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.String)" />
          <element api="M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.Uri)" />
        </element>
        <element api="P:System.Net.Http.HttpRequestMessage.Content" />
        <element api="Overload:System.Net.Http.HttpRequestMessage.Dispose">
          <element api="M:System.Net.Http.HttpRequestMessage.Dispose" />
          <element api="M:System.Net.Http.HttpRequestMessage.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Net.Http.HttpRequestMessage.Headers" />
        <element api="P:System.Net.Http.HttpRequestMessage.Method" />
        <element api="P:System.Net.Http.HttpRequestMessage.Properties" />
        <element api="P:System.Net.Http.HttpRequestMessage.RequestUri" />
        <element api="M:System.Net.Http.HttpRequestMessage.ToString" />
        <element api="P:System.Net.Http.HttpRequestMessage.Version" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpRequestMessage" />
      </containers>
      <file name="6eae142b-bf69-4230-d88c-6feacc46b243" />
    </api>
    <api id="Methods.T:System.Net.Http.HttpRequestMessage">
      <topicdata name="HttpRequestMessage" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.HttpRequestMessage" />
      <apidata name="HttpRequestMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.Http.HttpRequestMessage.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.Http.HttpRequestMessage.Dispose">
          <element api="M:System.Net.Http.HttpRequestMessage.Dispose" />
          <element api="M:System.Net.Http.HttpRequestMessage.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Net.Http.HttpRequestMessage.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpRequestMessage" />
      </containers>
      <file name="262b1757-e268-842b-4ea2-eac075ee78c0" />
    </api>
    <api id="Properties.T:System.Net.Http.HttpRequestMessage">
      <topicdata name="HttpRequestMessage" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.HttpRequestMessage" />
      <apidata name="HttpRequestMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.Http.HttpRequestMessage.#ctor" />
      <elements>
        <element api="P:System.Net.Http.HttpRequestMessage.Content" />
        <element api="P:System.Net.Http.HttpRequestMessage.Headers" />
        <element api="P:System.Net.Http.HttpRequestMessage.Method" />
        <element api="P:System.Net.Http.HttpRequestMessage.Properties" />
        <element api="P:System.Net.Http.HttpRequestMessage.RequestUri" />
        <element api="P:System.Net.Http.HttpRequestMessage.Version" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpRequestMessage" />
      </containers>
      <file name="a8a32fae-88f8-93c9-7b5c-eef341a5501a" />
    </api>
    <api id="Overload:System.Net.Http.HttpRequestMessage.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.HttpRequestMessage" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.Http.HttpRequestMessage.#ctor" />
        <element api="M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.String)" />
        <element api="M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.Uri)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
      </containers>
      <file name="0e90e1e4-2bcb-890c-f7fa-71a72da4e9f8" />
    </api>
    <api id="Overload:System.Net.Http.HttpRequestMessage.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.HttpRequestMessage" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Http.HttpRequestMessage.Dispose" />
        <element api="M:System.Net.Http.HttpRequestMessage.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
      </containers>
      <file name="93a34858-bf9c-f5ba-ebbf-a353ce1c2abc" />
    </api>
    <api id="M:System.Net.Http.HttpRequestMessage.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.HttpRequestMessage.#ctor" />
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
      </containers>
      <file name="bbdd9e9d-e2d1-b222-311a-2064f9b3296d" />
    </api>
    <api id="M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.HttpRequestMessage.#ctor" />
      <parameters>
        <parameter name="method">
          <type api="T:System.Net.Http.HttpMethod" ref="true" />
        </parameter>
        <parameter name="requestUri">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
      </containers>
      <file name="eeb01e67-e8f7-e524-9b67-a68e34ea1f2f" />
    </api>
    <api id="M:System.Net.Http.HttpRequestMessage.#ctor(System.Net.Http.HttpMethod,System.Uri)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.HttpRequestMessage.#ctor" />
      <parameters>
        <parameter name="method">
          <type api="T:System.Net.Http.HttpMethod" ref="true" />
        </parameter>
        <parameter name="requestUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
      </containers>
      <file name="3a9c7878-a0a9-dcbe-6aec-a870eeb3889d" />
    </api>
    <api id="P:System.Net.Http.HttpRequestMessage.Content">
      <topicdata group="api" />
      <apidata name="Content" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Content" />
      <setter name="set_Content" />
      <returns>
        <type api="T:System.Net.Http.HttpContent" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
      </containers>
      <file name="bcd60c27-d172-96d7-2914-d39f91877707" />
    </api>
    <api id="M:System.Net.Http.HttpRequestMessage.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpRequestMessage.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
      </containers>
      <file name="b8236bb4-ad5a-cc9d-6116-92383140e9ee" />
    </api>
    <api id="M:System.Net.Http.HttpRequestMessage.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Net.Http.HttpRequestMessage.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
      </containers>
      <file name="8ce7734d-0bf0-e9f8-2028-485271186cc0" />
    </api>
    <api id="P:System.Net.Http.HttpRequestMessage.Headers">
      <topicdata group="api" />
      <apidata name="Headers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Headers" />
      <returns>
        <type api="T:System.Net.Http.Headers.HttpRequestHeaders" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
      </containers>
      <file name="ca50dfc9-5b83-bdc0-d81f-68627bc88ebc" />
    </api>
    <api id="P:System.Net.Http.HttpRequestMessage.Method">
      <topicdata group="api" />
      <apidata name="Method" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Method" />
      <setter name="set_Method" />
      <returns>
        <type api="T:System.Net.Http.HttpMethod" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
      </containers>
      <file name="26c69a24-0c67-a559-0ab5-02dac3df48f0" />
    </api>
    <api id="P:System.Net.Http.HttpRequestMessage.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
      </containers>
      <file name="b9a34d9f-6b42-7805-da7c-4474d0e670a0" />
    </api>
    <api id="P:System.Net.Http.HttpRequestMessage.RequestUri">
      <topicdata group="api" />
      <apidata name="RequestUri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RequestUri" />
      <setter name="set_RequestUri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
      </containers>
      <file name="aea0167f-07f6-6b69-ca07-da6dfe09c506" />
    </api>
    <api id="M:System.Net.Http.HttpRequestMessage.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
      </containers>
      <file name="4c00bcb6-04a3-63f4-a1b9-89eb3267c13b" />
    </api>
    <api id="P:System.Net.Http.HttpRequestMessage.Version">
      <topicdata group="api" />
      <apidata name="Version" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Version" />
      <setter name="set_Version" />
      <returns>
        <type api="T:System.Version" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
      </containers>
      <file name="36a6018a-eb54-1849-7a92-2b7f887202dd" />
    </api>
    <api id="T:System.Net.Http.HttpResponseMessage">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.HttpResponseMessage" />
      <apidata name="HttpResponseMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.Http.HttpResponseMessage.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
      </containers>
      <file name="93b2a805-79e3-582b-26a4-7e3b18e3e60b" />
    </api>
    <api id="AllMembers.T:System.Net.Http.HttpResponseMessage">
      <topicdata name="HttpResponseMessage" group="list" subgroup="members" typeTopicId="T:System.Net.Http.HttpResponseMessage" />
      <apidata name="HttpResponseMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.Http.HttpResponseMessage.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.Http.HttpResponseMessage.#ctor">
          <element api="M:System.Net.Http.HttpResponseMessage.#ctor" />
          <element api="M:System.Net.Http.HttpResponseMessage.#ctor(System.Net.HttpStatusCode)" />
        </element>
        <element api="P:System.Net.Http.HttpResponseMessage.Content" />
        <element api="Overload:System.Net.Http.HttpResponseMessage.Dispose">
          <element api="M:System.Net.Http.HttpResponseMessage.Dispose" />
          <element api="M:System.Net.Http.HttpResponseMessage.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode" />
        <element api="P:System.Net.Http.HttpResponseMessage.Headers" />
        <element api="P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode" />
        <element api="P:System.Net.Http.HttpResponseMessage.ReasonPhrase" />
        <element api="P:System.Net.Http.HttpResponseMessage.RequestMessage" />
        <element api="P:System.Net.Http.HttpResponseMessage.StatusCode" />
        <element api="M:System.Net.Http.HttpResponseMessage.ToString" />
        <element api="P:System.Net.Http.HttpResponseMessage.Version" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpResponseMessage" />
      </containers>
      <file name="80b47958-111f-2141-4693-40b38eb307f4" />
    </api>
    <api id="Methods.T:System.Net.Http.HttpResponseMessage">
      <topicdata name="HttpResponseMessage" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.HttpResponseMessage" />
      <apidata name="HttpResponseMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.Http.HttpResponseMessage.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.Http.HttpResponseMessage.Dispose">
          <element api="M:System.Net.Http.HttpResponseMessage.Dispose" />
          <element api="M:System.Net.Http.HttpResponseMessage.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode" />
        <element api="M:System.Net.Http.HttpResponseMessage.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpResponseMessage" />
      </containers>
      <file name="0bbc147e-5337-b803-a32c-9283098f2923" />
    </api>
    <api id="Properties.T:System.Net.Http.HttpResponseMessage">
      <topicdata name="HttpResponseMessage" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.HttpResponseMessage" />
      <apidata name="HttpResponseMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.Http.HttpResponseMessage.#ctor" />
      <elements>
        <element api="P:System.Net.Http.HttpResponseMessage.Content" />
        <element api="P:System.Net.Http.HttpResponseMessage.Headers" />
        <element api="P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode" />
        <element api="P:System.Net.Http.HttpResponseMessage.ReasonPhrase" />
        <element api="P:System.Net.Http.HttpResponseMessage.RequestMessage" />
        <element api="P:System.Net.Http.HttpResponseMessage.StatusCode" />
        <element api="P:System.Net.Http.HttpResponseMessage.Version" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpResponseMessage" />
      </containers>
      <file name="d493bdb5-aa65-64b6-d979-7dde242f35a3" />
    </api>
    <api id="Overload:System.Net.Http.HttpResponseMessage.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.HttpResponseMessage" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.Http.HttpResponseMessage.#ctor" />
        <element api="M:System.Net.Http.HttpResponseMessage.#ctor(System.Net.HttpStatusCode)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </containers>
      <file name="42359519-3a5e-22a0-9cac-fb327f1218bb" />
    </api>
    <api id="Overload:System.Net.Http.HttpResponseMessage.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.HttpResponseMessage" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Http.HttpResponseMessage.Dispose" />
        <element api="M:System.Net.Http.HttpResponseMessage.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </containers>
      <file name="2021a5b4-7846-7b4f-c803-246ee661c38d" />
    </api>
    <api id="M:System.Net.Http.HttpResponseMessage.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.HttpResponseMessage.#ctor" />
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </containers>
      <file name="5cda72d7-e6cd-ebbf-9e6a-e974e5e00624" />
    </api>
    <api id="M:System.Net.Http.HttpResponseMessage.#ctor(System.Net.HttpStatusCode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.HttpResponseMessage.#ctor" />
      <parameters>
        <parameter name="statusCode">
          <type api="T:System.Net.HttpStatusCode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </containers>
      <file name="c3d8d4e1-16f2-e58d-64f3-d33d41c4fff6" />
    </api>
    <api id="P:System.Net.Http.HttpResponseMessage.Content">
      <topicdata group="api" />
      <apidata name="Content" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Content" />
      <setter name="set_Content" />
      <returns>
        <type api="T:System.Net.Http.HttpContent" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </containers>
      <file name="c739d629-38ef-ec51-ba3c-3c608c5ea955" />
    </api>
    <api id="M:System.Net.Http.HttpResponseMessage.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.HttpResponseMessage.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </containers>
      <file name="3f77bda7-d47e-d194-e5ec-c55b8fff30da" />
    </api>
    <api id="M:System.Net.Http.HttpResponseMessage.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Net.Http.HttpResponseMessage.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </containers>
      <file name="1b2d0534-6158-dfd4-d654-f6282866d500" />
    </api>
    <api id="M:System.Net.Http.HttpResponseMessage.EnsureSuccessStatusCode">
      <topicdata group="api" />
      <apidata name="EnsureSuccessStatusCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </containers>
      <file name="74ee374e-7e28-dfe7-89fe-2b7f581755cd" />
    </api>
    <api id="P:System.Net.Http.HttpResponseMessage.Headers">
      <topicdata group="api" />
      <apidata name="Headers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Headers" />
      <returns>
        <type api="T:System.Net.Http.Headers.HttpResponseHeaders" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </containers>
      <file name="e63ea07c-dde9-20b8-c0d9-330c2d2d8467" />
    </api>
    <api id="P:System.Net.Http.HttpResponseMessage.IsSuccessStatusCode">
      <topicdata group="api" />
      <apidata name="IsSuccessStatusCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsSuccessStatusCode" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </containers>
      <file name="91efa785-3189-ea4f-6046-2197c050ac06" />
    </api>
    <api id="P:System.Net.Http.HttpResponseMessage.ReasonPhrase">
      <topicdata group="api" />
      <apidata name="ReasonPhrase" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReasonPhrase" />
      <setter name="set_ReasonPhrase" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </containers>
      <file name="80eb0e4f-fb7c-1a74-1f60-0bd7e2f1e42f" />
    </api>
    <api id="P:System.Net.Http.HttpResponseMessage.RequestMessage">
      <topicdata group="api" />
      <apidata name="RequestMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RequestMessage" />
      <setter name="set_RequestMessage" />
      <returns>
        <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </containers>
      <file name="1e23801f-ded1-272d-2783-fbb217af6ffb" />
    </api>
    <api id="P:System.Net.Http.HttpResponseMessage.StatusCode">
      <topicdata group="api" />
      <apidata name="StatusCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_StatusCode" />
      <setter name="set_StatusCode" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </containers>
      <file name="b0910a5f-94e7-d4da-43e7-3ec889c8b3d2" />
    </api>
    <api id="M:System.Net.Http.HttpResponseMessage.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </containers>
      <file name="7b61da9b-a3d3-ccc4-c34a-cf3acdde2251" />
    </api>
    <api id="P:System.Net.Http.HttpResponseMessage.Version">
      <topicdata group="api" />
      <apidata name="Version" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Version" />
      <setter name="set_Version" />
      <returns>
        <type api="T:System.Version" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </containers>
      <file name="bab2cba6-5ba3-c545-556d-d1a6d8ca54a3" />
    </api>
    <api id="T:System.Net.Http.MessageProcessingHandler">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.MessageProcessingHandler" />
      <apidata name="MessageProcessingHandler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Net.Http.DelegatingHandler" ref="true" />
          <type api="T:System.Net.Http.HttpMessageHandler" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
      </containers>
      <file name="bceab392-7d76-c4d8-8d66-fdc8c10bf098" />
    </api>
    <api id="AllMembers.T:System.Net.Http.MessageProcessingHandler">
      <topicdata name="MessageProcessingHandler" group="list" subgroup="members" typeTopicId="T:System.Net.Http.MessageProcessingHandler" />
      <apidata name="MessageProcessingHandler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Net.Http.MessageProcessingHandler.Dispose">
          <element api="M:System.Net.Http.HttpMessageHandler.Dispose" />
          <element api="M:System.Net.Http.DelegatingHandler.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Net.Http.DelegatingHandler.InnerHandler" />
        <element api="Overload:System.Net.Http.MessageProcessingHandler.#ctor">
          <element api="M:System.Net.Http.MessageProcessingHandler.#ctor" />
          <element api="M:System.Net.Http.MessageProcessingHandler.#ctor(System.Net.Http.HttpMessageHandler)" />
        </element>
        <element api="M:System.Net.Http.MessageProcessingHandler.ProcessRequest(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
        <element api="M:System.Net.Http.MessageProcessingHandler.ProcessResponse(System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)" />
        <element api="M:System.Net.Http.MessageProcessingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.MessageProcessingHandler" />
      </containers>
      <file name="23d5e285-955f-799e-edab-9bbfb90ea19d" />
    </api>
    <api id="Methods.T:System.Net.Http.MessageProcessingHandler">
      <topicdata name="MessageProcessingHandler" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.MessageProcessingHandler" />
      <apidata name="MessageProcessingHandler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Net.Http.MessageProcessingHandler.Dispose">
          <element api="M:System.Net.Http.HttpMessageHandler.Dispose" />
          <element api="M:System.Net.Http.DelegatingHandler.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Net.Http.MessageProcessingHandler.ProcessRequest(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
        <element api="M:System.Net.Http.MessageProcessingHandler.ProcessResponse(System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)" />
        <element api="M:System.Net.Http.MessageProcessingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.MessageProcessingHandler" />
      </containers>
      <file name="3cb85008-6af5-a2e5-bce4-d89096c57e67" />
    </api>
    <api id="Properties.T:System.Net.Http.MessageProcessingHandler">
      <topicdata name="MessageProcessingHandler" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.MessageProcessingHandler" />
      <apidata name="MessageProcessingHandler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Net.Http.DelegatingHandler.InnerHandler" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.MessageProcessingHandler" />
      </containers>
      <file name="c195a4bd-442f-7279-3037-4780aed809c5" />
    </api>
    <api id="Overload:System.Net.Http.MessageProcessingHandler.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.MessageProcessingHandler" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.Http.MessageProcessingHandler.#ctor" />
        <element api="M:System.Net.Http.MessageProcessingHandler.#ctor(System.Net.Http.HttpMessageHandler)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.MessageProcessingHandler" ref="true" />
      </containers>
      <file name="8a71bcab-ae83-04d0-053e-a9b2554096c7" />
    </api>
    <api id="M:System.Net.Http.MessageProcessingHandler.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Net.Http.MessageProcessingHandler.#ctor" />
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.MessageProcessingHandler" ref="true" />
      </containers>
      <file name="41c71620-385d-3eed-72dc-b581342bddbb" />
    </api>
    <api id="M:System.Net.Http.MessageProcessingHandler.#ctor(System.Net.Http.HttpMessageHandler)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Net.Http.MessageProcessingHandler.#ctor" />
      <parameters>
        <parameter name="innerHandler">
          <type api="T:System.Net.Http.HttpMessageHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.MessageProcessingHandler" ref="true" />
      </containers>
      <file name="13fa1d6a-4dae-1104-e00d-5116313b039d" />
    </api>
    <api id="M:System.Net.Http.MessageProcessingHandler.ProcessRequest(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="ProcessRequest" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.MessageProcessingHandler" ref="true" />
      </containers>
      <file name="f61e9f72-b010-ac23-b88e-768d204906ff" />
    </api>
    <api id="M:System.Net.Http.MessageProcessingHandler.ProcessResponse(System.Net.Http.HttpResponseMessage,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="ProcessResponse" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="response">
          <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.MessageProcessingHandler" ref="true" />
      </containers>
      <file name="5ccf0485-e1b5-ecd4-c836-a0b1239e4159" />
    </api>
    <api id="M:System.Net.Http.MessageProcessingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="SendAsync" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" final="true" />
      <overrides>
        <member api="M:System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <type api="T:System.Net.Http.DelegatingHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="request">
          <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.MessageProcessingHandler" ref="true" />
      </containers>
      <file name="f32a3fba-095b-621e-57c5-32610c47ad45" />
    </api>
    <api id="T:System.Net.Http.MultipartContent">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.MultipartContent" />
      <apidata name="MultipartContent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.Http.MultipartContent.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Net.Http.HttpContent" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Net.Http.MultipartFormDataContent" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
      </containers>
      <file name="211d51ed-f269-6021-28f5-f694def31dd3" />
    </api>
    <api id="AllMembers.T:System.Net.Http.MultipartContent">
      <topicdata name="MultipartContent" group="list" subgroup="members" typeTopicId="T:System.Net.Http.MultipartContent" />
      <apidata name="MultipartContent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.Http.MultipartContent.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Net.Http.MultipartContent.CopyToAsync">
          <element api="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)" />
          <element api="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)" />
        </element>
        <element api="M:System.Net.Http.HttpContent.CreateContentReadStreamAsync" />
        <element api="Overload:System.Net.Http.MultipartContent.Dispose">
          <element api="M:System.Net.Http.HttpContent.Dispose" />
          <element api="M:System.Net.Http.MultipartContent.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Net.Http.HttpContent.Headers" />
        <element api="Overload:System.Net.Http.MultipartContent.LoadIntoBufferAsync">
          <element api="M:System.Net.Http.HttpContent.LoadIntoBufferAsync" />
          <element api="M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)" />
        </element>
        <element api="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync" />
        <element api="M:System.Net.Http.HttpContent.ReadAsStreamAsync" />
        <element api="M:System.Net.Http.HttpContent.ReadAsStringAsync" />
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Net.Http.HttpContent" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Net.Http.HttpContent" ref="true" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.Net.Http.HttpContent" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.Net.Http.HttpContent" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.Net.Http.HttpContent" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Net.Http.HttpContent" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Net.Http.HttpContent" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Net.Http.HttpContent" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq.Parallel" module="System.Linq.Parallel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq.Parallel" module="System.Linq.Parallel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq.Queryable" module="System.Linq.Queryable" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq.Queryable" module="System.Linq.Queryable" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.Net.Http.MultipartContent.#ctor">
          <element api="M:System.Net.Http.MultipartContent.#ctor" />
          <element api="M:System.Net.Http.MultipartContent.#ctor(System.String)" />
          <element api="M:System.Net.Http.MultipartContent.#ctor(System.String,System.String)" />
        </element>
        <element api="M:System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)" />
        <element api="M:System.Net.Http.MultipartContent.GetEnumerator" />
        <element api="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)" />
        <element api="M:System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.MultipartContent" />
      </containers>
      <file name="4302a08e-d5c9-5f57-134c-b2964fb49f3b" />
    </api>
    <api id="Methods.T:System.Net.Http.MultipartContent">
      <topicdata name="MultipartContent" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.MultipartContent" />
      <apidata name="MultipartContent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.Http.MultipartContent.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Net.Http.MultipartContent.CopyToAsync">
          <element api="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)" />
          <element api="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)" />
        </element>
        <element api="M:System.Net.Http.HttpContent.CreateContentReadStreamAsync" />
        <element api="Overload:System.Net.Http.MultipartContent.Dispose">
          <element api="M:System.Net.Http.HttpContent.Dispose" />
          <element api="M:System.Net.Http.MultipartContent.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Http.MultipartContent.LoadIntoBufferAsync">
          <element api="M:System.Net.Http.HttpContent.LoadIntoBufferAsync" />
          <element api="M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)" />
        </element>
        <element api="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync" />
        <element api="M:System.Net.Http.HttpContent.ReadAsStreamAsync" />
        <element api="M:System.Net.Http.HttpContent.ReadAsStringAsync" />
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Net.Http.HttpContent" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Net.Http.HttpContent" ref="true" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.Net.Http.HttpContent" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.Net.Http.HttpContent" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.Net.Http.HttpContent" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Net.Http.HttpContent" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Net.Http.HttpContent" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Net.Http.HttpContent" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Net.Http.HttpContent" ref="true" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq.Parallel" module="System.Linq.Parallel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq.Parallel" module="System.Linq.Parallel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpContent" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq.Queryable" module="System.Linq.Queryable" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Linq.Queryable" module="System.Linq.Queryable" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Linq" module="System.Linq" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)" />
        <element api="M:System.Net.Http.MultipartContent.GetEnumerator" />
        <element api="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)" />
        <element api="M:System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.MultipartContent" />
      </containers>
      <file name="882db79c-99be-9e2e-d9ea-f95909e3dc9f" />
    </api>
    <api id="Properties.T:System.Net.Http.MultipartContent">
      <topicdata name="MultipartContent" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.MultipartContent" />
      <apidata name="MultipartContent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.Http.MultipartContent.#ctor" />
      <elements>
        <element api="P:System.Net.Http.HttpContent.Headers" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.MultipartContent" />
      </containers>
      <file name="fc88be01-0ddf-9713-a652-c6fff830ca1d" />
    </api>
    <api id="Overload:System.Net.Http.MultipartContent.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.MultipartContent" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Http.HttpContent.Dispose" />
        <element api="M:System.Net.Http.MultipartContent.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.MultipartContent" ref="true" />
      </containers>
      <file name="63e96cb4-5b76-1ecb-440e-2fb11700006c" />
    </api>
    <api id="Overload:System.Net.Http.MultipartContent.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.MultipartContent" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.Http.MultipartContent.#ctor" />
        <element api="M:System.Net.Http.MultipartContent.#ctor(System.String)" />
        <element api="M:System.Net.Http.MultipartContent.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.MultipartContent" ref="true" />
      </containers>
      <file name="4f297eb6-59a4-ef45-4b89-3233a28fb26b" />
    </api>
    <api id="M:System.Net.Http.MultipartContent.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.MultipartContent.#ctor" />
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.MultipartContent" ref="true" />
      </containers>
      <file name="98076ecd-8daa-1c5e-623f-a5865d951c9b" />
    </api>
    <api id="M:System.Net.Http.MultipartContent.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.MultipartContent.#ctor" />
      <parameters>
        <parameter name="subtype">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.MultipartContent" ref="true" />
      </containers>
      <file name="da6ddd1e-66c8-4f06-4123-af9d0edc1d2b" />
    </api>
    <api id="M:System.Net.Http.MultipartContent.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.MultipartContent.#ctor" />
      <parameters>
        <parameter name="subtype">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="boundary">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.MultipartContent" ref="true" />
      </containers>
      <file name="383fd0f9-c9fe-8f61-cea5-d66011c4edbb" />
    </api>
    <api id="M:System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="content">
          <type api="T:System.Net.Http.HttpContent" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.MultipartContent" ref="true" />
      </containers>
      <file name="7b6d99ef-abc3-f613-6914-c6356e31c627" />
    </api>
    <api id="M:System.Net.Http.MultipartContent.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Net.Http.MultipartContent.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.Http.HttpContent.Dispose(System.Boolean)">
          <type api="T:System.Net.Http.HttpContent" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.MultipartContent" ref="true" />
      </containers>
      <file name="fca4fc38-0f37-a5c9-0bc8-4537e4fc5476" />
    </api>
    <api id="M:System.Net.Http.MultipartContent.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.HttpContent" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Net.Http.HttpContent" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.MultipartContent" ref="true" />
      </containers>
      <file name="1f1aceb3-ceee-79f9-1da8-3b7ac276b5bd" />
    </api>
    <api id="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <topicdata group="api" />
      <apidata name="SerializeToStreamAsync" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
          <type api="T:System.Net.Http.HttpContent" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Net.TransportContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.MultipartContent" ref="true" />
      </containers>
      <file name="66c2d70e-1cd9-12e6-f883-92848d902160" />
    </api>
    <api id="M:System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.MultipartContent" ref="true" />
      </containers>
      <file name="cf118a91-23b7-32ce-7acc-a90caceedc0b" />
    </api>
    <api id="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)">
      <topicdata group="api" />
      <apidata name="TryComputeLength" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.Http.HttpContent.TryComputeLength(System.Int64@)">
          <type api="T:System.Net.Http.HttpContent" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="length" out="true">
          <referenceTo>
            <type api="T:System.Int64" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.MultipartContent" ref="true" />
      </containers>
      <file name="684bf3cc-d1e9-cab9-e76d-da0337331c67" />
    </api>
    <api id="T:System.Net.Http.MultipartFormDataContent">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.MultipartFormDataContent" />
      <apidata name="MultipartFormDataContent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.Http.MultipartFormDataContent.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Net.Http.MultipartContent" ref="true" />
          <type api="T:System.Net.Http.HttpContent" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
      </containers>
      <file name="5936dc00-1c20-7ccf-5643-bc4a94456a88" />
    </api>
    <api id="AllMembers.T:System.Net.Http.MultipartFormDataContent">
      <topicdata name="MultipartFormDataContent" group="list" subgroup="members" typeTopicId="T:System.Net.Http.MultipartFormDataContent" />
      <apidata name="MultipartFormDataContent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.Http.MultipartFormDataContent.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Net.Http.MultipartFormDataContent.CopyToAsync">
          <element api="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)" />
          <element api="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)" />
        </element>
        <element api="M:System.Net.Http.HttpContent.CreateContentReadStreamAsync" />
        <element api="Overload:System.Net.Http.MultipartFormDataContent.Dispose">
          <element api="M:System.Net.Http.HttpContent.Dispose" />
          <element api="M:System.Net.Http.MultipartContent.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Net.Http.HttpContent.Headers" />
        <element api="Overload:System.Net.Http.MultipartFormDataContent.LoadIntoBufferAsync">
          <element api="M:System.Net.Http.HttpContent.LoadIntoBufferAsync" />
          <element api="M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)" />
        </element>
        <element api="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync" />
        <element api="M:System.Net.Http.HttpContent.ReadAsStreamAsync" />
        <element api="M:System.Net.Http.HttpContent.ReadAsStringAsync" />
        <element api="M:System.Net.Http.MultipartContent.GetEnumerator" />
        <element api="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)" />
        <element api="M:System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)" />
        <element api="Overload:System.Net.Http.MultipartFormDataContent.#ctor">
          <element api="M:System.Net.Http.MultipartFormDataContent.#ctor" />
          <element api="M:System.Net.Http.MultipartFormDataContent.#ctor(System.String)" />
        </element>
        <element api="Overload:System.Net.Http.MultipartFormDataContent.Add">
          <element api="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent)" />
          <element api="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String)" />
          <element api="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String,System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.MultipartFormDataContent" />
      </containers>
      <file name="82969e02-bfa9-0ea9-4d79-4b9e2d5db5e2" />
    </api>
    <api id="Methods.T:System.Net.Http.MultipartFormDataContent">
      <topicdata name="MultipartFormDataContent" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.MultipartFormDataContent" />
      <apidata name="MultipartFormDataContent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.Http.MultipartFormDataContent.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Net.Http.MultipartFormDataContent.CopyToAsync">
          <element api="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)" />
          <element api="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)" />
        </element>
        <element api="M:System.Net.Http.HttpContent.CreateContentReadStreamAsync" />
        <element api="Overload:System.Net.Http.MultipartFormDataContent.Dispose">
          <element api="M:System.Net.Http.HttpContent.Dispose" />
          <element api="M:System.Net.Http.MultipartContent.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Http.MultipartFormDataContent.LoadIntoBufferAsync">
          <element api="M:System.Net.Http.HttpContent.LoadIntoBufferAsync" />
          <element api="M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)" />
        </element>
        <element api="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync" />
        <element api="M:System.Net.Http.HttpContent.ReadAsStreamAsync" />
        <element api="M:System.Net.Http.HttpContent.ReadAsStringAsync" />
        <element api="M:System.Net.Http.MultipartContent.GetEnumerator" />
        <element api="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)" />
        <element api="M:System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)" />
        <element api="Overload:System.Net.Http.MultipartFormDataContent.Add">
          <element api="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent)" />
          <element api="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String)" />
          <element api="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String,System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.MultipartFormDataContent" />
      </containers>
      <file name="7e16a407-8fe8-e0cd-9688-599e1f9cf7d7" />
    </api>
    <api id="Properties.T:System.Net.Http.MultipartFormDataContent">
      <topicdata name="MultipartFormDataContent" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.MultipartFormDataContent" />
      <apidata name="MultipartFormDataContent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.Http.MultipartFormDataContent.#ctor" />
      <elements>
        <element api="P:System.Net.Http.HttpContent.Headers" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.MultipartFormDataContent" />
      </containers>
      <file name="86c769ea-b323-70b0-8979-22b9b4d058d4" />
    </api>
    <api id="Overload:System.Net.Http.MultipartFormDataContent.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.MultipartFormDataContent" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.Http.MultipartFormDataContent.#ctor" />
        <element api="M:System.Net.Http.MultipartFormDataContent.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.MultipartFormDataContent" ref="true" />
      </containers>
      <file name="c891f206-a215-c501-90ba-66c81e3439ef" />
    </api>
    <api id="Overload:System.Net.Http.MultipartFormDataContent.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.MultipartFormDataContent" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent)" />
        <element api="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String)" />
        <element api="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.MultipartFormDataContent" ref="true" />
      </containers>
      <file name="e1d953b5-7281-8219-a954-07b305b0c3d1" />
    </api>
    <api id="M:System.Net.Http.MultipartFormDataContent.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.MultipartFormDataContent.#ctor" />
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.MultipartFormDataContent" ref="true" />
      </containers>
      <file name="6d30c863-2051-159b-38aa-25df4f0da196" />
    </api>
    <api id="M:System.Net.Http.MultipartFormDataContent.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.MultipartFormDataContent.#ctor" />
      <parameters>
        <parameter name="boundary">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.MultipartFormDataContent" ref="true" />
      </containers>
      <file name="e07a7c45-d622-f800-3b6b-469603b42bd3" />
    </api>
    <api id="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.MultipartFormDataContent.Add" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)">
          <type api="T:System.Net.Http.MultipartContent" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="content">
          <type api="T:System.Net.Http.HttpContent" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.MultipartFormDataContent" ref="true" />
      </containers>
      <file name="8fd1ac8a-fc64-6c81-9a9b-e443a45b79c6" />
    </api>
    <api id="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.MultipartFormDataContent.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="content">
          <type api="T:System.Net.Http.HttpContent" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.MultipartFormDataContent" ref="true" />
      </containers>
      <file name="31948c41-9239-7d70-f471-a65515310efa" />
    </api>
    <api id="M:System.Net.Http.MultipartFormDataContent.Add(System.Net.Http.HttpContent,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.MultipartFormDataContent.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="content">
          <type api="T:System.Net.Http.HttpContent" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.MultipartFormDataContent" ref="true" />
      </containers>
      <file name="01c03802-758b-47b5-0e5d-350092effffc" />
    </api>
    <api id="T:System.Net.Http.StreamContent">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.StreamContent" />
      <apidata name="StreamContent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Net.Http.HttpContent" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
      </containers>
      <file name="bd017390-8717-69b3-c527-2b17885378be" />
    </api>
    <api id="AllMembers.T:System.Net.Http.StreamContent">
      <topicdata name="StreamContent" group="list" subgroup="members" typeTopicId="T:System.Net.Http.StreamContent" />
      <apidata name="StreamContent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Net.Http.StreamContent.CopyToAsync">
          <element api="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)" />
          <element api="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)" />
        </element>
        <element api="Overload:System.Net.Http.StreamContent.Dispose">
          <element api="M:System.Net.Http.HttpContent.Dispose" />
          <element api="M:System.Net.Http.StreamContent.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Net.Http.HttpContent.Headers" />
        <element api="Overload:System.Net.Http.StreamContent.LoadIntoBufferAsync">
          <element api="M:System.Net.Http.HttpContent.LoadIntoBufferAsync" />
          <element api="M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)" />
        </element>
        <element api="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync" />
        <element api="M:System.Net.Http.HttpContent.ReadAsStreamAsync" />
        <element api="M:System.Net.Http.HttpContent.ReadAsStringAsync" />
        <element api="Overload:System.Net.Http.StreamContent.#ctor">
          <element api="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream)" />
          <element api="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)" />
        </element>
        <element api="M:System.Net.Http.StreamContent.CreateContentReadStreamAsync" />
        <element api="M:System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)" />
        <element api="M:System.Net.Http.StreamContent.TryComputeLength(System.Int64@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.StreamContent" />
      </containers>
      <file name="dc95dedc-0e4c-2b29-f8f0-a5bee9cd5212" />
    </api>
    <api id="Methods.T:System.Net.Http.StreamContent">
      <topicdata name="StreamContent" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.StreamContent" />
      <apidata name="StreamContent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Net.Http.StreamContent.CopyToAsync">
          <element api="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)" />
          <element api="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)" />
        </element>
        <element api="Overload:System.Net.Http.StreamContent.Dispose">
          <element api="M:System.Net.Http.HttpContent.Dispose" />
          <element api="M:System.Net.Http.StreamContent.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Http.StreamContent.LoadIntoBufferAsync">
          <element api="M:System.Net.Http.HttpContent.LoadIntoBufferAsync" />
          <element api="M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)" />
        </element>
        <element api="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync" />
        <element api="M:System.Net.Http.HttpContent.ReadAsStreamAsync" />
        <element api="M:System.Net.Http.HttpContent.ReadAsStringAsync" />
        <element api="M:System.Net.Http.StreamContent.CreateContentReadStreamAsync" />
        <element api="M:System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)" />
        <element api="M:System.Net.Http.StreamContent.TryComputeLength(System.Int64@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.StreamContent" />
      </containers>
      <file name="c18b7818-abd5-43c2-4b2d-32ccaba36e25" />
    </api>
    <api id="Properties.T:System.Net.Http.StreamContent">
      <topicdata name="StreamContent" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.StreamContent" />
      <apidata name="StreamContent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Net.Http.HttpContent.Headers" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.StreamContent" />
      </containers>
      <file name="a4edb5fd-bef3-b07c-814d-7f245d61c53d" />
    </api>
    <api id="Overload:System.Net.Http.StreamContent.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.StreamContent" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Http.HttpContent.Dispose" />
        <element api="M:System.Net.Http.StreamContent.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.StreamContent" ref="true" />
      </containers>
      <file name="4c82dc66-e46f-a99a-ebb3-728cce8e2a06" />
    </api>
    <api id="Overload:System.Net.Http.StreamContent.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.StreamContent" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream)" />
        <element api="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.StreamContent" ref="true" />
      </containers>
      <file name="e5521091-c038-cd39-6352-d277a0f9ef11" />
    </api>
    <api id="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.StreamContent.#ctor" />
      <parameters>
        <parameter name="content">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.StreamContent" ref="true" />
      </containers>
      <file name="46e51943-2da6-22fd-a3ff-b488bd267979" />
    </api>
    <api id="M:System.Net.Http.StreamContent.#ctor(System.IO.Stream,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.StreamContent.#ctor" />
      <parameters>
        <parameter name="content">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="bufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.StreamContent" ref="true" />
      </containers>
      <file name="11202821-ceab-3490-1d89-0e99675f6956" />
    </api>
    <api id="M:System.Net.Http.StreamContent.CreateContentReadStreamAsync">
      <topicdata group="api" />
      <apidata name="CreateContentReadStreamAsync" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.Http.HttpContent.CreateContentReadStreamAsync">
          <type api="T:System.Net.Http.HttpContent" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.IO.Stream" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.StreamContent" ref="true" />
      </containers>
      <file name="b79e8676-0bfa-ca6c-bd66-8a507d4cedec" />
    </api>
    <api id="M:System.Net.Http.StreamContent.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Net.Http.StreamContent.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.Http.HttpContent.Dispose(System.Boolean)">
          <type api="T:System.Net.Http.HttpContent" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.StreamContent" ref="true" />
      </containers>
      <file name="26decb0a-90c1-15b9-0847-331de53ad356" />
    </api>
    <api id="M:System.Net.Http.StreamContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
      <topicdata group="api" />
      <apidata name="SerializeToStreamAsync" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)">
          <type api="T:System.Net.Http.HttpContent" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Net.TransportContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.StreamContent" ref="true" />
      </containers>
      <file name="3ca4aa01-9102-4248-58b6-26b5dd2a698f" />
    </api>
    <api id="M:System.Net.Http.StreamContent.TryComputeLength(System.Int64@)">
      <topicdata group="api" />
      <apidata name="TryComputeLength" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.Http.HttpContent.TryComputeLength(System.Int64@)">
          <type api="T:System.Net.Http.HttpContent" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="length" out="true">
          <referenceTo>
            <type api="T:System.Int64" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.StreamContent" ref="true" />
      </containers>
      <file name="6f367bee-65be-8a68-c038-9f79ed129495" />
    </api>
    <api id="T:System.Net.Http.StringContent">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.StringContent" />
      <apidata name="StringContent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Net.Http.ByteArrayContent" ref="true" />
          <type api="T:System.Net.Http.HttpContent" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
      </containers>
      <file name="f3054db1-643e-e5fb-8374-da0c7d7c92b2" />
    </api>
    <api id="AllMembers.T:System.Net.Http.StringContent">
      <topicdata name="StringContent" group="list" subgroup="members" typeTopicId="T:System.Net.Http.StringContent" />
      <apidata name="StringContent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync" />
        <element api="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)" />
        <element api="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)" />
        <element api="Overload:System.Net.Http.StringContent.CopyToAsync">
          <element api="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)" />
          <element api="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)" />
        </element>
        <element api="Overload:System.Net.Http.StringContent.Dispose">
          <element api="M:System.Net.Http.HttpContent.Dispose" />
          <element api="M:System.Net.Http.HttpContent.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Net.Http.HttpContent.Headers" />
        <element api="Overload:System.Net.Http.StringContent.LoadIntoBufferAsync">
          <element api="M:System.Net.Http.HttpContent.LoadIntoBufferAsync" />
          <element api="M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)" />
        </element>
        <element api="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync" />
        <element api="M:System.Net.Http.HttpContent.ReadAsStreamAsync" />
        <element api="M:System.Net.Http.HttpContent.ReadAsStringAsync" />
        <element api="Overload:System.Net.Http.StringContent.#ctor">
          <element api="M:System.Net.Http.StringContent.#ctor(System.String)" />
          <element api="M:System.Net.Http.StringContent.#ctor(System.String,System.Text.Encoding)" />
          <element api="M:System.Net.Http.StringContent.#ctor(System.String,System.Text.Encoding,System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.StringContent" />
      </containers>
      <file name="534c677c-747a-40eb-2cb3-272fd3f9932c" />
    </api>
    <api id="Methods.T:System.Net.Http.StringContent">
      <topicdata name="StringContent" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.StringContent" />
      <apidata name="StringContent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Net.Http.ByteArrayContent.CreateContentReadStreamAsync" />
        <element api="M:System.Net.Http.ByteArrayContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)" />
        <element api="M:System.Net.Http.ByteArrayContent.TryComputeLength(System.Int64@)" />
        <element api="Overload:System.Net.Http.StringContent.CopyToAsync">
          <element api="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)" />
          <element api="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)" />
        </element>
        <element api="Overload:System.Net.Http.StringContent.Dispose">
          <element api="M:System.Net.Http.HttpContent.Dispose" />
          <element api="M:System.Net.Http.HttpContent.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Net.Http.StringContent.LoadIntoBufferAsync">
          <element api="M:System.Net.Http.HttpContent.LoadIntoBufferAsync" />
          <element api="M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)" />
        </element>
        <element api="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync" />
        <element api="M:System.Net.Http.HttpContent.ReadAsStreamAsync" />
        <element api="M:System.Net.Http.HttpContent.ReadAsStringAsync" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.StringContent" />
      </containers>
      <file name="6977a583-0cd0-887a-4670-dce273914641" />
    </api>
    <api id="Properties.T:System.Net.Http.StringContent">
      <topicdata name="StringContent" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.StringContent" />
      <apidata name="StringContent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Net.Http.HttpContent.Headers" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.StringContent" />
      </containers>
      <file name="65ba89e3-3064-d79b-9e5b-1f9f6854b240" />
    </api>
    <api id="Overload:System.Net.Http.StringContent.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.StringContent" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.Http.StringContent.#ctor(System.String)" />
        <element api="M:System.Net.Http.StringContent.#ctor(System.String,System.Text.Encoding)" />
        <element api="M:System.Net.Http.StringContent.#ctor(System.String,System.Text.Encoding,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.StringContent" ref="true" />
      </containers>
      <file name="e497271c-3b34-d89d-9d46-6ab913fbd2fb" />
    </api>
    <api id="M:System.Net.Http.StringContent.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.StringContent.#ctor" />
      <parameters>
        <parameter name="content">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.StringContent" ref="true" />
      </containers>
      <file name="60094f45-c55c-f81d-33db-d7f99c6bba0c" />
    </api>
    <api id="M:System.Net.Http.StringContent.#ctor(System.String,System.Text.Encoding)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.StringContent.#ctor" />
      <parameters>
        <parameter name="content">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.StringContent" ref="true" />
      </containers>
      <file name="7f495177-9a19-7a9a-2da1-ef627d179f6f" />
    </api>
    <api id="M:System.Net.Http.StringContent.#ctor(System.String,System.Text.Encoding,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.StringContent.#ctor" />
      <parameters>
        <parameter name="content">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
        <parameter name="mediaType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.30319.17929" />
        </library>
        <namespace api="N:System.Net.Http" />
        <type api="T:System.Net.Http.StringContent" ref="true" />
      </containers>
      <file name="d61b3256-4079-aafd-cd53-3c0337969bcf" />
    </api>
  </apis>
</reflection>