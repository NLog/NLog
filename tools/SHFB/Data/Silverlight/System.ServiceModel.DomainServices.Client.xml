<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.ServiceModel.DomainServices.Client">
      <assemblydata version="2.0.5.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.1.61829.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.DomainServices.Client</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.DomainServices.Client.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WCF RIA Services</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTrademarkAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>b15b8171-0edc-4d96-a126-e086e4f3ea2c</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="System.ServiceModel.DomainServices.Client.Web">
      <assemblydata version="2.0.5.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.1.61829.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.DomainServices.Client.Web</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.DomainServices.Client.Web.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WCF RIA Services</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTrademarkAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>b15b8171-0edc-4d96-a126-e086e4f3ea2c</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.ServiceModel.DomainServices.Client">
      <topicdata group="api" />
      <apidata name="System.ServiceModel.DomainServices.Client" group="namespace" />
      <elements>
        <element api="T:System.ServiceModel.DomainServices.Client.OperationBase" />
        <element api="T:System.ServiceModel.DomainServices.Client.ComplexObject" />
        <element api="T:System.ServiceModel.DomainServices.Client.Entity" />
        <element api="T:System.ServiceModel.DomainServices.Client.EntityQueryable" />
        <element api="T:System.ServiceModel.DomainServices.Client.InvokeArgs" />
        <element api="T:System.ServiceModel.DomainServices.Client.QueryResult" />
        <element api="T:System.ServiceModel.DomainServices.Client.QueryResult`1" />
        <element api="T:System.ServiceModel.DomainServices.Client.DomainClientResult" />
        <element api="T:System.ServiceModel.DomainServices.Client.EntityAction" />
        <element api="T:System.ServiceModel.DomainServices.Client.EntityCollectionChangedEventArgs`1" />
        <element api="T:System.ServiceModel.DomainServices.Client.EntityOperationType" />
        <element api="T:System.ServiceModel.DomainServices.Client.EntityQuery" />
        <element api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" />
        <element api="T:System.ServiceModel.DomainServices.Client.InvokeOperation" />
        <element api="T:System.ServiceModel.DomainServices.Client.InvokeOperation`1" />
        <element api="T:System.ServiceModel.DomainServices.Client.DomainClient" />
        <element api="T:System.ServiceModel.DomainServices.Client.DomainContext" />
        <element api="T:System.ServiceModel.DomainServices.Client.DomainOperationException" />
        <element api="T:System.ServiceModel.DomainServices.Client.DomainException" />
        <element api="T:System.ServiceModel.DomainServices.Client.LoadOperation" />
        <element api="T:System.ServiceModel.DomainServices.Client.LoadOperation`1" />
        <element api="T:System.ServiceModel.DomainServices.Client.SubmitOperation" />
        <element api="T:System.ServiceModel.DomainServices.Client.EntityChangeSet" />
        <element api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
        <element api="T:System.ServiceModel.DomainServices.Client.EntityConflict" />
        <element api="T:System.ServiceModel.DomainServices.Client.EntityContainer" />
        <element api="T:System.ServiceModel.DomainServices.Client.EntityKey" />
        <element api="T:System.ServiceModel.DomainServices.Client.EntitySet" />
        <element api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
        <element api="T:System.ServiceModel.DomainServices.Client.EntitySetOperations" />
        <element api="T:System.ServiceModel.DomainServices.Client.ChangeSetEntry" />
        <element api="T:System.ServiceModel.DomainServices.Client.EntityRef`1" />
        <element api="T:System.ServiceModel.DomainServices.Client.EntityState" />
        <element api="T:System.ServiceModel.DomainServices.Client.InvokeCompletedResult" />
        <element api="T:System.ServiceModel.DomainServices.Client.LoadBehavior" />
        <element api="T:System.ServiceModel.DomainServices.Client.ValidationResultInfo" />
        <element api="T:System.ServiceModel.DomainServices.Client.OperationErrorStatus" />
        <element api="T:System.ServiceModel.DomainServices.Client.QueryCompletedResult" />
        <element api="T:System.ServiceModel.DomainServices.Client.SubmitCompletedResult" />
        <element api="T:System.ServiceModel.DomainServices.Client.DomainServiceFault" />
        <element api="T:System.ServiceModel.DomainServices.Client.WebDomainClient`1" />
      </elements>
      <file name="4260a1de-65f0-cee5-8d6b-9dc63bb03b3b" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.ChangeSetEntry">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.ChangeSetEntry" />
      <apidata name="ChangeSetEntry" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
          <assignment name="Namespace">
            <type api="T:System.String" ref="true" />
            <value>DomainServices</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="67f6d4df-e081-6252-7049-65918ee17925" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Client.ChangeSetEntry">
      <topicdata name="ChangeSetEntry" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Client.ChangeSetEntry" />
      <apidata name="ChangeSetEntry" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Client.ChangeSetEntry.#ctor(System.ServiceModel.DomainServices.Client.Entity,System.Int32,System.ServiceModel.DomainServices.Client.EntityOperationType)" />
        <element api="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.Associations" />
        <element api="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.ClientEntity" />
        <element api="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.ConflictMembers" />
        <element api="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.Entity" />
        <element api="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.EntityActions" />
        <element api="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.HasConflict" />
        <element api="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.HasMemberChanges" />
        <element api="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.Id" />
        <element api="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.IsDeleteConflict" />
        <element api="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.Operation" />
        <element api="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.OriginalAssociations" />
        <element api="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.OriginalEntity" />
        <element api="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.StoreEntity" />
        <element api="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.ValidationErrors" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ChangeSetEntry" />
      </containers>
      <file name="383ca2c7-fca8-160d-c266-9158c1c849c0" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Client.ChangeSetEntry">
      <topicdata name="ChangeSetEntry" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Client.ChangeSetEntry" />
      <apidata name="ChangeSetEntry" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ChangeSetEntry" />
      </containers>
      <file name="e9118789-33a4-bbc9-40fc-e37b12f1db3e" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Client.ChangeSetEntry">
      <topicdata name="ChangeSetEntry" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Client.ChangeSetEntry" />
      <apidata name="ChangeSetEntry" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.Associations" />
        <element api="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.ClientEntity" />
        <element api="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.ConflictMembers" />
        <element api="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.Entity" />
        <element api="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.EntityActions" />
        <element api="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.HasConflict" />
        <element api="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.HasMemberChanges" />
        <element api="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.Id" />
        <element api="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.IsDeleteConflict" />
        <element api="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.Operation" />
        <element api="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.OriginalAssociations" />
        <element api="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.OriginalEntity" />
        <element api="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.StoreEntity" />
        <element api="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.ValidationErrors" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ChangeSetEntry" />
      </containers>
      <file name="fdaa88b7-3bfb-1a7f-2bd6-fc42e66d85bf" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.ChangeSetEntry.#ctor(System.ServiceModel.DomainServices.Client.Entity,System.Int32,System.ServiceModel.DomainServices.Client.EntityOperationType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="entity">
          <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="operationType">
          <type api="T:System.ServiceModel.DomainServices.Client.EntityOperationType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ChangeSetEntry" ref="true" />
      </containers>
      <file name="3b3b8140-e3da-d5a5-2c0a-08d737527a13" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.Associations">
      <topicdata group="api" />
      <apidata name="Associations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Associations" />
      <setter name="set_Associations" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ChangeSetEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
          <assignment name="EmitDefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="15dd4f09-ec36-12ed-cbce-6bab9d3e9416" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.ClientEntity">
      <topicdata group="api" />
      <apidata name="ClientEntity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ClientEntity" />
      <setter name="set_ClientEntity" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ChangeSetEntry" ref="true" />
      </containers>
      <file name="f2b16b0a-3c12-5d5c-e3a7-01b7e5524ed8" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.ConflictMembers">
      <topicdata group="api" />
      <apidata name="ConflictMembers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ConflictMembers" />
      <setter name="set_ConflictMembers" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ChangeSetEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
          <assignment name="EmitDefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="6711e78f-cb37-e283-6f55-35119cf64c85" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.Entity">
      <topicdata group="api" />
      <apidata name="Entity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Entity" />
      <setter name="set_Entity" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ChangeSetEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="37acc84d-b487-c702-81dd-4e5979d6d96c" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.EntityActions">
      <topicdata group="api" />
      <apidata name="EntityActions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EntityActions" />
      <setter name="set_EntityActions" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <arrayOf rank="1">
              <type api="T:System.Object" ref="true" />
            </arrayOf>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ChangeSetEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="1a9b9188-617e-416b-5705-0280807dbc47" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.HasConflict">
      <topicdata group="api" />
      <apidata name="HasConflict" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasConflict" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ChangeSetEntry" ref="true" />
      </containers>
      <file name="6fc9389b-50d9-c1e7-677b-a79d1feab01b" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.HasMemberChanges">
      <topicdata group="api" />
      <apidata name="HasMemberChanges" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HasMemberChanges" />
      <setter name="set_HasMemberChanges" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ChangeSetEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="e05e3292-1331-9ce0-e20b-3747319e8abf" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Id" />
      <setter name="set_Id" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ChangeSetEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="483cf781-9534-b3a6-2bc8-11c286be151c" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.IsDeleteConflict">
      <topicdata group="api" />
      <apidata name="IsDeleteConflict" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsDeleteConflict" />
      <setter name="set_IsDeleteConflict" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ChangeSetEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
          <assignment name="EmitDefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="b8752ab0-0ac4-b56e-bfea-eb979fdc7ebb" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.Operation">
      <topicdata group="api" />
      <apidata name="Operation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Operation" />
      <setter name="set_Operation" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntityOperationType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ChangeSetEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="25356dfd-8544-c252-72d1-8fd6eccd2e0b" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.OriginalAssociations">
      <topicdata group="api" />
      <apidata name="OriginalAssociations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OriginalAssociations" />
      <setter name="set_OriginalAssociations" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ChangeSetEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
          <assignment name="EmitDefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="d21ec5ed-5220-de63-169c-42f7d51379e0" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.OriginalEntity">
      <topicdata group="api" />
      <apidata name="OriginalEntity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OriginalEntity" />
      <setter name="set_OriginalEntity" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ChangeSetEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
          <assignment name="EmitDefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="41bf9b27-7d7a-0fd8-a2bd-aa81bc503cd0" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.StoreEntity">
      <topicdata group="api" />
      <apidata name="StoreEntity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_StoreEntity" />
      <setter name="set_StoreEntity" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ChangeSetEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
          <assignment name="EmitDefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="0cc14334-842f-d59a-071b-3eed12ed66f4" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.ChangeSetEntry.ValidationErrors">
      <topicdata group="api" />
      <apidata name="ValidationErrors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ValidationErrors" />
      <setter name="set_ValidationErrors" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.DomainServices.Client.ValidationResultInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ChangeSetEntry" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
          <assignment name="EmitDefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="16504cf9-e6c3-7029-2763-e79d5e67bcec" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.ComplexObject">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.ComplexObject" />
      <apidata name="ComplexObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
        <type api="T:System.ComponentModel.IEditableObject" ref="true" />
        <type api="T:System.ComponentModel.INotifyDataErrorInfo" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="e5c21ca1-64c9-0a6c-5835-b5154e88df93" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Client.ComplexObject">
      <topicdata name="ComplexObject" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Client.ComplexObject" />
      <apidata name="ComplexObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Client.ComplexObject.#ctor" />
        <element api="M:System.ServiceModel.DomainServices.Client.ComplexObject.BeginEdit" />
        <element api="M:System.ServiceModel.DomainServices.Client.ComplexObject.CancelEdit" />
        <element api="M:System.ServiceModel.DomainServices.Client.ComplexObject.EndEdit" />
        <element api="P:System.ServiceModel.DomainServices.Client.ComplexObject.HasValidationErrors" />
        <element api="P:System.ServiceModel.DomainServices.Client.ComplexObject.IsDeserializing" />
        <element api="M:System.ServiceModel.DomainServices.Client.ComplexObject.OnDeserialized(System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.DomainServices.Client.ComplexObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.DomainServices.Client.ComplexObject.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.ServiceModel.DomainServices.Client.ComplexObject.RaiseDataMemberChanged(System.String)" />
        <element api="M:System.ServiceModel.DomainServices.Client.ComplexObject.RaiseDataMemberChanging(System.String)" />
        <element api="M:System.ServiceModel.DomainServices.Client.ComplexObject.RaisePropertyChanged(System.String)" />
        <element api="M:System.ServiceModel.DomainServices.Client.ComplexObject.System#ComponentModel#IEditableObject#BeginEdit" />
        <element api="M:System.ServiceModel.DomainServices.Client.ComplexObject.System#ComponentModel#IEditableObject#CancelEdit" />
        <element api="M:System.ServiceModel.DomainServices.Client.ComplexObject.System#ComponentModel#IEditableObject#EndEdit" />
        <element api="E:System.ServiceModel.DomainServices.Client.ComplexObject.System#ComponentModel#INotifyDataErrorInfo#ErrorsChanged" />
        <element api="M:System.ServiceModel.DomainServices.Client.ComplexObject.System#ComponentModel#INotifyDataErrorInfo#GetErrors(System.String)" />
        <element api="P:System.ServiceModel.DomainServices.Client.ComplexObject.System#ComponentModel#INotifyDataErrorInfo#HasErrors" />
        <element api="E:System.ServiceModel.DomainServices.Client.ComplexObject.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
        <element api="Overload:System.ServiceModel.DomainServices.Client.ComplexObject.ValidateProperty">
          <element api="M:System.ServiceModel.DomainServices.Client.ComplexObject.ValidateProperty(System.String,System.Object)" />
          <element api="M:System.ServiceModel.DomainServices.Client.ComplexObject.ValidateProperty(System.ComponentModel.DataAnnotations.ValidationContext,System.Object)" />
        </element>
        <element api="P:System.ServiceModel.DomainServices.Client.ComplexObject.ValidationErrors" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ComplexObject" />
      </containers>
      <file name="1a641675-f0c9-78a7-694f-c3b9185bbc86" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Client.ComplexObject">
      <topicdata name="ComplexObject" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Client.ComplexObject" />
      <apidata name="ComplexObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Client.ComplexObject.BeginEdit" />
        <element api="M:System.ServiceModel.DomainServices.Client.ComplexObject.CancelEdit" />
        <element api="M:System.ServiceModel.DomainServices.Client.ComplexObject.EndEdit" />
        <element api="M:System.ServiceModel.DomainServices.Client.ComplexObject.OnDeserialized(System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.DomainServices.Client.ComplexObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.DomainServices.Client.ComplexObject.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.ServiceModel.DomainServices.Client.ComplexObject.RaiseDataMemberChanged(System.String)" />
        <element api="M:System.ServiceModel.DomainServices.Client.ComplexObject.RaiseDataMemberChanging(System.String)" />
        <element api="M:System.ServiceModel.DomainServices.Client.ComplexObject.RaisePropertyChanged(System.String)" />
        <element api="M:System.ServiceModel.DomainServices.Client.ComplexObject.System#ComponentModel#IEditableObject#BeginEdit" />
        <element api="M:System.ServiceModel.DomainServices.Client.ComplexObject.System#ComponentModel#IEditableObject#CancelEdit" />
        <element api="M:System.ServiceModel.DomainServices.Client.ComplexObject.System#ComponentModel#IEditableObject#EndEdit" />
        <element api="M:System.ServiceModel.DomainServices.Client.ComplexObject.System#ComponentModel#INotifyDataErrorInfo#GetErrors(System.String)" />
        <element api="Overload:System.ServiceModel.DomainServices.Client.ComplexObject.ValidateProperty">
          <element api="M:System.ServiceModel.DomainServices.Client.ComplexObject.ValidateProperty(System.String,System.Object)" />
          <element api="M:System.ServiceModel.DomainServices.Client.ComplexObject.ValidateProperty(System.ComponentModel.DataAnnotations.ValidationContext,System.Object)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ComplexObject" />
      </containers>
      <file name="d2004a48-1ee0-f456-a359-8720e7186ae7" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Client.ComplexObject">
      <topicdata name="ComplexObject" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Client.ComplexObject" />
      <apidata name="ComplexObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Client.ComplexObject.HasValidationErrors" />
        <element api="P:System.ServiceModel.DomainServices.Client.ComplexObject.IsDeserializing" />
        <element api="P:System.ServiceModel.DomainServices.Client.ComplexObject.System#ComponentModel#INotifyDataErrorInfo#HasErrors" />
        <element api="P:System.ServiceModel.DomainServices.Client.ComplexObject.ValidationErrors" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ComplexObject" />
      </containers>
      <file name="d18a9e8c-27d7-2c14-44aa-651054f311cb" />
    </api>
    <api id="Events.T:System.ServiceModel.DomainServices.Client.ComplexObject">
      <topicdata name="ComplexObject" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.DomainServices.Client.ComplexObject" />
      <apidata name="ComplexObject" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.DomainServices.Client.ComplexObject.System#ComponentModel#INotifyDataErrorInfo#ErrorsChanged" />
        <element api="E:System.ServiceModel.DomainServices.Client.ComplexObject.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ComplexObject" />
      </containers>
      <file name="bb9e8b8a-9404-71c8-55d4-268a951d670a" />
    </api>
    <api id="Overload:System.ServiceModel.DomainServices.Client.ComplexObject.ValidateProperty">
      <topicdata name="ValidateProperty" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.ComplexObject" />
      <apidata name="ValidateProperty" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.DomainServices.Client.ComplexObject.ValidateProperty(System.String,System.Object)" />
        <element api="M:System.ServiceModel.DomainServices.Client.ComplexObject.ValidateProperty(System.ComponentModel.DataAnnotations.ValidationContext,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ComplexObject" ref="true" />
      </containers>
      <file name="7f6ec4df-00ed-a6d3-23a2-08908183bde9" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.ComplexObject.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ComplexObject" ref="true" />
      </containers>
      <file name="143bb984-3bdc-63a0-3f29-a1bb5ca9c709" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.ComplexObject.BeginEdit">
      <topicdata group="api" />
      <apidata name="BeginEdit" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ComplexObject" ref="true" />
      </containers>
      <file name="e94036db-d9ae-bdd7-e616-fde6b38142c3" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.ComplexObject.CancelEdit">
      <topicdata group="api" />
      <apidata name="CancelEdit" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ComplexObject" ref="true" />
      </containers>
      <file name="deffc164-1f2c-2191-8928-15dfaf937c9c" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.ComplexObject.EndEdit">
      <topicdata group="api" />
      <apidata name="EndEdit" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ComplexObject" ref="true" />
      </containers>
      <file name="7502bbf6-7e8f-ff71-6707-db81c4969290" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.ComplexObject.HasValidationErrors">
      <topicdata group="api" />
      <apidata name="HasValidationErrors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasValidationErrors" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ComplexObject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DataAnnotations.DisplayAttribute" ref="true" />
          <assignment name="AutoGenerateField">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="5b3473ac-cdaf-ecfd-af8d-1f2a00c09422" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.ComplexObject.IsDeserializing">
      <topicdata group="api" />
      <apidata name="IsDeserializing" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsDeserializing" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ComplexObject" ref="true" />
      </containers>
      <file name="96f9e237-4983-eb88-76ae-47fef6b9a2d9" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.ComplexObject.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="OnDeserialized" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ComplexObject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.Serialization.OnDeserializedAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="b5274d0f-1df0-75fb-db5e-04c4c96a30e5" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.ComplexObject.OnDeserializing(System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="OnDeserializing" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ComplexObject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.OnDeserializingAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="918449f6-33f7-998c-d29d-5f5ef624f908" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.ComplexObject.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnPropertyChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ComplexObject" ref="true" />
      </containers>
      <file name="8e58d10d-ca26-f765-1300-9fccd6d30b0d" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.ComplexObject.RaiseDataMemberChanged(System.String)">
      <topicdata group="api" />
      <apidata name="RaiseDataMemberChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ComplexObject" ref="true" />
      </containers>
      <file name="38fd335b-0760-6302-0c54-3e82f8048ebe" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.ComplexObject.RaiseDataMemberChanging(System.String)">
      <topicdata group="api" />
      <apidata name="RaiseDataMemberChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ComplexObject" ref="true" />
      </containers>
      <file name="1a5a976e-e967-e1d6-9cb9-725fdc13eaf8" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.ComplexObject.RaisePropertyChanged(System.String)">
      <topicdata group="api" />
      <apidata name="RaisePropertyChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ComplexObject" ref="true" />
      </containers>
      <file name="2a1371af-5e0a-3e20-bbc0-3fcb5bda3569" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.ComplexObject.System#ComponentModel#IEditableObject#BeginEdit">
      <topicdata group="api" eiiName="IEditableObject.BeginEdit" />
      <apidata name="BeginEdit" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ComponentModel.IEditableObject.BeginEdit">
          <type api="T:System.ComponentModel.IEditableObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ComplexObject" ref="true" />
      </containers>
      <file name="7cd807e1-de84-fd8f-8655-0526f552607f" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.ComplexObject.System#ComponentModel#IEditableObject#CancelEdit">
      <topicdata group="api" eiiName="IEditableObject.CancelEdit" />
      <apidata name="CancelEdit" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ComponentModel.IEditableObject.CancelEdit">
          <type api="T:System.ComponentModel.IEditableObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ComplexObject" ref="true" />
      </containers>
      <file name="330f307d-a456-09ad-43c3-201f0428a9ab" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.ComplexObject.System#ComponentModel#IEditableObject#EndEdit">
      <topicdata group="api" eiiName="IEditableObject.EndEdit" />
      <apidata name="EndEdit" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ComponentModel.IEditableObject.EndEdit">
          <type api="T:System.ComponentModel.IEditableObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ComplexObject" ref="true" />
      </containers>
      <file name="4447689d-3589-b304-4688-e44e5bbd3169" />
    </api>
    <api id="E:System.ServiceModel.DomainServices.Client.ComplexObject.System#ComponentModel#INotifyDataErrorInfo#ErrorsChanged">
      <topicdata group="api" eiiName="INotifyDataErrorInfo.ErrorsChanged" />
      <apidata name="ErrorsChanged" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />
      <remover name="remove_System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.DataErrorsChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.DataErrorsChangedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged">
          <type api="T:System.ComponentModel.INotifyDataErrorInfo" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ComplexObject" ref="true" />
      </containers>
      <file name="16f6a01a-1798-0e17-f6e1-e9b33534f02a" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.ComplexObject.System#ComponentModel#INotifyDataErrorInfo#GetErrors(System.String)">
      <topicdata group="api" eiiName="INotifyDataErrorInfo.GetErrors" />
      <apidata name="GetErrors" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.INotifyDataErrorInfo.GetErrors(System.String)">
          <type api="T:System.ComponentModel.INotifyDataErrorInfo" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ComplexObject" ref="true" />
      </containers>
      <file name="8082f334-456b-be0b-2fef-69a2ad8f3a8d" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.ComplexObject.System#ComponentModel#INotifyDataErrorInfo#HasErrors">
      <topicdata group="api" eiiName="INotifyDataErrorInfo.HasErrors" />
      <apidata name="HasErrors" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.INotifyDataErrorInfo.HasErrors" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.INotifyDataErrorInfo.HasErrors">
          <type api="T:System.ComponentModel.INotifyDataErrorInfo" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ComplexObject" ref="true" />
      </containers>
      <file name="75d4849e-f6b8-38c9-ff8d-7ca797288653" />
    </api>
    <api id="E:System.ServiceModel.DomainServices.Client.ComplexObject.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <topicdata group="api" eiiName="INotifyPropertyChanged.PropertyChanged" />
      <apidata name="PropertyChanged" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      <remover name="remove_System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.PropertyChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
          <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ComplexObject" ref="true" />
      </containers>
      <file name="69d216ed-f71b-c0b7-a128-3a3dc100ce4b" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.ComplexObject.ValidateProperty(System.ComponentModel.DataAnnotations.ValidationContext,System.Object)">
      <topicdata group="api" />
      <apidata name="ValidateProperty" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.DomainServices.Client.ComplexObject.ValidateProperty" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="validationContext">
          <type api="T:System.ComponentModel.DataAnnotations.ValidationContext" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ComplexObject" ref="true" />
      </containers>
      <file name="d0e2687a-33cb-112c-4405-0346998329b8" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.ComplexObject.ValidateProperty(System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="ValidateProperty" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.DomainServices.Client.ComplexObject.ValidateProperty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ComplexObject" ref="true" />
      </containers>
      <file name="66819aa7-fec0-8a13-5726-c73a6f0c5e17" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.ComplexObject.ValidationErrors">
      <topicdata group="api" />
      <apidata name="ValidationErrors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ValidationErrors" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.DataAnnotations.ValidationResult" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ComplexObject" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DataAnnotations.DisplayAttribute" ref="true" />
          <assignment name="AutoGenerateField">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="1c9cc798-0846-94f9-9e07-4446c7875d0b" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.DomainClient">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.DomainClient" />
      <apidata name="DomainClient" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.DomainServices.Client.WebDomainClient`1" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <file name="7d53a059-efce-a440-b92a-86b6125df315" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Client.DomainClient">
      <topicdata name="DomainClient" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Client.DomainClient" />
      <apidata name="DomainClient" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.#ctor" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.BeginInvoke(System.ServiceModel.DomainServices.Client.InvokeArgs,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.BeginInvokeCore(System.ServiceModel.DomainServices.Client.InvokeArgs,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.BeginQuery(System.ServiceModel.DomainServices.Client.EntityQuery,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.BeginQueryCore(System.ServiceModel.DomainServices.Client.EntityQuery,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.BeginSubmit(System.ServiceModel.DomainServices.Client.EntityChangeSet,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.BeginSubmitCore(System.ServiceModel.DomainServices.Client.EntityChangeSet,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.CancelInvoke(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.CancelInvokeCore(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.CancelQuery(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.CancelQueryCore(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.CancelSubmit(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.CancelSubmitCore(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.EndInvoke(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.EndInvokeCore(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.EndQuery(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.EndQueryCore(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.EndSubmit(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.EndSubmitCore(System.IAsyncResult)" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainClient.EntityTypes" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainClient.SupportsCancellation" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClient" />
      </containers>
      <file name="94fa9232-3233-65dd-5cce-792b0fc651ab" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Client.DomainClient">
      <topicdata name="DomainClient" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Client.DomainClient" />
      <apidata name="DomainClient" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.BeginInvoke(System.ServiceModel.DomainServices.Client.InvokeArgs,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.BeginInvokeCore(System.ServiceModel.DomainServices.Client.InvokeArgs,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.BeginQuery(System.ServiceModel.DomainServices.Client.EntityQuery,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.BeginQueryCore(System.ServiceModel.DomainServices.Client.EntityQuery,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.BeginSubmit(System.ServiceModel.DomainServices.Client.EntityChangeSet,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.BeginSubmitCore(System.ServiceModel.DomainServices.Client.EntityChangeSet,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.CancelInvoke(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.CancelInvokeCore(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.CancelQuery(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.CancelQueryCore(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.CancelSubmit(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.CancelSubmitCore(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.EndInvoke(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.EndInvokeCore(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.EndQuery(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.EndQueryCore(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.EndSubmit(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.EndSubmitCore(System.IAsyncResult)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClient" />
      </containers>
      <file name="b49aa504-14f4-bdb0-986c-b5e597b8042d" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Client.DomainClient">
      <topicdata name="DomainClient" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Client.DomainClient" />
      <apidata name="DomainClient" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Client.DomainClient.EntityTypes" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainClient.SupportsCancellation" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClient" />
      </containers>
      <file name="450e9da1-c369-579d-7376-8bbf4553952e" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainClient.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClient" ref="true" />
      </containers>
      <file name="04b7c47f-5fc6-100d-80e9-06317691e0ac" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainClient.BeginInvoke(System.ServiceModel.DomainServices.Client.InvokeArgs,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginInvoke" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="invokeArgs">
          <type api="T:System.ServiceModel.DomainServices.Client.InvokeArgs" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClient" ref="true" />
      </containers>
      <file name="3179708d-38d7-d750-518a-aae4e73e04bc" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainClient.BeginInvokeCore(System.ServiceModel.DomainServices.Client.InvokeArgs,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginInvokeCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="invokeArgs">
          <type api="T:System.ServiceModel.DomainServices.Client.InvokeArgs" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClient" ref="true" />
      </containers>
      <file name="c96223ba-6a41-7ce3-91b1-b34bde130308" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainClient.BeginQuery(System.ServiceModel.DomainServices.Client.EntityQuery,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginQuery" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="query">
          <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClient" ref="true" />
      </containers>
      <file name="328a0349-75c3-0716-7c0f-ba7bcc497058" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainClient.BeginQueryCore(System.ServiceModel.DomainServices.Client.EntityQuery,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginQueryCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="query">
          <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClient" ref="true" />
      </containers>
      <file name="339cb940-27ad-99c9-c626-d8d5af1e0dc5" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainClient.BeginSubmit(System.ServiceModel.DomainServices.Client.EntityChangeSet,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginSubmit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="changeSet">
          <type api="T:System.ServiceModel.DomainServices.Client.EntityChangeSet" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClient" ref="true" />
      </containers>
      <file name="34c21a25-19d0-baca-407c-113e2db3fc46" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainClient.BeginSubmitCore(System.ServiceModel.DomainServices.Client.EntityChangeSet,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginSubmitCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="changeSet">
          <type api="T:System.ServiceModel.DomainServices.Client.EntityChangeSet" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClient" ref="true" />
      </containers>
      <file name="df44826e-4d03-1bd0-7bef-1f2ab172e461" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainClient.CancelInvoke(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="CancelInvoke" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClient" ref="true" />
      </containers>
      <file name="00315863-a706-e59c-d46b-fe60f28360f6" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainClient.CancelInvokeCore(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="CancelInvokeCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClient" ref="true" />
      </containers>
      <file name="275f10cd-f259-9f07-214e-f3bbb76b9f6a" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainClient.CancelQuery(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="CancelQuery" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClient" ref="true" />
      </containers>
      <file name="50408c3d-0662-2aeb-d7c1-464256f17f88" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainClient.CancelQueryCore(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="CancelQueryCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClient" ref="true" />
      </containers>
      <file name="4623f505-0524-a37c-33d0-4428427dd704" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainClient.CancelSubmit(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="CancelSubmit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClient" ref="true" />
      </containers>
      <file name="a0e7e6d2-8b8b-5d0b-944b-b7c82cc40fee" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainClient.CancelSubmitCore(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="CancelSubmitCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClient" ref="true" />
      </containers>
      <file name="42c30a3c-fb73-4112-d545-7b533e4b54a7" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainClient.EndInvoke(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndInvoke" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeCompletedResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClient" ref="true" />
      </containers>
      <file name="76226fd6-3c83-ccfc-2812-ecdb3e01760a" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainClient.EndInvokeCore(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndInvokeCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeCompletedResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClient" ref="true" />
      </containers>
      <file name="0691fe90-b0f7-8b81-05bb-4c7c1dd7fe2e" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainClient.EndQuery(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndQuery" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.QueryCompletedResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClient" ref="true" />
      </containers>
      <file name="769a4d6b-54ad-1fa0-26d8-88316f201603" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainClient.EndQueryCore(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndQueryCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.QueryCompletedResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClient" ref="true" />
      </containers>
      <file name="c86242fb-eac4-e3f8-fa8a-7dfa3e386d62" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainClient.EndSubmit(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndSubmit" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.SubmitCompletedResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClient" ref="true" />
      </containers>
      <file name="f270d6ce-a9e2-41fe-d496-c4a764ef2c4c" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainClient.EndSubmitCore(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndSubmitCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.SubmitCompletedResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClient" ref="true" />
      </containers>
      <file name="20af6417-bbea-c980-90cb-d0b3c5789d7b" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.DomainClient.EntityTypes">
      <topicdata group="api" />
      <apidata name="EntityTypes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EntityTypes" />
      <setter name="set_EntityTypes" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClient" ref="true" />
      </containers>
      <file name="303886b9-16ff-d741-eb6d-a96f0f501853" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.DomainClient.SupportsCancellation">
      <topicdata group="api" />
      <apidata name="SupportsCancellation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_SupportsCancellation" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClient" ref="true" />
      </containers>
      <file name="54507f36-c2cd-be1a-36f5-de9467c756d3" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.DomainClientResult">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.DomainClientResult" />
      <apidata name="DomainClientResult" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <file name="d45ba6b7-ef5c-2157-763f-316e706c3eb0" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Client.DomainClientResult">
      <topicdata name="DomainClientResult" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Client.DomainClientResult" />
      <apidata name="DomainClientResult" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainClientResult.AllEntities" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClientResult.CreateInvokeResult(System.Object,System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationResult})" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClientResult.CreateQueryResult(System.Collections.Generic.IEnumerable{System.ServiceModel.DomainServices.Client.Entity},System.Collections.Generic.IEnumerable{System.ServiceModel.DomainServices.Client.Entity},System.Int32,System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationResult})" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainClientResult.Entities" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainClientResult.ReturnValue" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainClientResult.TotalEntityCount" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainClientResult.ValidationErrors" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClientResult" />
      </containers>
      <file name="230fe58f-c2d0-d510-9e25-82068ec14748" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Client.DomainClientResult">
      <topicdata name="DomainClientResult" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Client.DomainClientResult" />
      <apidata name="DomainClientResult" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClientResult.CreateInvokeResult(System.Object,System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationResult})" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClientResult.CreateQueryResult(System.Collections.Generic.IEnumerable{System.ServiceModel.DomainServices.Client.Entity},System.Collections.Generic.IEnumerable{System.ServiceModel.DomainServices.Client.Entity},System.Int32,System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationResult})" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClientResult" />
      </containers>
      <file name="8a8f0e7a-ce71-4b7b-d9c5-5ce11a821e05" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Client.DomainClientResult">
      <topicdata name="DomainClientResult" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Client.DomainClientResult" />
      <apidata name="DomainClientResult" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Client.DomainClientResult.AllEntities" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainClientResult.Entities" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainClientResult.ReturnValue" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainClientResult.TotalEntityCount" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainClientResult.ValidationErrors" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClientResult" />
      </containers>
      <file name="dfb31292-faaa-56b2-b276-209c2ed6a32f" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.DomainClientResult.AllEntities">
      <topicdata group="api" />
      <apidata name="AllEntities" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AllEntities" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClientResult" ref="true" />
      </containers>
      <file name="79ed820d-3527-e9c0-de81-ee8def3e2d6d" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainClientResult.CreateInvokeResult(System.Object,System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationResult})">
      <topicdata group="api" />
      <apidata name="CreateInvokeResult" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="returnValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="validationErrors">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.DataAnnotations.ValidationResult" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClientResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClientResult" ref="true" />
      </containers>
      <file name="f3eb2bd7-e1d5-ae46-03ce-75e0f6f9dd35" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainClientResult.CreateQueryResult(System.Collections.Generic.IEnumerable{System.ServiceModel.DomainServices.Client.Entity},System.Collections.Generic.IEnumerable{System.ServiceModel.DomainServices.Client.Entity},System.Int32,System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationResult})">
      <topicdata group="api" />
      <apidata name="CreateQueryResult" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="entities">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="allEntities">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="totalEntityCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="validationErrors">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.DataAnnotations.ValidationResult" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClientResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClientResult" ref="true" />
      </containers>
      <file name="a12642af-64c2-cb5c-8937-87313afa5259" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.DomainClientResult.Entities">
      <topicdata group="api" />
      <apidata name="Entities" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Entities" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClientResult" ref="true" />
      </containers>
      <file name="88bce497-6e26-24e1-b36a-1e6bf4d36949" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.DomainClientResult.ReturnValue">
      <topicdata group="api" />
      <apidata name="ReturnValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ReturnValue" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClientResult" ref="true" />
      </containers>
      <file name="9043b075-95f7-60ef-e781-9ced2e88fe4e" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.DomainClientResult.TotalEntityCount">
      <topicdata group="api" />
      <apidata name="TotalEntityCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TotalEntityCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClientResult" ref="true" />
      </containers>
      <file name="5743f7c2-b073-1d38-230f-d1955245585e" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.DomainClientResult.ValidationErrors">
      <topicdata group="api" />
      <apidata name="ValidationErrors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ValidationErrors" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.DataAnnotations.ValidationResult" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClientResult" ref="true" />
      </containers>
      <file name="4b61e79d-e493-9648-eee7-08bd91c44ef4" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.DomainContext">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.DomainContext" />
      <apidata name="DomainContext" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.DomainServices.Client.ApplicationServices.AuthenticationDomainContextBase" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <file name="7082add3-c071-4068-5854-2fdcdc4770a5" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Client.DomainContext">
      <topicdata name="DomainContext" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Client.DomainContext" />
      <apidata name="DomainContext" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.#ctor(System.ServiceModel.DomainServices.Client.DomainClient)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.AddReference(System.Type,System.ServiceModel.DomainServices.Client.DomainContext)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.CreateEntityContainer" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.CreateQuery``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.Boolean)" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainContext.DomainClient" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainContext.EntityContainer" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainContext.HasChanges" />
        <element api="Overload:System.ServiceModel.DomainServices.Client.DomainContext.InvokeOperation">
          <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.InvokeOperation``1(System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.Action{System.ServiceModel.DomainServices.Client.InvokeOperation{``0}},System.Object)" />
          <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.InvokeOperation(System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.Action{System.ServiceModel.DomainServices.Client.InvokeOperation},System.Object)" />
        </element>
        <element api="P:System.ServiceModel.DomainServices.Client.DomainContext.IsLoading" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainContext.IsSubmitting" />
        <element api="Overload:System.ServiceModel.DomainServices.Client.DomainContext.Load">
          <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.Load``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0})" />
          <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.Load``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Boolean)" />
          <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.Load``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Action{System.ServiceModel.DomainServices.Client.LoadOperation{``0}},System.Object)" />
          <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.Load``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.ServiceModel.DomainServices.Client.LoadBehavior,System.Boolean)" />
          <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.Load(System.ServiceModel.DomainServices.Client.EntityQuery,System.ServiceModel.DomainServices.Client.LoadBehavior,System.Action{System.ServiceModel.DomainServices.Client.LoadOperation},System.Object)" />
          <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.Load``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.ServiceModel.DomainServices.Client.LoadBehavior,System.Action{System.ServiceModel.DomainServices.Client.LoadOperation{``0}},System.Object)" />
        </element>
        <element api="E:System.ServiceModel.DomainServices.Client.DomainContext.PropertyChanged" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.RaisePropertyChanged(System.String)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.RejectChanges" />
        <element api="Overload:System.ServiceModel.DomainServices.Client.DomainContext.SubmitChanges">
          <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.SubmitChanges" />
          <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.SubmitChanges(System.Action{System.ServiceModel.DomainServices.Client.SubmitOperation},System.Object)" />
        </element>
        <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.ValidateMethod(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainContext.ValidationContext" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainContext" />
      </containers>
      <file name="c188886b-8eca-88d9-29d0-d65e7b03b13e" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Client.DomainContext">
      <topicdata name="DomainContext" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Client.DomainContext" />
      <apidata name="DomainContext" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.AddReference(System.Type,System.ServiceModel.DomainServices.Client.DomainContext)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.CreateEntityContainer" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.CreateQuery``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.Boolean)" />
        <element api="Overload:System.ServiceModel.DomainServices.Client.DomainContext.InvokeOperation">
          <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.InvokeOperation``1(System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.Action{System.ServiceModel.DomainServices.Client.InvokeOperation{``0}},System.Object)" />
          <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.InvokeOperation(System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.Action{System.ServiceModel.DomainServices.Client.InvokeOperation},System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.DomainServices.Client.DomainContext.Load">
          <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.Load``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0})" />
          <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.Load``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Boolean)" />
          <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.Load``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Action{System.ServiceModel.DomainServices.Client.LoadOperation{``0}},System.Object)" />
          <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.Load``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.ServiceModel.DomainServices.Client.LoadBehavior,System.Boolean)" />
          <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.Load(System.ServiceModel.DomainServices.Client.EntityQuery,System.ServiceModel.DomainServices.Client.LoadBehavior,System.Action{System.ServiceModel.DomainServices.Client.LoadOperation},System.Object)" />
          <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.Load``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.ServiceModel.DomainServices.Client.LoadBehavior,System.Action{System.ServiceModel.DomainServices.Client.LoadOperation{``0}},System.Object)" />
        </element>
        <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.RaisePropertyChanged(System.String)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.RejectChanges" />
        <element api="Overload:System.ServiceModel.DomainServices.Client.DomainContext.SubmitChanges">
          <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.SubmitChanges" />
          <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.SubmitChanges(System.Action{System.ServiceModel.DomainServices.Client.SubmitOperation},System.Object)" />
        </element>
        <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.ValidateMethod(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainContext" />
      </containers>
      <file name="9fa26153-688d-9222-b374-93c5a211891b" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Client.DomainContext">
      <topicdata name="DomainContext" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Client.DomainContext" />
      <apidata name="DomainContext" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Client.DomainContext.DomainClient" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainContext.EntityContainer" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainContext.HasChanges" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainContext.IsLoading" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainContext.IsSubmitting" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainContext.ValidationContext" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainContext" />
      </containers>
      <file name="197cc693-fc60-a739-0af2-042b9bd0c8cb" />
    </api>
    <api id="Events.T:System.ServiceModel.DomainServices.Client.DomainContext">
      <topicdata name="DomainContext" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.DomainServices.Client.DomainContext" />
      <apidata name="DomainContext" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.DomainServices.Client.DomainContext.PropertyChanged" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainContext" />
      </containers>
      <file name="d978c80e-f8d6-1758-52c3-feddacfc08a0" />
    </api>
    <api id="Overload:System.ServiceModel.DomainServices.Client.DomainContext.InvokeOperation">
      <topicdata name="InvokeOperation" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.DomainContext" />
      <apidata name="InvokeOperation" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.InvokeOperation``1(System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.Action{System.ServiceModel.DomainServices.Client.InvokeOperation{``0}},System.Object)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.InvokeOperation(System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.Action{System.ServiceModel.DomainServices.Client.InvokeOperation},System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainContext" ref="true" />
      </containers>
      <file name="4997d194-79e0-a566-3e1d-6e7416f98cbd" />
    </api>
    <api id="Overload:System.ServiceModel.DomainServices.Client.DomainContext.Load">
      <topicdata name="Load" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.DomainContext" />
      <apidata name="Load" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.Load``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0})" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.Load``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Boolean)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.Load``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Action{System.ServiceModel.DomainServices.Client.LoadOperation{``0}},System.Object)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.Load``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.ServiceModel.DomainServices.Client.LoadBehavior,System.Boolean)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.Load(System.ServiceModel.DomainServices.Client.EntityQuery,System.ServiceModel.DomainServices.Client.LoadBehavior,System.Action{System.ServiceModel.DomainServices.Client.LoadOperation},System.Object)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.Load``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.ServiceModel.DomainServices.Client.LoadBehavior,System.Action{System.ServiceModel.DomainServices.Client.LoadOperation{``0}},System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainContext" ref="true" />
      </containers>
      <file name="ecc6ef2b-affe-dba6-f021-0cb422bfdfbf" />
    </api>
    <api id="Overload:System.ServiceModel.DomainServices.Client.DomainContext.SubmitChanges">
      <topicdata name="SubmitChanges" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.DomainContext" />
      <apidata name="SubmitChanges" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.SubmitChanges" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainContext.SubmitChanges(System.Action{System.ServiceModel.DomainServices.Client.SubmitOperation},System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainContext" ref="true" />
      </containers>
      <file name="985f7eb8-518c-0823-11c4-e4398a4ff0f7" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainContext.#ctor(System.ServiceModel.DomainServices.Client.DomainClient)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="domainClient">
          <type api="T:System.ServiceModel.DomainServices.Client.DomainClient" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainContext" ref="true" />
      </containers>
      <file name="8fec3238-1723-aa68-0204-ecd72340773f" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainContext.AddReference(System.Type,System.ServiceModel.DomainServices.Client.DomainContext)">
      <topicdata group="api" />
      <apidata name="AddReference" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="entityType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="domainContext">
          <type api="T:System.ServiceModel.DomainServices.Client.DomainContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainContext" ref="true" />
      </containers>
      <file name="05355699-efac-933b-c2bc-6230378f89d0" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainContext.CreateEntityContainer">
      <topicdata group="api" />
      <apidata name="CreateEntityContainer" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntityContainer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainContext" ref="true" />
      </containers>
      <file name="2ec8b799-1407-d36d-a240-ae2feb54bbfd" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainContext.CreateQuery``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name="CreateQuery" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="queryName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="hasSideEffects">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="isComposable">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
          <specialization>
            <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.DomainContext.CreateQuery``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.Boolean)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainContext" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="a8dd6ebd-309a-7930-3ef0-7994c8d23c8e" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.DomainContext.DomainClient">
      <topicdata group="api" />
      <apidata name="DomainClient" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DomainClient" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClient" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainContext" ref="true" />
      </containers>
      <file name="0d26038c-8026-fe3a-4084-8caba74c85b4" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.DomainContext.EntityContainer">
      <topicdata group="api" />
      <apidata name="EntityContainer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EntityContainer" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntityContainer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainContext" ref="true" />
      </containers>
      <file name="2acda490-e263-5ea2-a274-165c332dcb90" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.DomainContext.HasChanges">
      <topicdata group="api" />
      <apidata name="HasChanges" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasChanges" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainContext" ref="true" />
      </containers>
      <file name="54f09f6d-86d3-06c7-8226-4e250a7c1761" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainContext.InvokeOperation``1(System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.Action{System.ServiceModel.DomainServices.Client.InvokeOperation{``0}},System.Object)">
      <topicdata group="api" />
      <apidata name="InvokeOperation" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.DomainServices.Client.DomainContext.InvokeOperation" />
      <proceduredata virtual="true" />
      <templates>
        <template name="TValue" />
      </templates>
      <parameters>
        <parameter name="operationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="returnType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="parameters">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="hasSideEffects">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.DomainServices.Client.InvokeOperation`1" ref="true">
                <specialization>
                  <template name="TValue" index="0" api="M:System.ServiceModel.DomainServices.Client.DomainContext.InvokeOperation``1(System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.Action{System.ServiceModel.DomainServices.Client.InvokeOperation{``0}},System.Object)" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeOperation`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="M:System.ServiceModel.DomainServices.Client.DomainContext.InvokeOperation``1(System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.Action{System.ServiceModel.DomainServices.Client.InvokeOperation{``0}},System.Object)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainContext" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="3b62d0da-79d3-726e-aee4-866b533b4c95" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainContext.InvokeOperation(System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.Action{System.ServiceModel.DomainServices.Client.InvokeOperation},System.Object)">
      <topicdata group="api" />
      <apidata name="InvokeOperation" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.DomainServices.Client.DomainContext.InvokeOperation" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="operationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="returnType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="parameters">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="hasSideEffects">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.DomainServices.Client.InvokeOperation" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeOperation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainContext" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="2ae4c886-b0da-0081-3fa2-1a77399d2021" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.DomainContext.IsLoading">
      <topicdata group="api" />
      <apidata name="IsLoading" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsLoading" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainContext" ref="true" />
      </containers>
      <file name="51be4467-1ad2-e2a9-f9c7-ed40ba03eaee" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.DomainContext.IsSubmitting">
      <topicdata group="api" />
      <apidata name="IsSubmitting" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsSubmitting" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainContext" ref="true" />
      </containers>
      <file name="13d4b9c7-534f-1ff3-bbb9-fdabd54373aa" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainContext.Load(System.ServiceModel.DomainServices.Client.EntityQuery,System.ServiceModel.DomainServices.Client.LoadBehavior,System.Action{System.ServiceModel.DomainServices.Client.LoadOperation},System.Object)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.DomainServices.Client.DomainContext.Load" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="query">
          <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery" ref="true" />
        </parameter>
        <parameter name="loadBehavior">
          <type api="T:System.ServiceModel.DomainServices.Client.LoadBehavior" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.DomainServices.Client.LoadOperation" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.LoadOperation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainContext" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="ee543a1c-4ddc-b86e-1a39-8b5abe158526" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainContext.Load``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0})">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.DomainServices.Client.DomainContext.Load" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="query">
          <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
            <specialization>
              <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.DomainContext.Load``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.LoadOperation`1" ref="true">
          <specialization>
            <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.DomainContext.Load``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainContext" ref="true" />
      </containers>
      <file name="54def318-7618-f14d-bfc5-375f0b6ee70d" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainContext.Load``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Action{System.ServiceModel.DomainServices.Client.LoadOperation{``0}},System.Object)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.DomainServices.Client.DomainContext.Load" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="query">
          <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
            <specialization>
              <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.DomainContext.Load``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Action{System.ServiceModel.DomainServices.Client.LoadOperation{``0}},System.Object)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="callback">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.DomainServices.Client.LoadOperation`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.DomainContext.Load``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Action{System.ServiceModel.DomainServices.Client.LoadOperation{``0}},System.Object)" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.LoadOperation`1" ref="true">
          <specialization>
            <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.DomainContext.Load``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Action{System.ServiceModel.DomainServices.Client.LoadOperation{``0}},System.Object)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainContext" ref="true" />
      </containers>
      <file name="a037244a-783b-84b1-c12e-fcef9296952c" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainContext.Load``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Boolean)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.DomainServices.Client.DomainContext.Load" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="query">
          <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
            <specialization>
              <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.DomainContext.Load``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Boolean)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="throwOnError">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.LoadOperation`1" ref="true">
          <specialization>
            <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.DomainContext.Load``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Boolean)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainContext" ref="true" />
      </containers>
      <file name="5dad19b7-2402-9215-21f7-75cca1621f75" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainContext.Load``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.ServiceModel.DomainServices.Client.LoadBehavior,System.Action{System.ServiceModel.DomainServices.Client.LoadOperation{``0}},System.Object)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.DomainServices.Client.DomainContext.Load" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="query">
          <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
            <specialization>
              <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.DomainContext.Load``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.ServiceModel.DomainServices.Client.LoadBehavior,System.Action{System.ServiceModel.DomainServices.Client.LoadOperation{``0}},System.Object)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="loadBehavior">
          <type api="T:System.ServiceModel.DomainServices.Client.LoadBehavior" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.DomainServices.Client.LoadOperation`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.DomainContext.Load``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.ServiceModel.DomainServices.Client.LoadBehavior,System.Action{System.ServiceModel.DomainServices.Client.LoadOperation{``0}},System.Object)" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.LoadOperation`1" ref="true">
          <specialization>
            <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.DomainContext.Load``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.ServiceModel.DomainServices.Client.LoadBehavior,System.Action{System.ServiceModel.DomainServices.Client.LoadOperation{``0}},System.Object)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainContext" ref="true" />
      </containers>
      <file name="d2b678c3-0fa7-39d1-04f8-7086a6a0835c" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainContext.Load``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.ServiceModel.DomainServices.Client.LoadBehavior,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.DomainServices.Client.DomainContext.Load" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="query">
          <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
            <specialization>
              <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.DomainContext.Load``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.ServiceModel.DomainServices.Client.LoadBehavior,System.Boolean)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="loadBehavior">
          <type api="T:System.ServiceModel.DomainServices.Client.LoadBehavior" ref="false" />
        </parameter>
        <parameter name="throwOnError">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.LoadOperation`1" ref="true">
          <specialization>
            <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.DomainContext.Load``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.ServiceModel.DomainServices.Client.LoadBehavior,System.Boolean)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainContext" ref="true" />
      </containers>
      <file name="638f7ea1-6339-9152-e9a2-7119663145bf" />
    </api>
    <api id="E:System.ServiceModel.DomainServices.Client.DomainContext.PropertyChanged">
      <topicdata group="api" />
      <apidata name="PropertyChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_PropertyChanged" />
      <remover name="remove_PropertyChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.PropertyChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
          <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainContext" ref="true" />
      </containers>
      <file name="1c24f97d-eab8-9b2b-558b-40a8ebee3280" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainContext.RaisePropertyChanged(System.String)">
      <topicdata group="api" />
      <apidata name="RaisePropertyChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainContext" ref="true" />
      </containers>
      <file name="f2f0f51f-d0ab-58f8-b0ee-4de1f34cb573" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainContext.RejectChanges">
      <topicdata group="api" />
      <apidata name="RejectChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainContext" ref="true" />
      </containers>
      <file name="7647164b-af3f-ce9b-d88b-229607685e98" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainContext.SubmitChanges">
      <topicdata group="api" />
      <apidata name="SubmitChanges" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.DomainServices.Client.DomainContext.SubmitChanges" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.SubmitOperation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainContext" ref="true" />
      </containers>
      <file name="2505467c-32a2-a440-61a1-8d96014a7355" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainContext.SubmitChanges(System.Action{System.ServiceModel.DomainServices.Client.SubmitOperation},System.Object)">
      <topicdata group="api" />
      <apidata name="SubmitChanges" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.DomainServices.Client.DomainContext.SubmitChanges" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.DomainServices.Client.SubmitOperation" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.SubmitOperation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainContext" ref="true" />
      </containers>
      <file name="b87fa3d8-f99c-da1a-2b01-7f9748ba1e1f" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainContext.ValidateMethod(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <topicdata group="api" />
      <apidata name="ValidateMethod" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="methodName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainContext" ref="true" />
      </containers>
      <file name="2be76368-b188-4240-c462-db6eae3640a3" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.DomainContext.ValidationContext">
      <topicdata group="api" />
      <apidata name="ValidationContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ValidationContext" />
      <setter name="set_ValidationContext" />
      <returns>
        <type api="T:System.ComponentModel.DataAnnotations.ValidationContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainContext" ref="true" />
      </containers>
      <file name="4b3a7888-6236-3c85-8403-842f8e355c22" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.DomainException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.DomainException" />
      <apidata name="DomainException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Client.DomainException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <file name="3b9fd90d-38f8-7370-b4f0-7be195321c92" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Client.DomainException">
      <topicdata name="DomainException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Client.DomainException" />
      <apidata name="DomainException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Client.DomainException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="Overload:System.ServiceModel.DomainServices.Client.DomainException.#ctor">
          <element api="M:System.ServiceModel.DomainServices.Client.DomainException.#ctor" />
          <element api="M:System.ServiceModel.DomainServices.Client.DomainException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.DomainServices.Client.DomainException.#ctor(System.String,System.Exception)" />
          <element api="M:System.ServiceModel.DomainServices.Client.DomainException.#ctor(System.String,System.Int32)" />
          <element api="M:System.ServiceModel.DomainServices.Client.DomainException.#ctor(System.String,System.Int32,System.Exception)" />
          <element api="M:System.ServiceModel.DomainServices.Client.DomainException.#ctor(System.String,System.Int32,System.String)" />
        </element>
        <element api="P:System.ServiceModel.DomainServices.Client.DomainException.ErrorCode" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainException.StackTrace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainException" />
      </containers>
      <file name="69f7cc89-e235-8e10-1c66-d6877d923c06" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Client.DomainException">
      <topicdata name="DomainException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Client.DomainException" />
      <apidata name="DomainException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Client.DomainException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainException" />
      </containers>
      <file name="a1372c67-696a-805b-1bc4-9261928e1866" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Client.DomainException">
      <topicdata name="DomainException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Client.DomainException" />
      <apidata name="DomainException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Client.DomainException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainException.ErrorCode" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainException.StackTrace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainException" />
      </containers>
      <file name="57a98f70-422e-6be2-e309-8a192545b916" />
    </api>
    <api id="Overload:System.ServiceModel.DomainServices.Client.DomainException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.DomainException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.DomainServices.Client.DomainException.#ctor" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainException.#ctor(System.String,System.Exception)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainException.#ctor(System.String,System.Int32)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainException.#ctor(System.String,System.Int32,System.Exception)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainException.#ctor(System.String,System.Int32,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainException" ref="true" />
      </containers>
      <file name="1232b796-2a57-c9b1-8c2f-f8b1650f45b9" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DomainServices.Client.DomainException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainException" ref="true" />
      </containers>
      <file name="5e933b1d-c127-4f83-8d5d-44844bad4970" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DomainServices.Client.DomainException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainException" ref="true" />
      </containers>
      <file name="067df283-dfc4-e6c3-e3b7-50b35ff28c5d" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DomainServices.Client.DomainException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainException" ref="true" />
      </containers>
      <file name="0a9dc7c4-e598-fb73-6ae8-abfc9dab1742" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainException.#ctor(System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DomainServices.Client.DomainException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="errorCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainException" ref="true" />
      </containers>
      <file name="1a17eada-da69-be80-b93b-fa89bc3a5cb1" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainException.#ctor(System.String,System.Int32,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DomainServices.Client.DomainException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="errorCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainException" ref="true" />
      </containers>
      <file name="b9fa8946-177f-b71d-2f77-264cca2ff702" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainException.#ctor(System.String,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DomainServices.Client.DomainException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="errorCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="stackTrace">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainException" ref="true" />
      </containers>
      <file name="e9147343-7676-8c3b-c632-820de9150cc9" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.DomainException.ErrorCode">
      <topicdata group="api" />
      <apidata name="ErrorCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ErrorCode" />
      <setter name="set_ErrorCode" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainException" ref="true" />
      </containers>
      <file name="59087497-42e9-4034-24c2-808581620697" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.DomainException.StackTrace">
      <topicdata group="api" />
      <apidata name="StackTrace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Exception.StackTrace">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_StackTrace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainException" ref="true" />
      </containers>
      <file name="401afa1d-6dc5-18c3-c758-8517fe0efa07" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.DomainOperationException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.DomainOperationException" />
      <apidata name="DomainOperationException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Client.DomainOperationException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <file name="aab5e1e5-f215-da2e-b899-673077b9219d" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Client.DomainOperationException">
      <topicdata name="DomainOperationException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Client.DomainOperationException" />
      <apidata name="DomainOperationException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Client.DomainOperationException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="Overload:System.ServiceModel.DomainServices.Client.DomainOperationException.#ctor">
          <element api="M:System.ServiceModel.DomainServices.Client.DomainOperationException.#ctor" />
          <element api="M:System.ServiceModel.DomainServices.Client.DomainOperationException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.DomainServices.Client.DomainOperationException.#ctor(System.String,System.Exception)" />
          <element api="M:System.ServiceModel.DomainServices.Client.DomainOperationException.#ctor(System.String,System.ServiceModel.DomainServices.Client.OperationErrorStatus)" />
          <element api="M:System.ServiceModel.DomainServices.Client.DomainOperationException.#ctor(System.String,System.ServiceModel.DomainServices.Client.OperationErrorStatus,System.Int32)" />
          <element api="M:System.ServiceModel.DomainServices.Client.DomainOperationException.#ctor(System.String,System.ServiceModel.DomainServices.Client.OperationErrorStatus,System.Int32,System.String)" />
        </element>
        <element api="P:System.ServiceModel.DomainServices.Client.DomainOperationException.ErrorCode" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainOperationException.StackTrace" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainOperationException.Status" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainOperationException" />
      </containers>
      <file name="525c96b7-614e-b6a3-1ee0-053a23c0cf62" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Client.DomainOperationException">
      <topicdata name="DomainOperationException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Client.DomainOperationException" />
      <apidata name="DomainOperationException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Client.DomainOperationException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainOperationException" />
      </containers>
      <file name="3413cad1-b030-a70a-c2ae-29c1c2b87cd2" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Client.DomainOperationException">
      <topicdata name="DomainOperationException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Client.DomainOperationException" />
      <apidata name="DomainOperationException" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Client.DomainOperationException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainOperationException.ErrorCode" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainOperationException.StackTrace" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainOperationException.Status" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainOperationException" />
      </containers>
      <file name="62ef7bc0-da39-9680-3d0a-24df0d1696e0" />
    </api>
    <api id="Overload:System.ServiceModel.DomainServices.Client.DomainOperationException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.DomainOperationException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.DomainServices.Client.DomainOperationException.#ctor" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainOperationException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainOperationException.#ctor(System.String,System.Exception)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainOperationException.#ctor(System.String,System.ServiceModel.DomainServices.Client.OperationErrorStatus)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainOperationException.#ctor(System.String,System.ServiceModel.DomainServices.Client.OperationErrorStatus,System.Int32)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainOperationException.#ctor(System.String,System.ServiceModel.DomainServices.Client.OperationErrorStatus,System.Int32,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainOperationException" ref="true" />
      </containers>
      <file name="9070501c-7de6-7a07-b424-601977124d65" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainOperationException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DomainServices.Client.DomainOperationException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainOperationException" ref="true" />
      </containers>
      <file name="91a1b0a6-5ba8-0697-c52a-387e4b28588d" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainOperationException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DomainServices.Client.DomainOperationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainOperationException" ref="true" />
      </containers>
      <file name="482899a4-c145-5642-8545-712811963193" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainOperationException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DomainServices.Client.DomainOperationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainOperationException" ref="true" />
      </containers>
      <file name="6e841fa3-3467-7f31-a700-46d7d6ea7404" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainOperationException.#ctor(System.String,System.ServiceModel.DomainServices.Client.OperationErrorStatus)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DomainServices.Client.DomainOperationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="status">
          <type api="T:System.ServiceModel.DomainServices.Client.OperationErrorStatus" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainOperationException" ref="true" />
      </containers>
      <file name="c540167d-f5f0-8442-56cc-6f7565931ac2" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainOperationException.#ctor(System.String,System.ServiceModel.DomainServices.Client.OperationErrorStatus,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DomainServices.Client.DomainOperationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="status">
          <type api="T:System.ServiceModel.DomainServices.Client.OperationErrorStatus" ref="false" />
        </parameter>
        <parameter name="errorCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainOperationException" ref="true" />
      </containers>
      <file name="00f05823-2528-7c61-8b55-03f3e65f57cc" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainOperationException.#ctor(System.String,System.ServiceModel.DomainServices.Client.OperationErrorStatus,System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DomainServices.Client.DomainOperationException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="status">
          <type api="T:System.ServiceModel.DomainServices.Client.OperationErrorStatus" ref="false" />
        </parameter>
        <parameter name="errorCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="stackTrace">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainOperationException" ref="true" />
      </containers>
      <file name="9678e88b-f357-d124-613f-266add96a2aa" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.DomainOperationException.ErrorCode">
      <topicdata group="api" />
      <apidata name="ErrorCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ErrorCode" />
      <setter name="set_ErrorCode" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainOperationException" ref="true" />
      </containers>
      <file name="a43e4034-dc14-bbec-07a5-ca612a3b9810" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.DomainOperationException.StackTrace">
      <topicdata group="api" />
      <apidata name="StackTrace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Exception.StackTrace">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_StackTrace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainOperationException" ref="true" />
      </containers>
      <file name="aa9b4d27-af2d-1259-8fb2-e2c2217141e5" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.DomainOperationException.Status">
      <topicdata group="api" />
      <apidata name="Status" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Status" />
      <setter name="set_Status" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.OperationErrorStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainOperationException" ref="true" />
      </containers>
      <file name="f80d4f26-7266-5141-6d24-5316c223b361" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.DomainServiceFault">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.DomainServiceFault" />
      <apidata name="DomainServiceFault" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Client.DomainServiceFault.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client.Web" module="System.ServiceModel.DomainServices.Client.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
          <assignment name="Namespace">
            <type api="T:System.String" ref="true" />
            <value>DomainServices</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="d55a14a6-060d-a1aa-f8a6-c4ba22c52987" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Client.DomainServiceFault">
      <topicdata name="DomainServiceFault" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Client.DomainServiceFault" />
      <apidata name="DomainServiceFault" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Client.DomainServiceFault.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainServiceFault.#ctor" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainServiceFault.ErrorCode" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainServiceFault.ErrorMessage" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainServiceFault.GetValidationErrors" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainServiceFault.IsDomainException" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainServiceFault.OperationErrors" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainServiceFault.StackTrace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client.Web" module="System.ServiceModel.DomainServices.Client.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainServiceFault" />
      </containers>
      <file name="eef385cb-3a71-f3d7-13f0-121f23228999" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Client.DomainServiceFault">
      <topicdata name="DomainServiceFault" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Client.DomainServiceFault" />
      <apidata name="DomainServiceFault" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Client.DomainServiceFault.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainServiceFault.GetValidationErrors" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client.Web" module="System.ServiceModel.DomainServices.Client.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainServiceFault" />
      </containers>
      <file name="a43cdbcf-e95c-f262-b001-141188f5814b" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Client.DomainServiceFault">
      <topicdata name="DomainServiceFault" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Client.DomainServiceFault" />
      <apidata name="DomainServiceFault" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Client.DomainServiceFault.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Client.DomainServiceFault.ErrorCode" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainServiceFault.ErrorMessage" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainServiceFault.IsDomainException" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainServiceFault.OperationErrors" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainServiceFault.StackTrace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client.Web" module="System.ServiceModel.DomainServices.Client.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainServiceFault" />
      </containers>
      <file name="ddf269b2-1598-4d3d-6bd8-183206b5336b" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainServiceFault.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client.Web" module="System.ServiceModel.DomainServices.Client.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainServiceFault" ref="true" />
      </containers>
      <file name="d49ec783-52b3-c23f-7658-56e33e56954c" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.DomainServiceFault.ErrorCode">
      <topicdata group="api" />
      <apidata name="ErrorCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ErrorCode" />
      <setter name="set_ErrorCode" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client.Web" module="System.ServiceModel.DomainServices.Client.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainServiceFault" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
          <assignment name="EmitDefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="3120c2a8-68f1-8085-5ea7-ebb90e6f611a" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.DomainServiceFault.ErrorMessage">
      <topicdata group="api" />
      <apidata name="ErrorMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ErrorMessage" />
      <setter name="set_ErrorMessage" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client.Web" module="System.ServiceModel.DomainServices.Client.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainServiceFault" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="7df55f78-61d0-f091-d77a-4b905d4b0a90" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.DomainServiceFault.GetValidationErrors">
      <topicdata group="api" />
      <apidata name="GetValidationErrors" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.DataAnnotations.ValidationResult" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client.Web" module="System.ServiceModel.DomainServices.Client.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainServiceFault" ref="true" />
      </containers>
      <file name="02bb4e5f-17b1-2c1e-541c-48c7bdfc86fc" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.DomainServiceFault.IsDomainException">
      <topicdata group="api" />
      <apidata name="IsDomainException" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsDomainException" />
      <setter name="set_IsDomainException" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client.Web" module="System.ServiceModel.DomainServices.Client.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainServiceFault" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="b4538f51-b749-bd91-953a-103dfcd8a25c" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.DomainServiceFault.OperationErrors">
      <topicdata group="api" />
      <apidata name="OperationErrors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OperationErrors" />
      <setter name="set_OperationErrors" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.DomainServices.Client.ValidationResultInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client.Web" module="System.ServiceModel.DomainServices.Client.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainServiceFault" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
          <assignment name="EmitDefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="8435d4cb-d19e-a992-6d78-ce2d48cae2b6" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.DomainServiceFault.StackTrace">
      <topicdata group="api" />
      <apidata name="StackTrace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_StackTrace" />
      <setter name="set_StackTrace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client.Web" module="System.ServiceModel.DomainServices.Client.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.DomainServiceFault" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
          <assignment name="EmitDefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="97450959-b18f-7d4f-c67d-d59c37d39dbf" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.Entity">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.Entity" />
      <apidata name="Entity" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.INotifyDataErrorInfo" ref="true" />
        <type api="T:System.ComponentModel.IEditableObject" ref="true" />
        <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
        <type api="T:System.ComponentModel.IRevertibleChangeTracking" ref="true" />
        <type api="T:System.ComponentModel.IChangeTracking" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="97ed2bad-2075-dcc4-e874-40e8c559a279" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Client.Entity">
      <topicdata name="Entity" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Client.Entity" />
      <apidata name="Entity" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.#ctor" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.AcceptChanges" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.BeginEdit" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.CancelEdit" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.CanInvokeAction(System.String)" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.EndEdit" />
        <element api="P:System.ServiceModel.DomainServices.Client.Entity.EntityActions" />
        <element api="P:System.ServiceModel.DomainServices.Client.Entity.EntityConflict" />
        <element api="P:System.ServiceModel.DomainServices.Client.Entity.EntitySet" />
        <element api="P:System.ServiceModel.DomainServices.Client.Entity.EntityState" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.GetIdentity" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.GetOriginal" />
        <element api="P:System.ServiceModel.DomainServices.Client.Entity.HasChanges" />
        <element api="P:System.ServiceModel.DomainServices.Client.Entity.HasValidationErrors" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.InvokeAction(System.String,System.Object[])" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.IsActionInvoked(System.String)" />
        <element api="P:System.ServiceModel.DomainServices.Client.Entity.IsDeserializing" />
        <element api="P:System.ServiceModel.DomainServices.Client.Entity.IsReadOnly" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.OnActionStateChanged" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.OnDeserialized(System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.OnDeserializing(System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.OnLoaded(System.Boolean)" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="E:System.ServiceModel.DomainServices.Client.Entity.PropertyChanged" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.RaiseDataMemberChanged(System.String)" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.RaiseDataMemberChanging(System.String)" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.RaisePropertyChanged(System.String)" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.RejectChanges" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.System#ComponentModel#IChangeTracking#AcceptChanges" />
        <element api="P:System.ServiceModel.DomainServices.Client.Entity.System#ComponentModel#IChangeTracking#IsChanged" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.System#ComponentModel#IEditableObject#BeginEdit" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.System#ComponentModel#IEditableObject#CancelEdit" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.System#ComponentModel#IEditableObject#EndEdit" />
        <element api="E:System.ServiceModel.DomainServices.Client.Entity.System#ComponentModel#INotifyDataErrorInfo#ErrorsChanged" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.System#ComponentModel#INotifyDataErrorInfo#GetErrors(System.String)" />
        <element api="P:System.ServiceModel.DomainServices.Client.Entity.System#ComponentModel#INotifyDataErrorInfo#HasErrors" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.System#ComponentModel#IRevertibleChangeTracking#RejectChanges" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.UpdateActionState(System.String,System.String,System.String)" />
        <element api="Overload:System.ServiceModel.DomainServices.Client.Entity.ValidateProperty">
          <element api="M:System.ServiceModel.DomainServices.Client.Entity.ValidateProperty(System.String,System.Object)" />
          <element api="M:System.ServiceModel.DomainServices.Client.Entity.ValidateProperty(System.ComponentModel.DataAnnotations.ValidationContext,System.Object)" />
        </element>
        <element api="P:System.ServiceModel.DomainServices.Client.Entity.ValidationErrors" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" />
      </containers>
      <file name="ef5fbca4-5348-be45-40d0-c819b57cc7c6" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Client.Entity">
      <topicdata name="Entity" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Client.Entity" />
      <apidata name="Entity" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.AcceptChanges" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.BeginEdit" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.CancelEdit" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.CanInvokeAction(System.String)" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.EndEdit" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.GetIdentity" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.GetOriginal" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.InvokeAction(System.String,System.Object[])" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.IsActionInvoked(System.String)" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.OnActionStateChanged" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.OnDeserialized(System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.OnDeserializing(System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.OnLoaded(System.Boolean)" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.RaiseDataMemberChanged(System.String)" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.RaiseDataMemberChanging(System.String)" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.RaisePropertyChanged(System.String)" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.RejectChanges" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.System#ComponentModel#IChangeTracking#AcceptChanges" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.System#ComponentModel#IEditableObject#BeginEdit" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.System#ComponentModel#IEditableObject#CancelEdit" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.System#ComponentModel#IEditableObject#EndEdit" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.System#ComponentModel#INotifyDataErrorInfo#GetErrors(System.String)" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.System#ComponentModel#IRevertibleChangeTracking#RejectChanges" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.UpdateActionState(System.String,System.String,System.String)" />
        <element api="Overload:System.ServiceModel.DomainServices.Client.Entity.ValidateProperty">
          <element api="M:System.ServiceModel.DomainServices.Client.Entity.ValidateProperty(System.String,System.Object)" />
          <element api="M:System.ServiceModel.DomainServices.Client.Entity.ValidateProperty(System.ComponentModel.DataAnnotations.ValidationContext,System.Object)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" />
      </containers>
      <file name="c83c452c-0aa1-c63b-ae16-5fa74305c2b1" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Client.Entity">
      <topicdata name="Entity" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Client.Entity" />
      <apidata name="Entity" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Client.Entity.EntityActions" />
        <element api="P:System.ServiceModel.DomainServices.Client.Entity.EntityConflict" />
        <element api="P:System.ServiceModel.DomainServices.Client.Entity.EntitySet" />
        <element api="P:System.ServiceModel.DomainServices.Client.Entity.EntityState" />
        <element api="P:System.ServiceModel.DomainServices.Client.Entity.HasChanges" />
        <element api="P:System.ServiceModel.DomainServices.Client.Entity.HasValidationErrors" />
        <element api="P:System.ServiceModel.DomainServices.Client.Entity.IsDeserializing" />
        <element api="P:System.ServiceModel.DomainServices.Client.Entity.IsReadOnly" />
        <element api="P:System.ServiceModel.DomainServices.Client.Entity.System#ComponentModel#IChangeTracking#IsChanged" />
        <element api="P:System.ServiceModel.DomainServices.Client.Entity.System#ComponentModel#INotifyDataErrorInfo#HasErrors" />
        <element api="P:System.ServiceModel.DomainServices.Client.Entity.ValidationErrors" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" />
      </containers>
      <file name="096a9eae-cf68-90cf-c30b-dbc8c3c3caa0" />
    </api>
    <api id="Events.T:System.ServiceModel.DomainServices.Client.Entity">
      <topicdata name="Entity" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.DomainServices.Client.Entity" />
      <apidata name="Entity" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.DomainServices.Client.Entity.PropertyChanged" />
        <element api="E:System.ServiceModel.DomainServices.Client.Entity.System#ComponentModel#INotifyDataErrorInfo#ErrorsChanged" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" />
      </containers>
      <file name="67de4e13-5d06-458a-65b3-ac96b762fbb9" />
    </api>
    <api id="Overload:System.ServiceModel.DomainServices.Client.Entity.ValidateProperty">
      <topicdata name="ValidateProperty" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.Entity" />
      <apidata name="ValidateProperty" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.ValidateProperty(System.String,System.Object)" />
        <element api="M:System.ServiceModel.DomainServices.Client.Entity.ValidateProperty(System.ComponentModel.DataAnnotations.ValidationContext,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <file name="62c2f364-b241-69ce-df65-a11aa027e237" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.Entity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <file name="6878f0f8-09f9-a997-58e0-7c50a82e864c" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.Entity.AcceptChanges">
      <topicdata group="api" />
      <apidata name="AcceptChanges" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <file name="c229535d-9aa2-6f47-c5d2-c22dfd43312f" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.Entity.BeginEdit">
      <topicdata group="api" />
      <apidata name="BeginEdit" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <file name="9aefb1f0-56cb-5e85-7095-a5789bcae459" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.Entity.CancelEdit">
      <topicdata group="api" />
      <apidata name="CancelEdit" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <file name="049ecfb9-8b5c-956b-e7f7-22ce249300a1" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.Entity.CanInvokeAction(System.String)">
      <topicdata group="api" />
      <apidata name="CanInvokeAction" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <file name="9b553a0c-8a8c-7591-27b0-593079a1cfd2" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.Entity.EndEdit">
      <topicdata group="api" />
      <apidata name="EndEdit" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <file name="ed6d2b5c-1074-0300-626e-a9f2392c02d3" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.Entity.EntityActions">
      <topicdata group="api" />
      <apidata name="EntityActions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EntityActions" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.DomainServices.Client.EntityAction" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DataAnnotations.DisplayAttribute" ref="true" />
          <assignment name="AutoGenerateField">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="43d34ee3-48ff-60cf-36fe-c96a034ac586" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.Entity.EntityConflict">
      <topicdata group="api" />
      <apidata name="EntityConflict" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EntityConflict" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntityConflict" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DataAnnotations.DisplayAttribute" ref="true" />
          <assignment name="AutoGenerateField">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="52f75de8-138f-e87a-cef2-d77f18face8a" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.Entity.EntitySet">
      <topicdata group="api" />
      <apidata name="EntitySet" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EntitySet" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <file name="b406d57b-e4f7-84fd-f700-c1306095c88f" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.Entity.EntityState">
      <topicdata group="api" />
      <apidata name="EntityState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EntityState" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntityState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DataAnnotations.DisplayAttribute" ref="true" />
          <assignment name="AutoGenerateField">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="1e64c71e-cc44-5c72-c84b-230b6a6a5973" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.Entity.GetIdentity">
      <topicdata group="api" />
      <apidata name="GetIdentity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <file name="fff6e553-40e0-c489-d95a-3b9e0548a921" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.Entity.GetOriginal">
      <topicdata group="api" />
      <apidata name="GetOriginal" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <file name="7a25b0f2-578c-0aee-69c5-2b57c1ee60f5" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.Entity.HasChanges">
      <topicdata group="api" />
      <apidata name="HasChanges" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasChanges" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DataAnnotations.DisplayAttribute" ref="true" />
          <assignment name="AutoGenerateField">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="bb2128b8-3319-c3aa-1be9-b6c830fd45f4" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.Entity.HasValidationErrors">
      <topicdata group="api" />
      <apidata name="HasValidationErrors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasValidationErrors" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DataAnnotations.DisplayAttribute" ref="true" />
          <assignment name="AutoGenerateField">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="a6cd4953-e564-0253-e354-260736bbe658" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.Entity.InvokeAction(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="InvokeAction" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="actionName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <file name="1e701cc5-7737-e749-93c2-5f85b3e6356c" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.Entity.IsActionInvoked(System.String)">
      <topicdata group="api" />
      <apidata name="IsActionInvoked" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <file name="1e946b26-d930-75a9-6eef-c9ef4f46f214" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.Entity.IsDeserializing">
      <topicdata group="api" />
      <apidata name="IsDeserializing" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsDeserializing" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <file name="fed4751a-c1bf-2aa5-bc2c-c73b7bd074f5" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.Entity.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DataAnnotations.DisplayAttribute" ref="true" />
          <assignment name="AutoGenerateField">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="ef05f602-5e4b-ee38-fe69-1b65cc2b122d" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.Entity.OnActionStateChanged">
      <topicdata group="api" />
      <apidata name="OnActionStateChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <file name="63b89cb9-84b1-0d1d-e6c2-88d71729d18b" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.Entity.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="OnDeserialized" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.OnDeserializedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="61e0cb46-9ac9-7e6c-3c19-78a12f4b2a97" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.Entity.OnDeserializing(System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="OnDeserializing" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.OnDeserializingAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="71b979e0-bd4f-218f-8b22-b61ad2fd0233" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.Entity.OnLoaded(System.Boolean)">
      <topicdata group="api" />
      <apidata name="OnLoaded" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="isInitialLoad">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <file name="9965ba78-0c4f-aaa7-a62b-80950b4cac0c" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.Entity.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnPropertyChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <file name="7a89579f-ff13-f3ed-4d99-1f4fb4e23cb0" />
    </api>
    <api id="E:System.ServiceModel.DomainServices.Client.Entity.PropertyChanged">
      <topicdata group="api" />
      <apidata name="PropertyChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_PropertyChanged" />
      <remover name="remove_PropertyChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.PropertyChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
          <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <file name="7457c502-cb0c-c8a0-e53f-91187bcf2d2a" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.Entity.RaiseDataMemberChanged(System.String)">
      <topicdata group="api" />
      <apidata name="RaiseDataMemberChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <file name="bf8ecbe5-651f-e730-bb9b-c860489ddbd9" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.Entity.RaiseDataMemberChanging(System.String)">
      <topicdata group="api" />
      <apidata name="RaiseDataMemberChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <file name="8e9e9130-11cf-90ec-18f1-f39c10659138" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.Entity.RaisePropertyChanged(System.String)">
      <topicdata group="api" />
      <apidata name="RaisePropertyChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <file name="5c63d79d-14ab-67f9-6393-d2f446df8807" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.Entity.RejectChanges">
      <topicdata group="api" />
      <apidata name="RejectChanges" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <file name="6cb3c02c-edde-0ba5-97ee-2f8b5ab6e4b1" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.Entity.System#ComponentModel#IChangeTracking#AcceptChanges">
      <topicdata group="api" eiiName="IChangeTracking.AcceptChanges" />
      <apidata name="AcceptChanges" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ComponentModel.IChangeTracking.AcceptChanges">
          <type api="T:System.ComponentModel.IChangeTracking" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <file name="e76cc452-5950-5c59-a225-282177cf23c2" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.Entity.System#ComponentModel#IChangeTracking#IsChanged">
      <topicdata group="api" eiiName="IChangeTracking.IsChanged" />
      <apidata name="IsChanged" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IChangeTracking.IsChanged" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IChangeTracking.IsChanged">
          <type api="T:System.ComponentModel.IChangeTracking" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <file name="1128590d-0ca5-a712-1952-6238c9b4406a" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.Entity.System#ComponentModel#IEditableObject#BeginEdit">
      <topicdata group="api" eiiName="IEditableObject.BeginEdit" />
      <apidata name="BeginEdit" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ComponentModel.IEditableObject.BeginEdit">
          <type api="T:System.ComponentModel.IEditableObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <file name="2735d943-410b-d52d-36bc-6f3259aa2aa3" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.Entity.System#ComponentModel#IEditableObject#CancelEdit">
      <topicdata group="api" eiiName="IEditableObject.CancelEdit" />
      <apidata name="CancelEdit" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ComponentModel.IEditableObject.CancelEdit">
          <type api="T:System.ComponentModel.IEditableObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <file name="1c12a6ee-ccfb-89ed-f606-8b1ddc734468" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.Entity.System#ComponentModel#IEditableObject#EndEdit">
      <topicdata group="api" eiiName="IEditableObject.EndEdit" />
      <apidata name="EndEdit" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ComponentModel.IEditableObject.EndEdit">
          <type api="T:System.ComponentModel.IEditableObject" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <file name="7334a9db-ef07-8ba4-bfbb-04e94d82fb8a" />
    </api>
    <api id="E:System.ServiceModel.DomainServices.Client.Entity.System#ComponentModel#INotifyDataErrorInfo#ErrorsChanged">
      <topicdata group="api" eiiName="INotifyDataErrorInfo.ErrorsChanged" />
      <apidata name="ErrorsChanged" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />
      <remover name="remove_System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.DataErrorsChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.DataErrorsChangedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.INotifyDataErrorInfo.ErrorsChanged">
          <type api="T:System.ComponentModel.INotifyDataErrorInfo" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <file name="a7ffd5a8-87f3-132e-7577-bd079c13099c" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.Entity.System#ComponentModel#INotifyDataErrorInfo#GetErrors(System.String)">
      <topicdata group="api" eiiName="INotifyDataErrorInfo.GetErrors" />
      <apidata name="GetErrors" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.INotifyDataErrorInfo.GetErrors(System.String)">
          <type api="T:System.ComponentModel.INotifyDataErrorInfo" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <file name="46869ef7-5abc-2049-27f3-31e39a3d4a0c" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.Entity.System#ComponentModel#INotifyDataErrorInfo#HasErrors">
      <topicdata group="api" eiiName="INotifyDataErrorInfo.HasErrors" />
      <apidata name="HasErrors" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.INotifyDataErrorInfo.HasErrors" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.INotifyDataErrorInfo.HasErrors">
          <type api="T:System.ComponentModel.INotifyDataErrorInfo" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <file name="a4f26774-c297-c8cb-728a-7b8c0997f65b" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.Entity.System#ComponentModel#IRevertibleChangeTracking#RejectChanges">
      <topicdata group="api" eiiName="IRevertibleChangeTracking.RejectChanges" />
      <apidata name="RejectChanges" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ComponentModel.IRevertibleChangeTracking.RejectChanges">
          <type api="T:System.ComponentModel.IRevertibleChangeTracking" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <file name="41293935-a4f0-1c0a-b919-7cc4ebe784d0" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.Entity.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <file name="4ec2392e-d031-6f9c-49b5-b094013f6e65" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.Entity.UpdateActionState(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="UpdateActionState" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="canInvokePropertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="isInvokedPropertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <file name="16e0440a-c2c0-f5f5-1177-340ccc51cf78" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.Entity.ValidateProperty(System.ComponentModel.DataAnnotations.ValidationContext,System.Object)">
      <topicdata group="api" />
      <apidata name="ValidateProperty" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.DomainServices.Client.Entity.ValidateProperty" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="validationContext">
          <type api="T:System.ComponentModel.DataAnnotations.ValidationContext" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <file name="681621ed-5f21-f0c4-bac2-eeafda69a135" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.Entity.ValidateProperty(System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="ValidateProperty" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.DomainServices.Client.Entity.ValidateProperty" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <file name="2b466c2f-95ef-fc20-99fd-bdecb02d9571" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.Entity.ValidationErrors">
      <topicdata group="api" />
      <apidata name="ValidationErrors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ValidationErrors" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.DataAnnotations.ValidationResult" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.DataAnnotations.DisplayAttribute" ref="true" />
          <assignment name="AutoGenerateField">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="f577a481-f2ce-72e3-1450-911396b38233" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.EntityAction">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.EntityAction" />
      <apidata name="EntityAction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <file name="c0846416-7ef9-5518-1742-85d11d831e2f" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Client.EntityAction">
      <topicdata name="EntityAction" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntityAction" />
      <apidata name="EntityAction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityAction.#ctor(System.String,System.Object[])" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityAction.HasParameters" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityAction.Name" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityAction.Parameters" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityAction" />
      </containers>
      <file name="6f911052-be6a-9866-606d-57c519c1b310" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Client.EntityAction">
      <topicdata name="EntityAction" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntityAction" />
      <apidata name="EntityAction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityAction" />
      </containers>
      <file name="f5f124ee-5df4-52f3-8f20-36d0d606102b" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Client.EntityAction">
      <topicdata name="EntityAction" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntityAction" />
      <apidata name="EntityAction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Client.EntityAction.HasParameters" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityAction.Name" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityAction.Parameters" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityAction" />
      </containers>
      <file name="111e951d-1640-e42c-b3a7-96c05a46a024" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityAction.#ctor(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityAction" ref="true" />
      </containers>
      <file name="4f1698cb-fe29-2f12-263f-b2840b0f44d5" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.EntityAction.HasParameters">
      <topicdata group="api" />
      <apidata name="HasParameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasParameters" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityAction" ref="true" />
      </containers>
      <file name="f481c1eb-e24e-90e5-0477-0643f3b1f1b2" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.EntityAction.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityAction" ref="true" />
      </containers>
      <file name="516b5305-2d61-44f2-0c81-4e6204d5bb33" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.EntityAction.Parameters">
      <topicdata group="api" />
      <apidata name="Parameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parameters" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityAction" ref="true" />
      </containers>
      <file name="ccae073d-bcd3-8c64-124f-55ada5d6d410" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.EntityChangeSet">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.EntityChangeSet" />
      <apidata name="EntityChangeSet" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <file name="4284da98-fbd6-19da-c101-a51be3ac2869" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Client.EntityChangeSet">
      <topicdata name="EntityChangeSet" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntityChangeSet" />
      <apidata name="EntityChangeSet" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.DomainServices.Client.EntityChangeSet.AddedEntities" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityChangeSet.GetChangeSetEntries" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityChangeSet.IsEmpty" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityChangeSet.ModifiedEntities" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityChangeSet.RemovedEntities" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityChangeSet.System#Collections#Generic#IEnumerable{System#ServiceModel#DomainServices#Client#Entity}#GetEnumerator" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityChangeSet.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityChangeSet.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityChangeSet" />
      </containers>
      <file name="649505a0-ae3a-f135-2264-e0905b0890b0" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Client.EntityChangeSet">
      <topicdata name="EntityChangeSet" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntityChangeSet" />
      <apidata name="EntityChangeSet" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.DomainServices.Client.EntityChangeSet.GetChangeSetEntries" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityChangeSet.System#Collections#Generic#IEnumerable{System#ServiceModel#DomainServices#Client#Entity}#GetEnumerator" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityChangeSet.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityChangeSet.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityChangeSet" />
      </containers>
      <file name="5869e4be-caab-4b43-af4b-296486286066" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Client.EntityChangeSet">
      <topicdata name="EntityChangeSet" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntityChangeSet" />
      <apidata name="EntityChangeSet" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Client.EntityChangeSet.AddedEntities" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityChangeSet.IsEmpty" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityChangeSet.ModifiedEntities" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityChangeSet.RemovedEntities" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityChangeSet" />
      </containers>
      <file name="44caeaa0-f737-56c0-7e31-71e2877951ff" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.EntityChangeSet.AddedEntities">
      <topicdata group="api" />
      <apidata name="AddedEntities" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AddedEntities" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityChangeSet" ref="true" />
      </containers>
      <file name="ce6c8f4f-4284-0be4-21ae-c624f2961dc1" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityChangeSet.GetChangeSetEntries">
      <topicdata group="api" />
      <apidata name="GetChangeSetEntries" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.DomainServices.Client.ChangeSetEntry" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityChangeSet" ref="true" />
      </containers>
      <file name="7a72dba0-6e9b-dcf2-d274-d8a6f35ee1b0" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.EntityChangeSet.IsEmpty">
      <topicdata group="api" />
      <apidata name="IsEmpty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsEmpty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityChangeSet" ref="true" />
      </containers>
      <file name="abb1085e-697c-a909-08a4-3d91d5ae067c" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.EntityChangeSet.ModifiedEntities">
      <topicdata group="api" />
      <apidata name="ModifiedEntities" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ModifiedEntities" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityChangeSet" ref="true" />
      </containers>
      <file name="21f0b640-61a6-15f1-6787-3bdb4fa7c464" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.EntityChangeSet.RemovedEntities">
      <topicdata group="api" />
      <apidata name="RemovedEntities" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RemovedEntities" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityChangeSet" ref="true" />
      </containers>
      <file name="0b8f9ef7-d8cb-eb67-f97b-8728e9243184" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityChangeSet.System#Collections#Generic#IEnumerable{System#ServiceModel#DomainServices#Client#Entity}#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityChangeSet" ref="true" />
      </containers>
      <file name="14ce1232-4810-9470-8ef5-19e0c59d4b19" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityChangeSet.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityChangeSet" ref="true" />
      </containers>
      <file name="4ab1229b-ece6-526c-0ecf-cc5eba0085e8" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityChangeSet.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityChangeSet" ref="true" />
      </containers>
      <file name="f334abe1-afa3-54d8-b131-7505ec6b98a0" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.EntityCollection`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
      <apidata name="EntityCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
      </templates>
      <implements>
        <type api="T:System.ServiceModel.DomainServices.Client.IEntityCollection" ref="true" />
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.Collections.Specialized.INotifyCollectionChanged" ref="true" />
        <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
        <type api="T:System.ComponentModel.ICollectionViewFactory" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <file name="797ea3c1-77e1-1991-3b3d-b86bc6465253" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Client.EntityCollection`1">
      <topicdata name="EntityCollection" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
      <apidata name="EntityCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ServiceModel.DomainServices.Client.EntityCollection`1.#ctor">
          <element api="M:System.ServiceModel.DomainServices.Client.EntityCollection`1.#ctor(System.ServiceModel.DomainServices.Client.Entity,System.String,System.Func{`0,System.Boolean})" />
          <element api="M:System.ServiceModel.DomainServices.Client.EntityCollection`1.#ctor(System.ServiceModel.DomainServices.Client.Entity,System.String,System.Func{`0,System.Boolean},System.Action{`0},System.Action{`0})" />
        </element>
        <element api="M:System.ServiceModel.DomainServices.Client.EntityCollection`1.Add(`0)" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityCollection`1.Count" />
        <element api="E:System.ServiceModel.DomainServices.Client.EntityCollection`1.EntityAdded" />
        <element api="E:System.ServiceModel.DomainServices.Client.EntityCollection`1.EntityRemoved" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityCollection`1.GetEnumerator" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityCollection`1.Remove(`0)" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="E:System.ServiceModel.DomainServices.Client.EntityCollection`1.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityCollection`1.System#ComponentModel#ICollectionViewFactory#CreateView" />
        <element api="E:System.ServiceModel.DomainServices.Client.EntityCollection`1.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityCollection`1.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
      </containers>
      <file name="60c7fd27-ab78-bd15-6a4e-090832edb892" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Client.EntityCollection`1">
      <topicdata name="EntityCollection" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
      <apidata name="EntityCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.DomainServices.Client.EntityCollection`1.Add(`0)" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityCollection`1.GetEnumerator" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityCollection`1.Remove(`0)" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityCollection`1.System#ComponentModel#ICollectionViewFactory#CreateView" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityCollection`1.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
      </containers>
      <file name="59a217db-0353-0d80-4da5-2ff125e5a53b" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Client.EntityCollection`1">
      <topicdata name="EntityCollection" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
      <apidata name="EntityCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Client.EntityCollection`1.Count" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
      </containers>
      <file name="4b856eef-07da-462e-bff4-afc96f490df0" />
    </api>
    <api id="Events.T:System.ServiceModel.DomainServices.Client.EntityCollection`1">
      <topicdata name="EntityCollection" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
      <apidata name="EntityCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="E:System.ServiceModel.DomainServices.Client.EntityCollection`1.EntityAdded" />
        <element api="E:System.ServiceModel.DomainServices.Client.EntityCollection`1.EntityRemoved" />
        <element api="E:System.ServiceModel.DomainServices.Client.EntityCollection`1.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged" />
        <element api="E:System.ServiceModel.DomainServices.Client.EntityCollection`1.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
      </containers>
      <file name="feabd330-06b5-2935-9711-bbf6668edf04" />
    </api>
    <api id="Overload:System.ServiceModel.DomainServices.Client.EntityCollection`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.DomainServices.Client.EntityCollection`1.#ctor(System.ServiceModel.DomainServices.Client.Entity,System.String,System.Func{`0,System.Boolean})" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityCollection`1.#ctor(System.ServiceModel.DomainServices.Client.Entity,System.String,System.Func{`0,System.Boolean},System.Action{`0},System.Action{`0})" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" ref="true" />
      </containers>
      <file name="caa86cfc-9263-d195-895a-435f19c0739e" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityCollection`1.#ctor(System.ServiceModel.DomainServices.Client.Entity,System.String,System.Func{`0,System.Boolean})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DomainServices.Client.EntityCollection`1.#ctor" />
      <parameters>
        <parameter name="parent">
          <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
        </parameter>
        <parameter name="memberName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="entityPredicate">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" ref="true" />
      </containers>
      <file name="ddd50c35-cf09-2a3d-4642-8ad091ac47d6" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityCollection`1.#ctor(System.ServiceModel.DomainServices.Client.Entity,System.String,System.Func{`0,System.Boolean},System.Action{`0},System.Action{`0})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DomainServices.Client.EntityCollection`1.#ctor" />
      <parameters>
        <parameter name="parent">
          <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
        </parameter>
        <parameter name="memberName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="entityPredicate">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="attachAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="detachAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" ref="true" />
      </containers>
      <file name="c7eebd55-7538-c271-ba08-d9be6bd4ff87" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityCollection`1.Add(`0)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="entity">
          <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" ref="true" />
      </containers>
      <file name="1dda1369-19c5-273c-2821-80c4934fb33c" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.EntityCollection`1.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" ref="true" />
      </containers>
      <file name="b2e2f595-0dc5-5124-a7cb-eb24f9ed44a9" />
    </api>
    <api id="E:System.ServiceModel.DomainServices.Client.EntityCollection`1.EntityAdded">
      <topicdata group="api" />
      <apidata name="EntityAdded" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_EntityAdded" />
      <remover name="remove_EntityAdded" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.DomainServices.Client.EntityCollectionChangedEventArgs`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ServiceModel.DomainServices.Client.EntityCollectionChangedEventArgs`1" ref="true">
          <specialization>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </specialization>
        </type>
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" ref="true" />
      </containers>
      <file name="d64fc0fc-e6e2-6dab-69ca-32f9389ef1fe" />
    </api>
    <api id="E:System.ServiceModel.DomainServices.Client.EntityCollection`1.EntityRemoved">
      <topicdata group="api" />
      <apidata name="EntityRemoved" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_EntityRemoved" />
      <remover name="remove_EntityRemoved" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.DomainServices.Client.EntityCollectionChangedEventArgs`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
              </specialization>
            </type>
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ServiceModel.DomainServices.Client.EntityCollectionChangedEventArgs`1" ref="true">
          <specialization>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </specialization>
        </type>
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" ref="true" />
      </containers>
      <file name="30ec454f-496d-38a5-1f7c-3c0635ec6a12" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityCollection`1.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" ref="true" />
      </containers>
      <file name="da286674-8f13-1562-aadc-b123678cbadd" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityCollection`1.Remove(`0)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="entity">
          <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" ref="true" />
      </containers>
      <file name="ee3fbaec-7eff-a352-feba-1b48d42f5567" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" ref="true" />
      </containers>
      <file name="5eef4530-066b-a3e0-63fc-024abaf25191" />
    </api>
    <api id="E:System.ServiceModel.DomainServices.Client.EntityCollection`1.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <topicdata group="api" eiiName="INotifyCollectionChanged.CollectionChanged" />
      <apidata name="CollectionChanged" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />
      <remover name="remove_System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />
      <eventhandler>
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged">
          <type api="T:System.Collections.Specialized.INotifyCollectionChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" ref="true" />
      </containers>
      <file name="0f57f999-fad1-9f84-0ace-9f63f7c880b1" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityCollection`1.System#ComponentModel#ICollectionViewFactory#CreateView">
      <topicdata group="api" eiiName="ICollectionViewFactory.CreateView" />
      <apidata name="CreateView" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.ComponentModel.ICollectionView" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICollectionViewFactory.CreateView">
          <type api="T:System.ComponentModel.ICollectionViewFactory" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" ref="true" />
      </containers>
      <file name="428be8a6-30d5-b457-fe79-4ce726eb6bf1" />
    </api>
    <api id="E:System.ServiceModel.DomainServices.Client.EntityCollection`1.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <topicdata group="api" eiiName="INotifyPropertyChanged.PropertyChanged" />
      <apidata name="PropertyChanged" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      <remover name="remove_System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.PropertyChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
          <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" ref="true" />
      </containers>
      <file name="ef75ed83-2ff3-753f-cc2a-f28536eecb09" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityCollection`1.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityCollection`1" ref="true" />
      </containers>
      <file name="2f0f942f-b40c-2c44-0ed3-b70809f84fa8" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.EntityCollectionChangedEventArgs`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.EntityCollectionChangedEventArgs`1" />
      <apidata name="EntityCollectionChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TEntity" />
      </templates>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <file name="b1490efa-55bc-d8b6-988b-6ad0e6a1ea2e" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Client.EntityCollectionChangedEventArgs`1">
      <topicdata name="EntityCollectionChangedEventArgs" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntityCollectionChangedEventArgs`1" />
      <apidata name="EntityCollectionChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TEntity" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityCollectionChangedEventArgs`1.#ctor(`0)" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityCollectionChangedEventArgs`1.Entity" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityCollectionChangedEventArgs`1" />
      </containers>
      <file name="507b709f-ceb2-6b5b-92ae-dae461cdc3cb" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Client.EntityCollectionChangedEventArgs`1">
      <topicdata name="EntityCollectionChangedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntityCollectionChangedEventArgs`1" />
      <apidata name="EntityCollectionChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TEntity" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityCollectionChangedEventArgs`1" />
      </containers>
      <file name="d09d4e62-5837-8173-8d76-616fbd7d7fdd" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Client.EntityCollectionChangedEventArgs`1">
      <topicdata name="EntityCollectionChangedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntityCollectionChangedEventArgs`1" />
      <apidata name="EntityCollectionChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TEntity" />
      </templates>
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Client.EntityCollectionChangedEventArgs`1.Entity" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityCollectionChangedEventArgs`1" />
      </containers>
      <file name="ef2dbfd7-0d72-e6cd-ed01-97cc890c81c3" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityCollectionChangedEventArgs`1.#ctor(`0)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="entity">
          <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollectionChangedEventArgs`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityCollectionChangedEventArgs`1" ref="true" />
      </containers>
      <file name="8b1d95ea-44d7-c28e-bbf6-c98c957fec71" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.EntityCollectionChangedEventArgs`1.Entity">
      <topicdata group="api" />
      <apidata name="Entity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Entity" />
      <returns>
        <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityCollectionChangedEventArgs`1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityCollectionChangedEventArgs`1" ref="true" />
      </containers>
      <file name="24113c3c-3a33-877e-fc6e-50e87f5731a8" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.EntityConflict">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.EntityConflict" />
      <apidata name="EntityConflict" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <file name="bd85be3e-06bd-c6fe-9245-e24f369f85a1" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Client.EntityConflict">
      <topicdata name="EntityConflict" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntityConflict" />
      <apidata name="EntityConflict" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityConflict.CurrentEntity" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityConflict.IsDeleted" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityConflict.OriginalEntity" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityConflict.PropertyNames" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityConflict.Resolve" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityConflict.StoreEntity" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityConflict" />
      </containers>
      <file name="d3d20399-75f6-8de6-60ad-31ef977c8e24" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Client.EntityConflict">
      <topicdata name="EntityConflict" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntityConflict" />
      <apidata name="EntityConflict" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityConflict.Resolve" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityConflict" />
      </containers>
      <file name="d92ffce8-cf17-6221-fc0e-fac4fd4d0d61" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Client.EntityConflict">
      <topicdata name="EntityConflict" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntityConflict" />
      <apidata name="EntityConflict" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Client.EntityConflict.CurrentEntity" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityConflict.IsDeleted" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityConflict.OriginalEntity" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityConflict.PropertyNames" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityConflict.StoreEntity" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityConflict" />
      </containers>
      <file name="29ffaa61-43a6-03da-8e58-c6c2e56aaf6b" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.EntityConflict.CurrentEntity">
      <topicdata group="api" />
      <apidata name="CurrentEntity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CurrentEntity" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityConflict" ref="true" />
      </containers>
      <file name="7ce4eaff-e779-9279-f1b3-5d023da656db" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.EntityConflict.IsDeleted">
      <topicdata group="api" />
      <apidata name="IsDeleted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsDeleted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityConflict" ref="true" />
      </containers>
      <file name="9cb8d70b-5da6-c6eb-d36e-2c14f8835386" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.EntityConflict.OriginalEntity">
      <topicdata group="api" />
      <apidata name="OriginalEntity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OriginalEntity" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityConflict" ref="true" />
      </containers>
      <file name="7369bf87-dbb5-0e30-e69b-138df225bf18" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.EntityConflict.PropertyNames">
      <topicdata group="api" />
      <apidata name="PropertyNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PropertyNames" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityConflict" ref="true" />
      </containers>
      <file name="42bc2cc4-f25f-e19c-fcd7-46218fd32ce6" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityConflict.Resolve">
      <topicdata group="api" />
      <apidata name="Resolve" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityConflict" ref="true" />
      </containers>
      <file name="c1d25322-046d-24c0-4326-7e1af50b38bd" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.EntityConflict.StoreEntity">
      <topicdata group="api" />
      <apidata name="StoreEntity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_StoreEntity" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityConflict" ref="true" />
      </containers>
      <file name="3187cccf-9213-240a-f1a9-6bc6c1c442ed" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.EntityContainer">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.EntityContainer" />
      <apidata name="EntityContainer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.IRevertibleChangeTracking" ref="true" />
        <type api="T:System.ComponentModel.IChangeTracking" ref="true" />
        <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <file name="a3351fe4-31ef-9147-a0c4-adfc0ac8e6f4" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Client.EntityContainer">
      <topicdata name="EntityContainer" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntityContainer" />
      <apidata name="EntityContainer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.#ctor" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.AcceptChanges" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.AddReference(System.ServiceModel.DomainServices.Client.EntitySet)" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.Clear" />
        <element api="Overload:System.ServiceModel.DomainServices.Client.EntityContainer.CreateEntitySet">
          <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.CreateEntitySet``1" />
          <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.CreateEntitySet``1(System.ServiceModel.DomainServices.Client.EntitySetOperations)" />
        </element>
        <element api="P:System.ServiceModel.DomainServices.Client.EntityContainer.EntitySets" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.GetChanges" />
        <element api="Overload:System.ServiceModel.DomainServices.Client.EntityContainer.GetEntitySet">
          <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.GetEntitySet``1" />
          <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.GetEntitySet(System.Type)" />
        </element>
        <element api="P:System.ServiceModel.DomainServices.Client.EntityContainer.HasChanges" />
        <element api="Overload:System.ServiceModel.DomainServices.Client.EntityContainer.LoadEntities">
          <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.LoadEntities(System.Collections.IEnumerable)" />
          <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.LoadEntities(System.Collections.IEnumerable,System.ServiceModel.DomainServices.Client.LoadBehavior)" />
        </element>
        <element api="E:System.ServiceModel.DomainServices.Client.EntityContainer.PropertyChanged" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.RaisePropertyChanged(System.String)" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.RejectChanges" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.System#ComponentModel#IChangeTracking#AcceptChanges" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityContainer.System#ComponentModel#IChangeTracking#IsChanged" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.System#ComponentModel#IRevertibleChangeTracking#RejectChanges" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.TryGetEntitySet(System.Type,System.ServiceModel.DomainServices.Client.EntitySet@)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityContainer" />
      </containers>
      <file name="791f2930-ac57-cb91-8cf4-47bf539afac9" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Client.EntityContainer">
      <topicdata name="EntityContainer" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntityContainer" />
      <apidata name="EntityContainer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.AcceptChanges" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.AddReference(System.ServiceModel.DomainServices.Client.EntitySet)" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.Clear" />
        <element api="Overload:System.ServiceModel.DomainServices.Client.EntityContainer.CreateEntitySet">
          <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.CreateEntitySet``1" />
          <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.CreateEntitySet``1(System.ServiceModel.DomainServices.Client.EntitySetOperations)" />
        </element>
        <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.GetChanges" />
        <element api="Overload:System.ServiceModel.DomainServices.Client.EntityContainer.GetEntitySet">
          <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.GetEntitySet``1" />
          <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.GetEntitySet(System.Type)" />
        </element>
        <element api="Overload:System.ServiceModel.DomainServices.Client.EntityContainer.LoadEntities">
          <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.LoadEntities(System.Collections.IEnumerable)" />
          <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.LoadEntities(System.Collections.IEnumerable,System.ServiceModel.DomainServices.Client.LoadBehavior)" />
        </element>
        <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.RaisePropertyChanged(System.String)" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.RejectChanges" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.System#ComponentModel#IChangeTracking#AcceptChanges" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.System#ComponentModel#IRevertibleChangeTracking#RejectChanges" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.TryGetEntitySet(System.Type,System.ServiceModel.DomainServices.Client.EntitySet@)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityContainer" />
      </containers>
      <file name="46c84248-520a-cf52-ccc3-f4a014d06bec" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Client.EntityContainer">
      <topicdata name="EntityContainer" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntityContainer" />
      <apidata name="EntityContainer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Client.EntityContainer.EntitySets" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityContainer.HasChanges" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityContainer.System#ComponentModel#IChangeTracking#IsChanged" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityContainer" />
      </containers>
      <file name="5c121d89-6313-0914-e52f-ef0d30d758d4" />
    </api>
    <api id="Events.T:System.ServiceModel.DomainServices.Client.EntityContainer">
      <topicdata name="EntityContainer" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntityContainer" />
      <apidata name="EntityContainer" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.DomainServices.Client.EntityContainer.PropertyChanged" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityContainer" />
      </containers>
      <file name="9dd81c48-ea03-5c8e-fa76-0d1f860669fc" />
    </api>
    <api id="Overload:System.ServiceModel.DomainServices.Client.EntityContainer.CreateEntitySet">
      <topicdata name="CreateEntitySet" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.EntityContainer" />
      <apidata name="CreateEntitySet" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.CreateEntitySet``1" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.CreateEntitySet``1(System.ServiceModel.DomainServices.Client.EntitySetOperations)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityContainer" ref="true" />
      </containers>
      <file name="a1e5ca96-20f6-b702-db23-d107b5c52248" />
    </api>
    <api id="Overload:System.ServiceModel.DomainServices.Client.EntityContainer.GetEntitySet">
      <topicdata name="GetEntitySet" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.EntityContainer" />
      <apidata name="GetEntitySet" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.GetEntitySet``1" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.GetEntitySet(System.Type)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityContainer" ref="true" />
      </containers>
      <file name="c1e76980-873b-a514-81c1-f1189eb005fc" />
    </api>
    <api id="Overload:System.ServiceModel.DomainServices.Client.EntityContainer.LoadEntities">
      <topicdata name="LoadEntities" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.EntityContainer" />
      <apidata name="LoadEntities" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.LoadEntities(System.Collections.IEnumerable)" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityContainer.LoadEntities(System.Collections.IEnumerable,System.ServiceModel.DomainServices.Client.LoadBehavior)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityContainer" ref="true" />
      </containers>
      <file name="0ea61f96-a488-9a86-9cf5-41e368b7ab3b" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityContainer.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityContainer" ref="true" />
      </containers>
      <file name="c2bf40ea-9215-b6b9-659c-4cc1c853b155" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityContainer.AcceptChanges">
      <topicdata group="api" />
      <apidata name="AcceptChanges" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityContainer" ref="true" />
      </containers>
      <file name="778f026b-a0f6-8fea-9073-af5e48b4b5a2" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityContainer.AddReference(System.ServiceModel.DomainServices.Client.EntitySet)">
      <topicdata group="api" />
      <apidata name="AddReference" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="entitySet">
          <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityContainer" ref="true" />
      </containers>
      <file name="9a55e4ce-a8df-3020-57c9-a32ccd8c73c8" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityContainer.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityContainer" ref="true" />
      </containers>
      <file name="73b730b1-a202-b5f1-4936-1038efe83048" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityContainer.CreateEntitySet``1">
      <topicdata group="api" />
      <apidata name="CreateEntitySet" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.DomainServices.Client.EntityContainer.CreateEntitySet" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
      </templates>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityContainer" ref="true" />
      </containers>
      <file name="a98be1b2-7b1f-ba2c-fbcf-632d29c27d9a" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityContainer.CreateEntitySet``1(System.ServiceModel.DomainServices.Client.EntitySetOperations)">
      <topicdata group="api" />
      <apidata name="CreateEntitySet" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.DomainServices.Client.EntityContainer.CreateEntitySet" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="supportedOperations">
          <type api="T:System.ServiceModel.DomainServices.Client.EntitySetOperations" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityContainer" ref="true" />
      </containers>
      <file name="ca1a53b3-839d-644d-a96a-50ae8dd88f47" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.EntityContainer.EntitySets">
      <topicdata group="api" />
      <apidata name="EntitySets" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EntitySets" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityContainer" ref="true" />
      </containers>
      <file name="25abe31a-38ad-e09d-7a66-9e4b761711c0" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityContainer.GetChanges">
      <topicdata group="api" />
      <apidata name="GetChanges" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntityChangeSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityContainer" ref="true" />
      </containers>
      <file name="c0e2f78f-b77f-f45a-7cdd-227618ecc371" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityContainer.GetEntitySet``1">
      <topicdata group="api" />
      <apidata name="GetEntitySet" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.DomainServices.Client.EntityContainer.GetEntitySet" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
      </templates>
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" ref="true">
          <specialization>
            <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityContainer.GetEntitySet``1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityContainer" ref="true" />
      </containers>
      <file name="e85026cc-878b-f4c7-2fe8-6dca373fb47b" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityContainer.GetEntitySet(System.Type)">
      <topicdata group="api" />
      <apidata name="GetEntitySet" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.DomainServices.Client.EntityContainer.GetEntitySet" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="entityType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityContainer" ref="true" />
      </containers>
      <file name="b47d9c3e-cb21-d2f0-2b2f-83b3d76bed8f" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.EntityContainer.HasChanges">
      <topicdata group="api" />
      <apidata name="HasChanges" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasChanges" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityContainer" ref="true" />
      </containers>
      <file name="a13817c0-4caa-5bc1-e6fc-9718211c4645" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityContainer.LoadEntities(System.Collections.IEnumerable)">
      <topicdata group="api" />
      <apidata name="LoadEntities" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.DomainServices.Client.EntityContainer.LoadEntities" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="entities">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityContainer" ref="true" />
      </containers>
      <file name="aa4282b2-24af-96d2-7c82-d7c372ec37b6" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityContainer.LoadEntities(System.Collections.IEnumerable,System.ServiceModel.DomainServices.Client.LoadBehavior)">
      <topicdata group="api" />
      <apidata name="LoadEntities" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.DomainServices.Client.EntityContainer.LoadEntities" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="entities">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </parameter>
        <parameter name="loadBehavior">
          <type api="T:System.ServiceModel.DomainServices.Client.LoadBehavior" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityContainer" ref="true" />
      </containers>
      <file name="a9f281b4-3fe6-ddf7-35f2-bf51fe0f06d7" />
    </api>
    <api id="E:System.ServiceModel.DomainServices.Client.EntityContainer.PropertyChanged">
      <topicdata group="api" />
      <apidata name="PropertyChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_PropertyChanged" />
      <remover name="remove_PropertyChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.PropertyChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
          <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityContainer" ref="true" />
      </containers>
      <file name="f52cef23-a567-822e-2aac-2b928b288956" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityContainer.RaisePropertyChanged(System.String)">
      <topicdata group="api" />
      <apidata name="RaisePropertyChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityContainer" ref="true" />
      </containers>
      <file name="480dd6de-b8c9-e0f3-509b-383a18ad6e32" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityContainer.RejectChanges">
      <topicdata group="api" />
      <apidata name="RejectChanges" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityContainer" ref="true" />
      </containers>
      <file name="f326fd61-15a9-d3bc-5e2f-15aa117ac5b4" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityContainer.System#ComponentModel#IChangeTracking#AcceptChanges">
      <topicdata group="api" eiiName="IChangeTracking.AcceptChanges" />
      <apidata name="AcceptChanges" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ComponentModel.IChangeTracking.AcceptChanges">
          <type api="T:System.ComponentModel.IChangeTracking" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityContainer" ref="true" />
      </containers>
      <file name="cf74545f-3b36-1e9a-62eb-a11fdc5d686d" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.EntityContainer.System#ComponentModel#IChangeTracking#IsChanged">
      <topicdata group="api" eiiName="IChangeTracking.IsChanged" />
      <apidata name="IsChanged" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IChangeTracking.IsChanged" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IChangeTracking.IsChanged">
          <type api="T:System.ComponentModel.IChangeTracking" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityContainer" ref="true" />
      </containers>
      <file name="31b94f29-e86c-69c1-a5c1-c4f416534bb8" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityContainer.System#ComponentModel#IRevertibleChangeTracking#RejectChanges">
      <topicdata group="api" eiiName="IRevertibleChangeTracking.RejectChanges" />
      <apidata name="RejectChanges" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ComponentModel.IRevertibleChangeTracking.RejectChanges">
          <type api="T:System.ComponentModel.IRevertibleChangeTracking" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityContainer" ref="true" />
      </containers>
      <file name="fe0493e2-7ba5-9028-cc3a-dc711771f865" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityContainer.TryGetEntitySet(System.Type,System.ServiceModel.DomainServices.Client.EntitySet@)">
      <topicdata group="api" />
      <apidata name="TryGetEntitySet" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="entityType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="entitySet" out="true">
          <referenceTo>
            <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityContainer" ref="true" />
      </containers>
      <file name="f4be71b4-02e1-9016-2a1d-bb702675cee3" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.EntityKey">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.EntityKey" />
      <apidata name="EntityKey" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <file name="97f7b36f-961d-0f78-ba33-cb696f75581e" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Client.EntityKey">
      <topicdata name="EntityKey" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntityKey" />
      <apidata name="EntityKey" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityKey.#ctor" />
        <element api="Overload:System.ServiceModel.DomainServices.Client.EntityKey.Create">
          <element api="M:System.ServiceModel.DomainServices.Client.EntityKey.Create(System.Object[])" />
          <element api="M:System.ServiceModel.DomainServices.Client.EntityKey.Create``2(``0,``1)" />
          <element api="M:System.ServiceModel.DomainServices.Client.EntityKey.Create``3(``0,``1,``2)" />
        </element>
        <element api="M:System.ServiceModel.DomainServices.Client.EntityKey.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityKey" />
      </containers>
      <file name="d133d5b3-9ab5-f0aa-4b8b-4ec33c70b947" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Client.EntityKey">
      <topicdata name="EntityKey" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntityKey" />
      <apidata name="EntityKey" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.DomainServices.Client.EntityKey.Create">
          <element api="M:System.ServiceModel.DomainServices.Client.EntityKey.Create(System.Object[])" />
          <element api="M:System.ServiceModel.DomainServices.Client.EntityKey.Create``2(``0,``1)" />
          <element api="M:System.ServiceModel.DomainServices.Client.EntityKey.Create``3(``0,``1,``2)" />
        </element>
        <element api="M:System.ServiceModel.DomainServices.Client.EntityKey.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityKey" />
      </containers>
      <file name="ce23d9f4-c26c-bce9-dcb1-87e75fcc9a13" />
    </api>
    <api id="Overload:System.ServiceModel.DomainServices.Client.EntityKey.Create">
      <topicdata name="Create" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.EntityKey" />
      <apidata name="Create" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.DomainServices.Client.EntityKey.Create(System.Object[])" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityKey.Create``2(``0,``1)" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityKey.Create``3(``0,``1,``2)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityKey" ref="true" />
      </containers>
      <file name="16c89221-4de7-82cc-5b05-3fc28fbae6c4" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityKey.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityKey" ref="true" />
      </containers>
      <file name="5b18348d-3de0-a9d4-a873-ad52a7d75411" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityKey.Create(System.Object[])">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.DomainServices.Client.EntityKey.Create" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="keyValues" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntityKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityKey" ref="true" />
      </containers>
      <file name="047d2ae4-6ecb-f65a-b115-7e548b8ad7f9" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityKey.Create``2(``0,``1)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.DomainServices.Client.EntityKey.Create" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
      </templates>
      <parameters>
        <parameter name="v1">
          <template name="T1" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityKey.Create``2(``0,``1)" />
        </parameter>
        <parameter name="v2">
          <template name="T2" index="1" api="M:System.ServiceModel.DomainServices.Client.EntityKey.Create``2(``0,``1)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntityKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityKey" ref="true" />
      </containers>
      <file name="79d30040-fca0-4967-dcd8-7ae80687d793" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityKey.Create``3(``0,``1,``2)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ServiceModel.DomainServices.Client.EntityKey.Create" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
      </templates>
      <parameters>
        <parameter name="v1">
          <template name="T1" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityKey.Create``3(``0,``1,``2)" />
        </parameter>
        <parameter name="v2">
          <template name="T2" index="1" api="M:System.ServiceModel.DomainServices.Client.EntityKey.Create``3(``0,``1,``2)" />
        </parameter>
        <parameter name="v3">
          <template name="T3" index="2" api="M:System.ServiceModel.DomainServices.Client.EntityKey.Create``3(``0,``1,``2)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntityKey" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityKey" ref="true" />
      </containers>
      <file name="f6bab161-1b39-6b9e-63d1-d5aaf980c9ec" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityKey.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityKey" ref="true" />
      </containers>
      <file name="c4b38a50-ded7-c9be-b088-b86ddcf96a0f" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.EntityOperationType">
      <topicdata group="api" />
      <apidata name="EntityOperationType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.DomainServices.Client.EntityOperationType.None" />
        <element api="F:System.ServiceModel.DomainServices.Client.EntityOperationType.Insert" />
        <element api="F:System.ServiceModel.DomainServices.Client.EntityOperationType.Update" />
        <element api="F:System.ServiceModel.DomainServices.Client.EntityOperationType.Delete" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
          <assignment name="Namespace">
            <type api="T:System.String" ref="true" />
            <value>DomainServices</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="1b9f468d-f6e6-dde7-da5d-3c244e3387c3" />
    </api>
    <api id="F:System.ServiceModel.DomainServices.Client.EntityOperationType.Delete">
      <topicdata group="api" notopic="" />
      <apidata name="Delete" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntityOperationType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityOperationType" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.EnumMemberAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="7ee4c91a-26d8-2c48-bc93-f8a0278e6d99" />
    </api>
    <api id="F:System.ServiceModel.DomainServices.Client.EntityOperationType.Insert">
      <topicdata group="api" notopic="" />
      <apidata name="Insert" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntityOperationType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityOperationType" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.EnumMemberAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="052a76f8-74da-adf5-3ffe-fbb3a7a34f8a" />
    </api>
    <api id="F:System.ServiceModel.DomainServices.Client.EntityOperationType.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntityOperationType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityOperationType" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.EnumMemberAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="c76c649d-41c5-da78-a0f2-082f0552e18b" />
    </api>
    <api id="F:System.ServiceModel.DomainServices.Client.EntityOperationType.Update">
      <topicdata group="api" notopic="" />
      <apidata name="Update" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntityOperationType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityOperationType" ref="false" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.EnumMemberAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="6f731e9f-9b03-a063-334a-cdf95a6708e5" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.EntityQuery">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.EntityQuery" />
      <apidata name="EntityQuery" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <file name="43f2c064-b36c-a346-ab5c-94549671437e" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Client.EntityQuery">
      <topicdata name="EntityQuery" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntityQuery" />
      <apidata name="EntityQuery" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityQuery.DomainClient" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityQuery.EntityType" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityQuery.HasSideEffects" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityQuery.IncludeTotalCount" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityQuery.IsComposable" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityQuery.Parameters" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityQuery.Query" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityQuery.QueryName" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery" />
      </containers>
      <file name="9398aba2-a1f2-5d92-52c1-171726b133e2" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Client.EntityQuery">
      <topicdata name="EntityQuery" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntityQuery" />
      <apidata name="EntityQuery" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery" />
      </containers>
      <file name="3939aaf2-3f76-db5e-2059-c29bea1aac09" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Client.EntityQuery">
      <topicdata name="EntityQuery" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntityQuery" />
      <apidata name="EntityQuery" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Client.EntityQuery.DomainClient" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityQuery.EntityType" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityQuery.HasSideEffects" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityQuery.IncludeTotalCount" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityQuery.IsComposable" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityQuery.Parameters" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityQuery.Query" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityQuery.QueryName" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery" />
      </containers>
      <file name="7a2a9c4f-0d9d-8a4f-f481-6856306fde1f" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.EntityQuery.DomainClient">
      <topicdata group="api" />
      <apidata name="DomainClient" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DomainClient" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClient" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery" ref="true" />
      </containers>
      <file name="5003247a-d0c7-6cd8-15c6-8fde117dc112" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.EntityQuery.EntityType">
      <topicdata group="api" />
      <apidata name="EntityType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EntityType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery" ref="true" />
      </containers>
      <file name="76d0e083-db91-4a62-2972-8b03e77f7c9f" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.EntityQuery.HasSideEffects">
      <topicdata group="api" />
      <apidata name="HasSideEffects" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasSideEffects" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery" ref="true" />
      </containers>
      <file name="6efa7f35-3964-2ffe-085d-e4df9e6af4d3" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.EntityQuery.IncludeTotalCount">
      <topicdata group="api" />
      <apidata name="IncludeTotalCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IncludeTotalCount" />
      <setter name="set_IncludeTotalCount" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery" ref="true" />
      </containers>
      <file name="93bac2d7-185b-5bf0-81ba-26e33209dcad" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.EntityQuery.IsComposable">
      <topicdata group="api" />
      <apidata name="IsComposable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsComposable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery" ref="true" />
      </containers>
      <file name="caa8f295-5bd4-0461-8d44-2c220414a569" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.EntityQuery.Parameters">
      <topicdata group="api" />
      <apidata name="Parameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parameters" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery" ref="true" />
      </containers>
      <file name="3a7af636-7376-9b69-8a14-c4f9cc13f080" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.EntityQuery.Query">
      <topicdata group="api" />
      <apidata name="Query" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_Query" />
      <setter name="set_Query" />
      <returns>
        <type api="T:System.Linq.IQueryable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery" ref="true" />
      </containers>
      <file name="289f69fd-a838-fae2-daac-6b40f7f4cbe0" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.EntityQuery.QueryName">
      <topicdata group="api" />
      <apidata name="QueryName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_QueryName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery" ref="true" />
      </containers>
      <file name="d77f5cbc-9c76-f27a-f051-8f4d55825dc3" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.EntityQuery`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.EntityQuery`1" />
      <apidata name="EntityQuery" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
      </templates>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <file name="83b21a68-a26d-3efb-4ee3-642b776915b7" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Client.EntityQuery`1">
      <topicdata name="EntityQuery" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" />
      <apidata name="EntityQuery" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityQuery.DomainClient" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityQuery.EntityType" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityQuery.HasSideEffects" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityQuery.IncludeTotalCount" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityQuery.IsComposable" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityQuery.Parameters" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityQuery.Query" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityQuery.QueryName" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.OrderBy``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" source="extension">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity">
              <constrained>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </constrained>
            </template>
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Linq.Expressions.Expression`1" ref="true">
                <specialization>
                  <type api="T:System.Func`2" ref="true">
                    <specialization>
                      <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.OrderBy``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                      <template name="TKey" index="1" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.OrderBy``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.OrderBy``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.DomainServices.Client" />
            <type api="T:System.ServiceModel.DomainServices.Client.EntityQueryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.OrderByDescending``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" source="extension">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity">
              <constrained>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </constrained>
            </template>
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Linq.Expressions.Expression`1" ref="true">
                <specialization>
                  <type api="T:System.Func`2" ref="true">
                    <specialization>
                      <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.OrderByDescending``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                      <template name="TKey" index="1" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.OrderByDescending``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.OrderByDescending``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.DomainServices.Client" />
            <type api="T:System.ServiceModel.DomainServices.Client.EntityQueryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Skip``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity">
              <constrained>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </constrained>
            </template>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Skip``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Int32)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.DomainServices.Client" />
            <type api="T:System.ServiceModel.DomainServices.Client.EntityQueryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Take``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity">
              <constrained>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </constrained>
            </template>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Take``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Int32)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.DomainServices.Client" />
            <type api="T:System.ServiceModel.DomainServices.Client.EntityQueryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.ThenBy``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" source="extension">
          <apidata name="ThenBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity">
              <constrained>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </constrained>
            </template>
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Linq.Expressions.Expression`1" ref="true">
                <specialization>
                  <type api="T:System.Func`2" ref="true">
                    <specialization>
                      <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.ThenBy``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                      <template name="TKey" index="1" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.ThenBy``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.ThenBy``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.DomainServices.Client" />
            <type api="T:System.ServiceModel.DomainServices.Client.EntityQueryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.ThenByDescending``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" source="extension">
          <apidata name="ThenByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity">
              <constrained>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </constrained>
            </template>
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Linq.Expressions.Expression`1" ref="true">
                <specialization>
                  <type api="T:System.Func`2" ref="true">
                    <specialization>
                      <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.ThenByDescending``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                      <template name="TKey" index="1" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.ThenByDescending``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.ThenByDescending``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.DomainServices.Client" />
            <type api="T:System.ServiceModel.DomainServices.Client.EntityQueryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Where``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" source="extension">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity">
              <constrained>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </constrained>
            </template>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Linq.Expressions.Expression`1" ref="true">
                <specialization>
                  <type api="T:System.Func`2" ref="true">
                    <specialization>
                      <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Where``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
                      <type api="T:System.Boolean" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Where``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.DomainServices.Client" />
            <type api="T:System.ServiceModel.DomainServices.Client.EntityQueryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Select``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``0}})" source="extension">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity">
              <constrained>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </constrained>
            </template>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Linq.Expressions.Expression`1" ref="true">
                <specialization>
                  <type api="T:System.Func`2" ref="true">
                    <specialization>
                      <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Select``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``0}})" />
                      <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Select``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``0}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Select``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``0}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.DomainServices.Client" />
            <type api="T:System.ServiceModel.DomainServices.Client.EntityQueryable" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" />
      </containers>
      <file name="2f21a570-0514-dbf5-322c-5a202a4d0493" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Client.EntityQuery`1">
      <topicdata name="EntityQuery" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" />
      <apidata name="EntityQuery" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.OrderBy``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" source="extension">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity">
              <constrained>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </constrained>
            </template>
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Linq.Expressions.Expression`1" ref="true">
                <specialization>
                  <type api="T:System.Func`2" ref="true">
                    <specialization>
                      <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.OrderBy``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                      <template name="TKey" index="1" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.OrderBy``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.OrderBy``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.DomainServices.Client" />
            <type api="T:System.ServiceModel.DomainServices.Client.EntityQueryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.OrderByDescending``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" source="extension">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity">
              <constrained>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </constrained>
            </template>
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Linq.Expressions.Expression`1" ref="true">
                <specialization>
                  <type api="T:System.Func`2" ref="true">
                    <specialization>
                      <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.OrderByDescending``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                      <template name="TKey" index="1" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.OrderByDescending``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.OrderByDescending``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.DomainServices.Client" />
            <type api="T:System.ServiceModel.DomainServices.Client.EntityQueryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Skip``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity">
              <constrained>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </constrained>
            </template>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Skip``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Int32)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.DomainServices.Client" />
            <type api="T:System.ServiceModel.DomainServices.Client.EntityQueryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Take``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity">
              <constrained>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </constrained>
            </template>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Take``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Int32)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.DomainServices.Client" />
            <type api="T:System.ServiceModel.DomainServices.Client.EntityQueryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.ThenBy``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" source="extension">
          <apidata name="ThenBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity">
              <constrained>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </constrained>
            </template>
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Linq.Expressions.Expression`1" ref="true">
                <specialization>
                  <type api="T:System.Func`2" ref="true">
                    <specialization>
                      <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.ThenBy``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                      <template name="TKey" index="1" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.ThenBy``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.ThenBy``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.DomainServices.Client" />
            <type api="T:System.ServiceModel.DomainServices.Client.EntityQueryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.ThenByDescending``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" source="extension">
          <apidata name="ThenByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity">
              <constrained>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </constrained>
            </template>
            <template name="TKey" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Linq.Expressions.Expression`1" ref="true">
                <specialization>
                  <type api="T:System.Func`2" ref="true">
                    <specialization>
                      <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.ThenByDescending``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                      <template name="TKey" index="1" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.ThenByDescending``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.ThenByDescending``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.DomainServices.Client" />
            <type api="T:System.ServiceModel.DomainServices.Client.EntityQueryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Where``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" source="extension">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity">
              <constrained>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </constrained>
            </template>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Linq.Expressions.Expression`1" ref="true">
                <specialization>
                  <type api="T:System.Func`2" ref="true">
                    <specialization>
                      <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Where``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
                      <type api="T:System.Boolean" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Where``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.DomainServices.Client" />
            <type api="T:System.ServiceModel.DomainServices.Client.EntityQueryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Select``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``0}})" source="extension">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity">
              <constrained>
                <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
              </constrained>
            </template>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Linq.Expressions.Expression`1" ref="true">
                <specialization>
                  <type api="T:System.Func`2" ref="true">
                    <specialization>
                      <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Select``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``0}})" />
                      <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Select``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``0}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Select``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``0}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.DomainServices.Client" />
            <type api="T:System.ServiceModel.DomainServices.Client.EntityQueryable" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" />
      </containers>
      <file name="ddfaf9e3-cc44-49e4-743c-e56afcef58f8" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Client.EntityQuery`1">
      <topicdata name="EntityQuery" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" />
      <apidata name="EntityQuery" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Client.EntityQuery.DomainClient" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityQuery.EntityType" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityQuery.HasSideEffects" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityQuery.IncludeTotalCount" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityQuery.IsComposable" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityQuery.Parameters" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityQuery.Query" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityQuery.QueryName" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" />
      </containers>
      <file name="f79a2355-e635-cb0f-ba3c-0ff3c3eda3f9" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.EntityQueryable">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.EntityQueryable" />
      <apidata name="EntityQueryable" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="88607401-71dc-13d2-7f3c-f4e4a33a7cf6" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Client.EntityQueryable">
      <topicdata name="EntityQueryable" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntityQueryable" />
      <apidata name="EntityQueryable" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.OrderBy``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.OrderByDescending``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Select``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``0}})" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Skip``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Int32)" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Take``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Int32)" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.ThenBy``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.ThenByDescending``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Where``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityQueryable" />
      </containers>
      <file name="4d8c22e8-8d6d-cd46-5671-fc1011cfefd9" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Client.EntityQueryable">
      <topicdata name="EntityQueryable" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntityQueryable" />
      <apidata name="EntityQueryable" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.OrderBy``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.OrderByDescending``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Select``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``0}})" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Skip``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Int32)" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Take``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Int32)" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.ThenBy``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.ThenByDescending``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Where``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityQueryable" />
      </containers>
      <file name="89e1a3a9-1d0e-367d-8f70-317961f2c99d" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityQueryable.OrderBy``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <topicdata group="api" />
      <apidata name="OrderBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
            <specialization>
              <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.OrderBy``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.OrderBy``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                  <template name="TKey" index="1" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.OrderBy``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
          <specialization>
            <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.OrderBy``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityQueryable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="c546a045-8918-07d8-1207-02bca0b2e306" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityQueryable.OrderByDescending``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <topicdata group="api" />
      <apidata name="OrderByDescending" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
            <specialization>
              <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.OrderByDescending``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.OrderByDescending``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                  <template name="TKey" index="1" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.OrderByDescending``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
          <specialization>
            <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.OrderByDescending``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityQueryable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="7077be7f-8d69-327e-c208-dc643075a502" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Select``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``0}})">
      <topicdata group="api" />
      <apidata name="Select" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
            <specialization>
              <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Select``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``0}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="selector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Select``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``0}})" />
                  <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Select``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``0}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
          <specialization>
            <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Select``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``0}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityQueryable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="588f4799-d531-66b7-659d-48a680382587" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Skip``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Int32)">
      <topicdata group="api" />
      <apidata name="Skip" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
            <specialization>
              <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Skip``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Int32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
          <specialization>
            <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Skip``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Int32)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityQueryable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="700fde0c-db96-5ef2-7faf-2832e7f20089" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Take``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Int32)">
      <topicdata group="api" />
      <apidata name="Take" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
            <specialization>
              <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Take``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Int32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
          <specialization>
            <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Take``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Int32)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityQueryable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="7d9d260c-eaf7-c01b-bfef-8c62db092ceb" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityQueryable.ThenBy``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <topicdata group="api" />
      <apidata name="ThenBy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
            <specialization>
              <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.ThenBy``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.ThenBy``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                  <template name="TKey" index="1" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.ThenBy``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
          <specialization>
            <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.ThenBy``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityQueryable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="b61a263d-ae0e-584d-12de-3c9efba3c51a" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityQueryable.ThenByDescending``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
      <topicdata group="api" />
      <apidata name="ThenByDescending" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
            <specialization>
              <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.ThenByDescending``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.ThenByDescending``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                  <template name="TKey" index="1" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.ThenByDescending``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
          <specialization>
            <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.ThenByDescending``2(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityQueryable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="25437cd7-a44a-2c4a-d96d-fed47107ab8a" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Where``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
      <topicdata group="api" />
      <apidata name="Where" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
            <specialization>
              <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Where``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:System.Linq.Expressions.Expression`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Where``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
          <specialization>
            <template name="TEntity" index="0" api="M:System.ServiceModel.DomainServices.Client.EntityQueryable.Where``1(System.ServiceModel.DomainServices.Client.EntityQuery{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityQueryable" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="91403629-f045-6a23-d639-e238a5a5c8d4" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.EntityRef`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.EntityRef`1" />
      <apidata name="EntityRef" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
      </templates>
      <implements>
        <type api="T:System.ServiceModel.DomainServices.Client.IEntityRef" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <file name="75ee29f4-7503-d6e2-9d6c-175713bde9c9" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Client.EntityRef`1">
      <topicdata name="EntityRef" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntityRef`1" />
      <apidata name="EntityRef" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntityRef`1.#ctor(System.ServiceModel.DomainServices.Client.Entity,System.String,System.Func{`0,System.Boolean})" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntityRef`1.Entity" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityRef`1" />
      </containers>
      <file name="6d4d352f-56e6-83a6-3152-7b6e72a8ffb7" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Client.EntityRef`1">
      <topicdata name="EntityRef" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntityRef`1" />
      <apidata name="EntityRef" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityRef`1" />
      </containers>
      <file name="13f90218-2f07-67a3-690a-e3bf4b7e528c" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Client.EntityRef`1">
      <topicdata name="EntityRef" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntityRef`1" />
      <apidata name="EntityRef" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Client.EntityRef`1.Entity" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityRef`1" />
      </containers>
      <file name="dbd7bbd1-04de-3b8d-8b4f-c505cdcec102" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntityRef`1.#ctor(System.ServiceModel.DomainServices.Client.Entity,System.String,System.Func{`0,System.Boolean})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="parent">
          <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
        </parameter>
        <parameter name="memberName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="entityPredicate">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityRef`1" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityRef`1" ref="true" />
      </containers>
      <file name="26761c0e-3344-acf1-19e6-56b5d3b8b89e" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.EntityRef`1.Entity">
      <topicdata group="api" />
      <apidata name="Entity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Entity" />
      <setter name="set_Entity" />
      <returns>
        <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntityRef`1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityRef`1" ref="true" />
      </containers>
      <file name="17bc8a85-50e9-f9e5-78b4-198a59aeb959" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.EntitySet">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.EntitySet" />
      <apidata name="EntitySet" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.Collections.Specialized.INotifyCollectionChanged" ref="true" />
        <type api="T:System.ComponentModel.IRevertibleChangeTracking" ref="true" />
        <type api="T:System.ComponentModel.IChangeTracking" ref="true" />
        <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <file name="cdb5a15e-b26a-202a-860d-90f0c237efe8" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Client.EntitySet">
      <topicdata name="EntitySet" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntitySet" />
      <apidata name="EntitySet" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.AcceptChanges" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.Add(System.ServiceModel.DomainServices.Client.Entity)" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.Attach(System.ServiceModel.DomainServices.Client.Entity)" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.CanAdd" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.CanEdit" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.CanRemove" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.Clear" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.Count" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.CreateEntity" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.CreateList" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.Detach(System.ServiceModel.DomainServices.Client.Entity)" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.EntityContainer" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.EntityType" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.GetEnumerator" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.HasChanges" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.IsReadOnly" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.List" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32)" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="E:System.ServiceModel.DomainServices.Client.EntitySet.PropertyChanged" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.RaisePropertyChanged(System.String)" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.RejectChanges" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.Remove(System.ServiceModel.DomainServices.Client.Entity)" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.System#Collections#IEnumerable#GetEnumerator" />
        <element api="E:System.ServiceModel.DomainServices.Client.EntitySet.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.System#ComponentModel#IChangeTracking#AcceptChanges" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.System#ComponentModel#IChangeTracking#IsChanged" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.System#ComponentModel#IRevertibleChangeTracking#RejectChanges" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" />
      </containers>
      <file name="a11f6012-5f84-65e8-82b3-8e8566c15990" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Client.EntitySet">
      <topicdata name="EntitySet" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntitySet" />
      <apidata name="EntitySet" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.AcceptChanges" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.Add(System.ServiceModel.DomainServices.Client.Entity)" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.Attach(System.ServiceModel.DomainServices.Client.Entity)" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.Clear" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.CreateEntity" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.CreateList" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.Detach(System.ServiceModel.DomainServices.Client.Entity)" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.GetEnumerator" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32)" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.RaisePropertyChanged(System.String)" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.RejectChanges" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.Remove(System.ServiceModel.DomainServices.Client.Entity)" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.System#ComponentModel#IChangeTracking#AcceptChanges" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.System#ComponentModel#IRevertibleChangeTracking#RejectChanges" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" />
      </containers>
      <file name="0a65d4f7-5c75-309b-9be5-378949c3b26d" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Client.EntitySet">
      <topicdata name="EntitySet" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntitySet" />
      <apidata name="EntitySet" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.CanAdd" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.CanEdit" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.CanRemove" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.Count" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.EntityContainer" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.EntityType" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.HasChanges" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.IsReadOnly" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.List" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.System#ComponentModel#IChangeTracking#IsChanged" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" />
      </containers>
      <file name="21b0d1dd-efe4-e0b6-886e-266dc817d561" />
    </api>
    <api id="Events.T:System.ServiceModel.DomainServices.Client.EntitySet">
      <topicdata name="EntitySet" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntitySet" />
      <apidata name="EntitySet" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.DomainServices.Client.EntitySet.PropertyChanged" />
        <element api="E:System.ServiceModel.DomainServices.Client.EntitySet.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" />
      </containers>
      <file name="b3d3003e-deaa-3dc9-14df-b6819212c3f7" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntitySet.AcceptChanges">
      <topicdata group="api" />
      <apidata name="AcceptChanges" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" ref="true" />
      </containers>
      <file name="7930ba4c-3cd3-5a7c-972b-9b0a8a8b7c47" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntitySet.Add(System.ServiceModel.DomainServices.Client.Entity)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="entity">
          <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" ref="true" />
      </containers>
      <file name="6fce0619-aca6-f049-de6a-a1caa4051853" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntitySet.Attach(System.ServiceModel.DomainServices.Client.Entity)">
      <topicdata group="api" />
      <apidata name="Attach" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="entity">
          <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" ref="true" />
      </containers>
      <file name="5e6277d3-497a-e6a5-6a48-cca5b43fc4e3" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.EntitySet.CanAdd">
      <topicdata group="api" />
      <apidata name="CanAdd" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CanAdd" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" ref="true" />
      </containers>
      <file name="5cf48ca3-18ed-b251-9134-260cff406b4f" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.EntitySet.CanEdit">
      <topicdata group="api" />
      <apidata name="CanEdit" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CanEdit" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" ref="true" />
      </containers>
      <file name="b0a5f87a-8490-f0ff-f7a4-35142e5f0444" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.EntitySet.CanRemove">
      <topicdata group="api" />
      <apidata name="CanRemove" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CanRemove" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" ref="true" />
      </containers>
      <file name="9746c22e-c006-f43e-8dc8-fc00e4b4ec0c" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntitySet.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" ref="true" />
      </containers>
      <file name="b4e3b563-b61d-4ac9-4fd3-10e313783c9f" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.EntitySet.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" ref="true" />
      </containers>
      <file name="7d1a497d-9ad8-37e1-2d7f-ff5918f0348f" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntitySet.CreateEntity">
      <topicdata group="api" />
      <apidata name="CreateEntity" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" ref="true" />
      </containers>
      <file name="e2cb54ee-a26a-38fd-db52-a553c0318005" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntitySet.CreateList">
      <topicdata group="api" />
      <apidata name="CreateList" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.IList" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" ref="true" />
      </containers>
      <file name="525de03c-a036-3f19-e0d9-954b35f6755a" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntitySet.Detach(System.ServiceModel.DomainServices.Client.Entity)">
      <topicdata group="api" />
      <apidata name="Detach" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="entity">
          <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" ref="true" />
      </containers>
      <file name="d8348fcb-4f95-6d52-47a6-95168cdb9bfa" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.EntitySet.EntityContainer">
      <topicdata group="api" />
      <apidata name="EntityContainer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EntityContainer" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntityContainer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" ref="true" />
      </containers>
      <file name="10418a0a-bfcf-8eb1-5610-a79cac24191b" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.EntitySet.EntityType">
      <topicdata group="api" />
      <apidata name="EntityType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EntityType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" ref="true" />
      </containers>
      <file name="ff5436b5-eb70-e64d-9af7-bf1059b42e0c" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntitySet.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" ref="true" />
      </containers>
      <file name="5c3fbbfd-cbc2-8082-673e-64b674cc99c6" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.EntitySet.HasChanges">
      <topicdata group="api" />
      <apidata name="HasChanges" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasChanges" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" ref="true" />
      </containers>
      <file name="54ee15ef-a30a-4a29-c6ff-c733e0a92b5a" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.EntitySet.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" ref="true" />
      </containers>
      <file name="df1069ad-90ad-5c98-a750-68aae8b021c6" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.EntitySet.List">
      <topicdata group="api" />
      <apidata name="List" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_List" />
      <returns>
        <type api="T:System.Collections.IList" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" ref="true" />
      </containers>
      <file name="dadd642a-ab88-9620-e1d6-580923056fa3" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntitySet.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32)">
      <topicdata group="api" />
      <apidata name="OnCollectionChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Collections.Specialized.NotifyCollectionChangedAction" ref="false" />
        </parameter>
        <parameter name="affectedObject">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" ref="true" />
      </containers>
      <file name="e9e74264-0ef9-23f1-619f-d0ff03f499c1" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntitySet.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnPropertyChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" ref="true" />
      </containers>
      <file name="56b050bc-ded8-d30d-5871-91dcf7edc027" />
    </api>
    <api id="E:System.ServiceModel.DomainServices.Client.EntitySet.PropertyChanged">
      <topicdata group="api" />
      <apidata name="PropertyChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_PropertyChanged" />
      <remover name="remove_PropertyChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.PropertyChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
          <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" ref="true" />
      </containers>
      <file name="f56bf822-9d8c-0ae5-24a5-8b9dc24d4d7d" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntitySet.RaisePropertyChanged(System.String)">
      <topicdata group="api" />
      <apidata name="RaisePropertyChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" ref="true" />
      </containers>
      <file name="4c5e842f-d649-e188-f8c9-589fbe3575d6" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntitySet.RejectChanges">
      <topicdata group="api" />
      <apidata name="RejectChanges" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" ref="true" />
      </containers>
      <file name="b2f38be3-ff31-4722-bfc1-1bf9998d8482" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntitySet.Remove(System.ServiceModel.DomainServices.Client.Entity)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="entity">
          <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" ref="true" />
      </containers>
      <file name="5e709ef3-e248-b712-dcdb-99255582ba19" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntitySet.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" ref="true" />
      </containers>
      <file name="dea538c6-9d34-56a4-906a-ad71b21c2693" />
    </api>
    <api id="E:System.ServiceModel.DomainServices.Client.EntitySet.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged">
      <topicdata group="api" eiiName="INotifyCollectionChanged.CollectionChanged" />
      <apidata name="CollectionChanged" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />
      <remover name="remove_System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged" />
      <eventhandler>
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Collections.Specialized.NotifyCollectionChangedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged">
          <type api="T:System.Collections.Specialized.INotifyCollectionChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" ref="true" />
      </containers>
      <file name="fe955b1e-2022-b534-068b-c02b8c62e06f" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntitySet.System#ComponentModel#IChangeTracking#AcceptChanges">
      <topicdata group="api" eiiName="IChangeTracking.AcceptChanges" />
      <apidata name="AcceptChanges" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ComponentModel.IChangeTracking.AcceptChanges">
          <type api="T:System.ComponentModel.IChangeTracking" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" ref="true" />
      </containers>
      <file name="84be4e6d-0636-b4c4-0d62-db90943e96da" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.EntitySet.System#ComponentModel#IChangeTracking#IsChanged">
      <topicdata group="api" eiiName="IChangeTracking.IsChanged" />
      <apidata name="IsChanged" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.IChangeTracking.IsChanged" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.IChangeTracking.IsChanged">
          <type api="T:System.ComponentModel.IChangeTracking" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" ref="true" />
      </containers>
      <file name="3e1db1dd-d9fc-6a10-a8e3-c49746746dc8" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntitySet.System#ComponentModel#IRevertibleChangeTracking#RejectChanges">
      <topicdata group="api" eiiName="IRevertibleChangeTracking.RejectChanges" />
      <apidata name="RejectChanges" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.ComponentModel.IRevertibleChangeTracking.RejectChanges">
          <type api="T:System.ComponentModel.IRevertibleChangeTracking" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" ref="true" />
      </containers>
      <file name="2bab158a-2cbe-b611-8bfb-999b8dbc8773" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.EntitySet`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
      <apidata name="EntitySet" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Client.EntitySet`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.DomainServices.Client.EntitySet" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.ComponentModel.ICollectionViewFactory" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <file name="3f5497fb-4f63-5fdd-b711-aa23fb829b6a" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Client.EntitySet`1">
      <topicdata name="EntitySet" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
      <apidata name="EntitySet" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Client.EntitySet`1.#ctor" />
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.DomainServices.Client.EntitySet`1.Add">
          <element api="M:System.ServiceModel.DomainServices.Client.EntitySet`1.Add(`0)" />
          <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.Add(System.ServiceModel.DomainServices.Client.Entity)" />
        </element>
        <element api="Overload:System.ServiceModel.DomainServices.Client.EntitySet`1.Attach">
          <element api="M:System.ServiceModel.DomainServices.Client.EntitySet`1.Attach(`0)" />
          <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.Attach(System.ServiceModel.DomainServices.Client.Entity)" />
        </element>
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.CanAdd" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.CanEdit" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.CanRemove" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.Clear" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.Count" />
        <element api="Overload:System.ServiceModel.DomainServices.Client.EntitySet`1.Detach">
          <element api="M:System.ServiceModel.DomainServices.Client.EntitySet`1.Detach(`0)" />
          <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.Detach(System.ServiceModel.DomainServices.Client.Entity)" />
        </element>
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.EntityContainer" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.EntityType" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.HasChanges" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.IsReadOnly" />
        <element api="E:System.ServiceModel.DomainServices.Client.EntitySet.PropertyChanged" />
        <element api="Overload:System.ServiceModel.DomainServices.Client.EntitySet`1.Remove">
          <element api="M:System.ServiceModel.DomainServices.Client.EntitySet`1.Remove(`0)" />
          <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.Remove(System.ServiceModel.DomainServices.Client.Entity)" />
        </element>
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.System#Collections#IEnumerable#GetEnumerator" />
        <element api="E:System.ServiceModel.DomainServices.Client.EntitySet.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.System#ComponentModel#IChangeTracking#AcceptChanges" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.System#ComponentModel#IChangeTracking#IsChanged" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.System#ComponentModel#IRevertibleChangeTracking#RejectChanges" />
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet`1.#ctor" />
        <element api="E:System.ServiceModel.DomainServices.Client.EntitySet`1.EntityAdded" />
        <element api="E:System.ServiceModel.DomainServices.Client.EntitySet`1.EntityRemoved" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet`1.GetEnumerator" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet`1.System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet`1.System#ComponentModel#ICollectionViewFactory#CreateView" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
      </containers>
      <file name="a6f4627d-f7d4-63bb-2b4e-d42ea15d2de8" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Client.EntitySet`1">
      <topicdata name="EntitySet" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
      <apidata name="EntitySet" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Client.EntitySet`1.#ctor" />
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.DomainServices.Client.EntitySet`1.Add">
          <element api="M:System.ServiceModel.DomainServices.Client.EntitySet`1.Add(`0)" />
          <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.Add(System.ServiceModel.DomainServices.Client.Entity)" />
        </element>
        <element api="Overload:System.ServiceModel.DomainServices.Client.EntitySet`1.Attach">
          <element api="M:System.ServiceModel.DomainServices.Client.EntitySet`1.Attach(`0)" />
          <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.Attach(System.ServiceModel.DomainServices.Client.Entity)" />
        </element>
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.Clear" />
        <element api="Overload:System.ServiceModel.DomainServices.Client.EntitySet`1.Detach">
          <element api="M:System.ServiceModel.DomainServices.Client.EntitySet`1.Detach(`0)" />
          <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.Detach(System.ServiceModel.DomainServices.Client.Entity)" />
        </element>
        <element api="Overload:System.ServiceModel.DomainServices.Client.EntitySet`1.Remove">
          <element api="M:System.ServiceModel.DomainServices.Client.EntitySet`1.Remove(`0)" />
          <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.Remove(System.ServiceModel.DomainServices.Client.Entity)" />
        </element>
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.System#ComponentModel#IChangeTracking#AcceptChanges" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.System#ComponentModel#IRevertibleChangeTracking#RejectChanges" />
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <returns>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet`1.GetEnumerator" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet`1.System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet`1.System#ComponentModel#ICollectionViewFactory#CreateView" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
      </containers>
      <file name="1929210e-d979-a61f-9097-400cb70ec32f" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Client.EntitySet`1">
      <topicdata name="EntitySet" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
      <apidata name="EntitySet" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Client.EntitySet`1.#ctor" />
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.CanAdd" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.CanEdit" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.CanRemove" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.Count" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.EntityContainer" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.EntityType" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.HasChanges" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.IsReadOnly" />
        <element api="P:System.ServiceModel.DomainServices.Client.EntitySet.System#ComponentModel#IChangeTracking#IsChanged" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
      </containers>
      <file name="46a704f7-ff77-0b0d-ff72-e3e8ee2ba05f" />
    </api>
    <api id="Events.T:System.ServiceModel.DomainServices.Client.EntitySet`1">
      <topicdata name="EntitySet" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
      <apidata name="EntitySet" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Client.EntitySet`1.#ctor" />
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="E:System.ServiceModel.DomainServices.Client.EntitySet.PropertyChanged" />
        <element api="E:System.ServiceModel.DomainServices.Client.EntitySet.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged" />
        <element api="E:System.ServiceModel.DomainServices.Client.EntitySet`1.EntityAdded" />
        <element api="E:System.ServiceModel.DomainServices.Client.EntitySet`1.EntityRemoved" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
      </containers>
      <file name="fad1fd31-6313-7c1c-4b8c-b03fb9f5b2e9" />
    </api>
    <api id="Overload:System.ServiceModel.DomainServices.Client.EntitySet`1.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet`1.Add(`0)" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.Add(System.ServiceModel.DomainServices.Client.Entity)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" ref="true" />
      </containers>
      <file name="00f1a276-bf03-8e18-8451-c7c3f987b1d0" />
    </api>
    <api id="Overload:System.ServiceModel.DomainServices.Client.EntitySet`1.Attach">
      <topicdata name="Attach" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
      <apidata name="Attach" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet`1.Attach(`0)" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.Attach(System.ServiceModel.DomainServices.Client.Entity)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" ref="true" />
      </containers>
      <file name="10deddf0-0df7-a9c4-145f-984d5bd60578" />
    </api>
    <api id="Overload:System.ServiceModel.DomainServices.Client.EntitySet`1.Detach">
      <topicdata name="Detach" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
      <apidata name="Detach" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet`1.Detach(`0)" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.Detach(System.ServiceModel.DomainServices.Client.Entity)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" ref="true" />
      </containers>
      <file name="ce5a34d2-5af5-9cae-9873-f5c7e0b58150" />
    </api>
    <api id="Overload:System.ServiceModel.DomainServices.Client.EntitySet`1.Remove">
      <topicdata name="Remove" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
      <apidata name="Remove" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet`1.Remove(`0)" />
        <element api="M:System.ServiceModel.DomainServices.Client.EntitySet.Remove(System.ServiceModel.DomainServices.Client.Entity)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" ref="true" />
      </containers>
      <file name="b8992b3d-0077-6455-eb1c-f56d50b218bb" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntitySet`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" ref="true" />
      </containers>
      <file name="cc6ef618-b45c-5671-b9ce-6590926b11b2" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntitySet`1.Add(`0)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.DomainServices.Client.EntitySet`1.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="entity">
          <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" ref="true" />
      </containers>
      <file name="64232898-f0e5-0175-7b33-252fa47fc698" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntitySet`1.Attach(`0)">
      <topicdata group="api" />
      <apidata name="Attach" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.DomainServices.Client.EntitySet`1.Attach" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="entity">
          <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" ref="true" />
      </containers>
      <file name="1c08bceb-a008-9b14-2730-2d3538cb9a61" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntitySet`1.Detach(`0)">
      <topicdata group="api" />
      <apidata name="Detach" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.DomainServices.Client.EntitySet`1.Detach" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="entity">
          <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" ref="true" />
      </containers>
      <file name="751c65a6-629f-ebaf-b491-a73fa6388274" />
    </api>
    <api id="E:System.ServiceModel.DomainServices.Client.EntitySet`1.EntityAdded">
      <topicdata group="api" />
      <apidata name="EntityAdded" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_EntityAdded" />
      <remover name="remove_EntityAdded" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.DomainServices.Client.EntityCollectionChangedEventArgs`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ServiceModel.DomainServices.Client.EntityCollectionChangedEventArgs`1" ref="true">
          <specialization>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </specialization>
        </type>
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" ref="true" />
      </containers>
      <file name="92356878-e440-0980-4e45-cceb3216bb9d" />
    </api>
    <api id="E:System.ServiceModel.DomainServices.Client.EntitySet`1.EntityRemoved">
      <topicdata group="api" />
      <apidata name="EntityRemoved" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_EntityRemoved" />
      <remover name="remove_EntityRemoved" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.DomainServices.Client.EntityCollectionChangedEventArgs`1" ref="true">
              <specialization>
                <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
              </specialization>
            </type>
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ServiceModel.DomainServices.Client.EntityCollectionChangedEventArgs`1" ref="true">
          <specialization>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </specialization>
        </type>
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" ref="true" />
      </containers>
      <file name="ca16d3af-86dc-5836-ee65-24bc2cd38ce3" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntitySet`1.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" ref="true" />
      </containers>
      <file name="abb4aa6b-b8eb-e41b-6840-559a5e0a08f7" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntitySet`1.Remove(`0)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.DomainServices.Client.EntitySet`1.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="entity">
          <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" ref="true" />
      </containers>
      <file name="944adb9c-0ad7-58af-404e-57f70cdc6555" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntitySet`1.System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" ref="true" />
      </containers>
      <file name="60726aba-b228-6bc6-fe1f-48d79474ed37" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.EntitySet`1.System#ComponentModel#ICollectionViewFactory#CreateView">
      <topicdata group="api" eiiName="ICollectionViewFactory.CreateView" />
      <apidata name="CreateView" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.ComponentModel.ICollectionView" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ComponentModel.ICollectionViewFactory.CreateView">
          <type api="T:System.ComponentModel.ICollectionViewFactory" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySet`1" ref="true" />
      </containers>
      <file name="40fa84cc-d881-8da9-12b3-f58d42389c2f" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.EntitySetOperations">
      <topicdata group="api" />
      <apidata name="EntitySetOperations" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.DomainServices.Client.EntitySetOperations.None" />
        <element api="F:System.ServiceModel.DomainServices.Client.EntitySetOperations.Add" />
        <element api="F:System.ServiceModel.DomainServices.Client.EntitySetOperations.Edit" />
        <element api="F:System.ServiceModel.DomainServices.Client.EntitySetOperations.Remove" />
        <element api="F:System.ServiceModel.DomainServices.Client.EntitySetOperations.All" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="7022f62f-e7d7-c563-4812-59b21eced403" />
    </api>
    <api id="F:System.ServiceModel.DomainServices.Client.EntitySetOperations.Add">
      <topicdata group="api" notopic="" />
      <apidata name="Add" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySetOperations" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySetOperations" ref="false" />
      </containers>
      <file name="1464f076-2e6b-ea85-c250-09830dc4571a" />
    </api>
    <api id="F:System.ServiceModel.DomainServices.Client.EntitySetOperations.All">
      <topicdata group="api" notopic="" />
      <apidata name="All" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySetOperations" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySetOperations" ref="false" />
      </containers>
      <file name="18814648-61eb-415d-0869-a73896320b99" />
    </api>
    <api id="F:System.ServiceModel.DomainServices.Client.EntitySetOperations.Edit">
      <topicdata group="api" notopic="" />
      <apidata name="Edit" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySetOperations" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySetOperations" ref="false" />
      </containers>
      <file name="dc78ee2f-e934-ec1d-a0b6-eb7ada5b7978" />
    </api>
    <api id="F:System.ServiceModel.DomainServices.Client.EntitySetOperations.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySetOperations" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySetOperations" ref="false" />
      </containers>
      <file name="baaf4e55-c3f7-9e57-8783-5f693ae61f4d" />
    </api>
    <api id="F:System.ServiceModel.DomainServices.Client.EntitySetOperations.Remove">
      <topicdata group="api" notopic="" />
      <apidata name="Remove" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySetOperations" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntitySetOperations" ref="false" />
      </containers>
      <file name="cffc3117-f1ad-7e19-b999-4e17f3482e43" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.EntityState">
      <topicdata group="api" />
      <apidata name="EntityState" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.DomainServices.Client.EntityState.Detached" />
        <element api="F:System.ServiceModel.DomainServices.Client.EntityState.Unmodified" />
        <element api="F:System.ServiceModel.DomainServices.Client.EntityState.Modified" />
        <element api="F:System.ServiceModel.DomainServices.Client.EntityState.New" />
        <element api="F:System.ServiceModel.DomainServices.Client.EntityState.Deleted" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <file name="b9226f03-e38b-0a5b-4fc1-bda58f245dec" />
    </api>
    <api id="F:System.ServiceModel.DomainServices.Client.EntityState.Deleted">
      <topicdata group="api" notopic="" />
      <apidata name="Deleted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntityState" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityState" ref="false" />
      </containers>
      <file name="f8d44415-6dab-6024-613c-0d3248c0b06c" />
    </api>
    <api id="F:System.ServiceModel.DomainServices.Client.EntityState.Detached">
      <topicdata group="api" notopic="" />
      <apidata name="Detached" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntityState" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityState" ref="false" />
      </containers>
      <file name="03767e4a-975b-12bc-227e-c3f557b8758e" />
    </api>
    <api id="F:System.ServiceModel.DomainServices.Client.EntityState.Modified">
      <topicdata group="api" notopic="" />
      <apidata name="Modified" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntityState" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityState" ref="false" />
      </containers>
      <file name="7a59205f-e58e-e381-4a81-58c18edc27c7" />
    </api>
    <api id="F:System.ServiceModel.DomainServices.Client.EntityState.New">
      <topicdata group="api" notopic="" />
      <apidata name="New" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntityState" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityState" ref="false" />
      </containers>
      <file name="e33520f7-81c5-5507-3100-050ea3bde904" />
    </api>
    <api id="F:System.ServiceModel.DomainServices.Client.EntityState.Unmodified">
      <topicdata group="api" notopic="" />
      <apidata name="Unmodified" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntityState" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.EntityState" ref="false" />
      </containers>
      <file name="a554c2ae-8be8-0617-8197-9f8b801f5de1" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.InvokeArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.InvokeArgs" />
      <apidata name="InvokeArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <file name="4cd41aa1-91a0-c723-863f-86d2e7ca429f" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Client.InvokeArgs">
      <topicdata name="InvokeArgs" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Client.InvokeArgs" />
      <apidata name="InvokeArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Client.InvokeArgs.#ctor(System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)" />
        <element api="P:System.ServiceModel.DomainServices.Client.InvokeArgs.HasSideEffects" />
        <element api="P:System.ServiceModel.DomainServices.Client.InvokeArgs.OperationName" />
        <element api="P:System.ServiceModel.DomainServices.Client.InvokeArgs.Parameters" />
        <element api="P:System.ServiceModel.DomainServices.Client.InvokeArgs.ReturnType" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeArgs" />
      </containers>
      <file name="7ece245f-9717-0dc4-a407-3e1aa9c8c3f9" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Client.InvokeArgs">
      <topicdata name="InvokeArgs" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Client.InvokeArgs" />
      <apidata name="InvokeArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeArgs" />
      </containers>
      <file name="c6c179b4-ffb9-2df0-a44b-7c53ae84be70" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Client.InvokeArgs">
      <topicdata name="InvokeArgs" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Client.InvokeArgs" />
      <apidata name="InvokeArgs" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Client.InvokeArgs.HasSideEffects" />
        <element api="P:System.ServiceModel.DomainServices.Client.InvokeArgs.OperationName" />
        <element api="P:System.ServiceModel.DomainServices.Client.InvokeArgs.Parameters" />
        <element api="P:System.ServiceModel.DomainServices.Client.InvokeArgs.ReturnType" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeArgs" />
      </containers>
      <file name="9bb418bd-aca0-991e-77c2-e861376000fd" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.InvokeArgs.#ctor(System.String,System.Type,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="operationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="returnType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="parameters">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="hasSideEffects">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeArgs" ref="true" />
      </containers>
      <file name="d5559629-74aa-86ea-81e0-d58e985cbd0e" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.InvokeArgs.HasSideEffects">
      <topicdata group="api" />
      <apidata name="HasSideEffects" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasSideEffects" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeArgs" ref="true" />
      </containers>
      <file name="85071471-3223-6db7-3520-0c8fd907391e" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.InvokeArgs.OperationName">
      <topicdata group="api" />
      <apidata name="OperationName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OperationName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeArgs" ref="true" />
      </containers>
      <file name="1d9c1390-219c-ba4a-aa5b-7da18b2ef715" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.InvokeArgs.Parameters">
      <topicdata group="api" />
      <apidata name="Parameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parameters" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeArgs" ref="true" />
      </containers>
      <file name="06fe5df1-c24b-d7c0-51ea-d45988d68051" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.InvokeArgs.ReturnType">
      <topicdata group="api" />
      <apidata name="ReturnType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ReturnType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeArgs" ref="true" />
      </containers>
      <file name="81e37c0a-1434-46fe-b83c-8df4cca1763c" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.InvokeCompletedResult">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.InvokeCompletedResult" />
      <apidata name="InvokeCompletedResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <file name="d07c6fb4-e57e-e319-1821-b0999c0568c8" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Client.InvokeCompletedResult">
      <topicdata name="InvokeCompletedResult" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Client.InvokeCompletedResult" />
      <apidata name="InvokeCompletedResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.DomainServices.Client.InvokeCompletedResult.#ctor">
          <element api="M:System.ServiceModel.DomainServices.Client.InvokeCompletedResult.#ctor(System.Object)" />
          <element api="M:System.ServiceModel.DomainServices.Client.InvokeCompletedResult.#ctor(System.Object,System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationResult})" />
        </element>
        <element api="P:System.ServiceModel.DomainServices.Client.InvokeCompletedResult.ReturnValue" />
        <element api="P:System.ServiceModel.DomainServices.Client.InvokeCompletedResult.ValidationErrors" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeCompletedResult" />
      </containers>
      <file name="da7204cf-f641-64c3-9ffe-1cca55c20348" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Client.InvokeCompletedResult">
      <topicdata name="InvokeCompletedResult" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Client.InvokeCompletedResult" />
      <apidata name="InvokeCompletedResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeCompletedResult" />
      </containers>
      <file name="1dbd0b8d-fbac-2226-8b04-1af951e38e71" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Client.InvokeCompletedResult">
      <topicdata name="InvokeCompletedResult" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Client.InvokeCompletedResult" />
      <apidata name="InvokeCompletedResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Client.InvokeCompletedResult.ReturnValue" />
        <element api="P:System.ServiceModel.DomainServices.Client.InvokeCompletedResult.ValidationErrors" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeCompletedResult" />
      </containers>
      <file name="bdac2a6a-6ae0-b962-fee3-fe34bf719fbb" />
    </api>
    <api id="Overload:System.ServiceModel.DomainServices.Client.InvokeCompletedResult.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.InvokeCompletedResult" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.DomainServices.Client.InvokeCompletedResult.#ctor(System.Object)" />
        <element api="M:System.ServiceModel.DomainServices.Client.InvokeCompletedResult.#ctor(System.Object,System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationResult})" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeCompletedResult" ref="true" />
      </containers>
      <file name="8f6e4edb-1ad6-4458-dcab-667a31f9a9bc" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.InvokeCompletedResult.#ctor(System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DomainServices.Client.InvokeCompletedResult.#ctor" />
      <parameters>
        <parameter name="returnValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeCompletedResult" ref="true" />
      </containers>
      <file name="a6da4e5c-09ac-3204-b022-05228cfd9d3e" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.InvokeCompletedResult.#ctor(System.Object,System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationResult})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DomainServices.Client.InvokeCompletedResult.#ctor" />
      <parameters>
        <parameter name="returnValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="validationErrors">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.DataAnnotations.ValidationResult" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeCompletedResult" ref="true" />
      </containers>
      <file name="9919a241-35fb-c1ed-667b-eeedc295891f" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.InvokeCompletedResult.ReturnValue">
      <topicdata group="api" />
      <apidata name="ReturnValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ReturnValue" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeCompletedResult" ref="true" />
      </containers>
      <file name="3e47037e-e375-d0ba-6162-c5fd508411fd" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.InvokeCompletedResult.ValidationErrors">
      <topicdata group="api" />
      <apidata name="ValidationErrors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ValidationErrors" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.DataAnnotations.ValidationResult" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeCompletedResult" ref="true" />
      </containers>
      <file name="7cb354f3-9a27-ed8c-8009-06e4620da9e2" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.InvokeOperation">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.InvokeOperation" />
      <apidata name="InvokeOperation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.DomainServices.Client.OperationBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.DomainServices.Client.InvokeOperation`1" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <file name="b8d59803-3a64-7604-08f2-02d40a6fa470" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Client.InvokeOperation">
      <topicdata name="InvokeOperation" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Client.InvokeOperation" />
      <apidata name="InvokeOperation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Client.InvokeOperation.CancelCore" />
        <element api="M:System.ServiceModel.DomainServices.Client.InvokeOperation.InvokeCompleteAction" />
        <element api="P:System.ServiceModel.DomainServices.Client.InvokeOperation.OperationName" />
        <element api="P:System.ServiceModel.DomainServices.Client.InvokeOperation.Parameters" />
        <element api="P:System.ServiceModel.DomainServices.Client.InvokeOperation.Result" />
        <element api="P:System.ServiceModel.DomainServices.Client.InvokeOperation.SupportsCancellation" />
        <element api="P:System.ServiceModel.DomainServices.Client.InvokeOperation.ValidationErrors" />
        <element api="P:System.ServiceModel.DomainServices.Client.InvokeOperation.Value" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.CanCancel" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.Cancel" />
        <element api="Overload:System.ServiceModel.DomainServices.Client.InvokeOperation.Complete">
          <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.Complete(System.Exception)" />
          <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.Complete(System.Object)" />
        </element>
        <element api="E:System.ServiceModel.DomainServices.Client.OperationBase.Completed" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.Error" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.HasError" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.IsCanceled" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.IsComplete" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.IsErrorHandled" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.MarkErrorAsHandled" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.RaisePropertyChanged(System.String)" />
        <element api="E:System.ServiceModel.DomainServices.Client.OperationBase.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.UserState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeOperation" />
      </containers>
      <file name="f1506c81-44d0-91af-3d05-c41397e5e64d" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Client.InvokeOperation">
      <topicdata name="InvokeOperation" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Client.InvokeOperation" />
      <apidata name="InvokeOperation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Client.InvokeOperation.CancelCore" />
        <element api="M:System.ServiceModel.DomainServices.Client.InvokeOperation.InvokeCompleteAction" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.Cancel" />
        <element api="Overload:System.ServiceModel.DomainServices.Client.InvokeOperation.Complete">
          <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.Complete(System.Exception)" />
          <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.Complete(System.Object)" />
        </element>
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.MarkErrorAsHandled" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.RaisePropertyChanged(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeOperation" />
      </containers>
      <file name="91c35c0f-4d5f-f31c-546d-8b1eb1255728" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Client.InvokeOperation">
      <topicdata name="InvokeOperation" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Client.InvokeOperation" />
      <apidata name="InvokeOperation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Client.InvokeOperation.OperationName" />
        <element api="P:System.ServiceModel.DomainServices.Client.InvokeOperation.Parameters" />
        <element api="P:System.ServiceModel.DomainServices.Client.InvokeOperation.Result" />
        <element api="P:System.ServiceModel.DomainServices.Client.InvokeOperation.SupportsCancellation" />
        <element api="P:System.ServiceModel.DomainServices.Client.InvokeOperation.ValidationErrors" />
        <element api="P:System.ServiceModel.DomainServices.Client.InvokeOperation.Value" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.CanCancel" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.Error" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.HasError" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.IsCanceled" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.IsComplete" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.IsErrorHandled" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.UserState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeOperation" />
      </containers>
      <file name="05ab44b4-cabb-0fdc-975f-1c4ae951043e" />
    </api>
    <api id="Events.T:System.ServiceModel.DomainServices.Client.InvokeOperation">
      <topicdata name="InvokeOperation" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.DomainServices.Client.InvokeOperation" />
      <apidata name="InvokeOperation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.DomainServices.Client.OperationBase.Completed" />
        <element api="E:System.ServiceModel.DomainServices.Client.OperationBase.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeOperation" />
      </containers>
      <file name="8eea7371-053a-2721-f457-4be6fdfb95fc" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.InvokeOperation.CancelCore">
      <topicdata group="api" />
      <apidata name="CancelCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.DomainServices.Client.OperationBase.CancelCore">
          <type api="T:System.ServiceModel.DomainServices.Client.OperationBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeOperation" ref="true" />
      </containers>
      <file name="a0b86e2d-26fd-479e-e4f8-0875008c7f5b" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.InvokeOperation.InvokeCompleteAction">
      <topicdata group="api" />
      <apidata name="InvokeCompleteAction" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.DomainServices.Client.OperationBase.InvokeCompleteAction">
          <type api="T:System.ServiceModel.DomainServices.Client.OperationBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeOperation" ref="true" />
      </containers>
      <file name="f66d1e25-1e5e-fddc-628d-2e86d1127d9c" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.InvokeOperation.OperationName">
      <topicdata group="api" />
      <apidata name="OperationName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_OperationName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeOperation" ref="true" />
      </containers>
      <file name="10f81553-941e-37aa-ed9f-46ac803783d9" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.InvokeOperation.Parameters">
      <topicdata group="api" />
      <apidata name="Parameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parameters" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeOperation" ref="true" />
      </containers>
      <file name="3e475656-6ed5-a09d-6d4c-57445aafe635" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.InvokeOperation.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Result" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClientResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeOperation" ref="true" />
      </containers>
      <file name="517c9edd-5dec-82f4-52a6-cbe97104f48c" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.InvokeOperation.SupportsCancellation">
      <topicdata group="api" />
      <apidata name="SupportsCancellation" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.DomainServices.Client.OperationBase.SupportsCancellation">
          <type api="T:System.ServiceModel.DomainServices.Client.OperationBase" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_SupportsCancellation" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeOperation" ref="true" />
      </containers>
      <file name="e0da7858-f6e4-030a-6113-3f0c44dbf876" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.InvokeOperation.ValidationErrors">
      <topicdata group="api" />
      <apidata name="ValidationErrors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ValidationErrors" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.DataAnnotations.ValidationResult" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeOperation" ref="true" />
      </containers>
      <file name="5e4300a7-11d8-a412-96aa-823087dc12ae" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.InvokeOperation.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Value" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeOperation" ref="true" />
      </containers>
      <file name="59e15726-8077-2cbc-4546-2d5706fea6ee" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.InvokeOperation`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.InvokeOperation`1" />
      <apidata name="InvokeOperation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.DomainServices.Client.InvokeOperation" ref="true" />
          <type api="T:System.ServiceModel.DomainServices.Client.OperationBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TValue" />
      </templates>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <file name="6479c994-f667-2f81-963b-3176ff624448" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Client.InvokeOperation`1">
      <topicdata name="InvokeOperation" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Client.InvokeOperation`1" />
      <apidata name="InvokeOperation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.DomainServices.Client.InvokeOperation.OperationName" />
        <element api="P:System.ServiceModel.DomainServices.Client.InvokeOperation.Parameters" />
        <element api="P:System.ServiceModel.DomainServices.Client.InvokeOperation.ValidationErrors" />
        <element api="P:System.ServiceModel.DomainServices.Client.InvokeOperation`1.Value" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.CanCancel" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.Cancel" />
        <element api="E:System.ServiceModel.DomainServices.Client.OperationBase.Completed" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.Error" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.HasError" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.IsCanceled" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.IsComplete" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.IsErrorHandled" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.MarkErrorAsHandled" />
        <element api="E:System.ServiceModel.DomainServices.Client.OperationBase.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.UserState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeOperation`1" />
      </containers>
      <file name="2f723c85-7d9b-a0d8-c64c-51d7c50cda5b" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Client.InvokeOperation`1">
      <topicdata name="InvokeOperation" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Client.InvokeOperation`1" />
      <apidata name="InvokeOperation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.Cancel" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.MarkErrorAsHandled" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeOperation`1" />
      </containers>
      <file name="6f3ce1d4-9413-5cba-9f5d-0492de33372b" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Client.InvokeOperation`1">
      <topicdata name="InvokeOperation" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Client.InvokeOperation`1" />
      <apidata name="InvokeOperation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Client.InvokeOperation.OperationName" />
        <element api="P:System.ServiceModel.DomainServices.Client.InvokeOperation.Parameters" />
        <element api="P:System.ServiceModel.DomainServices.Client.InvokeOperation.ValidationErrors" />
        <element api="P:System.ServiceModel.DomainServices.Client.InvokeOperation`1.Value" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.CanCancel" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.Error" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.HasError" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.IsCanceled" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.IsComplete" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.IsErrorHandled" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.UserState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeOperation`1" />
      </containers>
      <file name="8cc97dc2-7a72-77cd-9084-861f62e1c788" />
    </api>
    <api id="Events.T:System.ServiceModel.DomainServices.Client.InvokeOperation`1">
      <topicdata name="InvokeOperation" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.DomainServices.Client.InvokeOperation`1" />
      <apidata name="InvokeOperation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="E:System.ServiceModel.DomainServices.Client.OperationBase.Completed" />
        <element api="E:System.ServiceModel.DomainServices.Client.OperationBase.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeOperation`1" />
      </containers>
      <file name="ff0b6334-aa26-1394-a64c-f1e1ba218c4a" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.InvokeOperation`1.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Value" />
      <returns>
        <template name="TValue" index="0" api="T:System.ServiceModel.DomainServices.Client.InvokeOperation`1" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.InvokeOperation`1" ref="true" />
      </containers>
      <file name="3d853aee-d687-775c-ad37-4d5c26616389" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.LoadBehavior">
      <topicdata group="api" />
      <apidata name="LoadBehavior" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.DomainServices.Client.LoadBehavior.MergeIntoCurrent" />
        <element api="F:System.ServiceModel.DomainServices.Client.LoadBehavior.KeepCurrent" />
        <element api="F:System.ServiceModel.DomainServices.Client.LoadBehavior.RefreshCurrent" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <file name="b6746177-7c5e-22ba-4cda-62ddab324e45" />
    </api>
    <api id="F:System.ServiceModel.DomainServices.Client.LoadBehavior.KeepCurrent">
      <topicdata group="api" notopic="" />
      <apidata name="KeepCurrent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.LoadBehavior" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.LoadBehavior" ref="false" />
      </containers>
      <file name="883a61e5-55f0-51bc-fbce-34ebfdf42d4f" />
    </api>
    <api id="F:System.ServiceModel.DomainServices.Client.LoadBehavior.MergeIntoCurrent">
      <topicdata group="api" notopic="" />
      <apidata name="MergeIntoCurrent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.LoadBehavior" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.LoadBehavior" ref="false" />
      </containers>
      <file name="9cf66c80-61c3-1a9a-62b7-5f3268d8cab0" />
    </api>
    <api id="F:System.ServiceModel.DomainServices.Client.LoadBehavior.RefreshCurrent">
      <topicdata group="api" notopic="" />
      <apidata name="RefreshCurrent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.LoadBehavior" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.LoadBehavior" ref="false" />
      </containers>
      <file name="dc5d6eb0-bfe3-88da-0eee-fd8ecead6444" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.LoadOperation">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.LoadOperation" />
      <apidata name="LoadOperation" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.DomainServices.Client.OperationBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.DomainServices.Client.LoadOperation`1" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <file name="9f950dd3-354b-9f22-7abb-ccb05a064114" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Client.LoadOperation">
      <topicdata name="LoadOperation" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Client.LoadOperation" />
      <apidata name="LoadOperation" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.DomainServices.Client.LoadOperation.AllEntities" />
        <element api="P:System.ServiceModel.DomainServices.Client.LoadOperation.Entities" />
        <element api="P:System.ServiceModel.DomainServices.Client.LoadOperation.EntityQuery" />
        <element api="P:System.ServiceModel.DomainServices.Client.LoadOperation.LoadBehavior" />
        <element api="P:System.ServiceModel.DomainServices.Client.LoadOperation.Result" />
        <element api="P:System.ServiceModel.DomainServices.Client.LoadOperation.TotalEntityCount" />
        <element api="M:System.ServiceModel.DomainServices.Client.LoadOperation.UpdateResults(System.ServiceModel.DomainServices.Client.DomainClientResult)" />
        <element api="P:System.ServiceModel.DomainServices.Client.LoadOperation.ValidationErrors" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.CanCancel" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.Cancel" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.CancelCore" />
        <element api="Overload:System.ServiceModel.DomainServices.Client.LoadOperation.Complete">
          <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.Complete(System.Exception)" />
          <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.Complete(System.Object)" />
        </element>
        <element api="E:System.ServiceModel.DomainServices.Client.OperationBase.Completed" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.Error" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.HasError" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.InvokeCompleteAction" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.IsCanceled" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.IsComplete" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.IsErrorHandled" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.MarkErrorAsHandled" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.RaisePropertyChanged(System.String)" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.SupportsCancellation" />
        <element api="E:System.ServiceModel.DomainServices.Client.OperationBase.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.UserState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.LoadOperation" />
      </containers>
      <file name="a4d0436f-8b17-68b3-3fa3-42fd03324e80" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Client.LoadOperation">
      <topicdata name="LoadOperation" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Client.LoadOperation" />
      <apidata name="LoadOperation" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Client.LoadOperation.UpdateResults(System.ServiceModel.DomainServices.Client.DomainClientResult)" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.Cancel" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.CancelCore" />
        <element api="Overload:System.ServiceModel.DomainServices.Client.LoadOperation.Complete">
          <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.Complete(System.Exception)" />
          <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.Complete(System.Object)" />
        </element>
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.InvokeCompleteAction" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.MarkErrorAsHandled" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.RaisePropertyChanged(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.LoadOperation" />
      </containers>
      <file name="12062943-e419-2547-5fbd-e8c4da5746b0" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Client.LoadOperation">
      <topicdata name="LoadOperation" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Client.LoadOperation" />
      <apidata name="LoadOperation" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Client.LoadOperation.AllEntities" />
        <element api="P:System.ServiceModel.DomainServices.Client.LoadOperation.Entities" />
        <element api="P:System.ServiceModel.DomainServices.Client.LoadOperation.EntityQuery" />
        <element api="P:System.ServiceModel.DomainServices.Client.LoadOperation.LoadBehavior" />
        <element api="P:System.ServiceModel.DomainServices.Client.LoadOperation.Result" />
        <element api="P:System.ServiceModel.DomainServices.Client.LoadOperation.TotalEntityCount" />
        <element api="P:System.ServiceModel.DomainServices.Client.LoadOperation.ValidationErrors" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.CanCancel" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.Error" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.HasError" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.IsCanceled" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.IsComplete" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.IsErrorHandled" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.SupportsCancellation" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.UserState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.LoadOperation" />
      </containers>
      <file name="ae08708d-22a4-e9f0-dd7b-652b62658a54" />
    </api>
    <api id="Events.T:System.ServiceModel.DomainServices.Client.LoadOperation">
      <topicdata name="LoadOperation" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.DomainServices.Client.LoadOperation" />
      <apidata name="LoadOperation" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.DomainServices.Client.OperationBase.Completed" />
        <element api="E:System.ServiceModel.DomainServices.Client.OperationBase.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.LoadOperation" />
      </containers>
      <file name="446dfa08-b264-516a-3fac-9646b01fd742" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.LoadOperation.AllEntities">
      <topicdata group="api" />
      <apidata name="AllEntities" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AllEntities" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.LoadOperation" ref="true" />
      </containers>
      <file name="24db990c-feb5-4a5d-74b7-7945716110b1" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.LoadOperation.Entities">
      <topicdata group="api" />
      <apidata name="Entities" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Entities" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.LoadOperation" ref="true" />
      </containers>
      <file name="cb2128bb-9773-4b33-6001-fa985d06c00b" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.LoadOperation.EntityQuery">
      <topicdata group="api" />
      <apidata name="EntityQuery" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EntityQuery" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.LoadOperation" ref="true" />
      </containers>
      <file name="5c439972-2220-4620-c5a6-1ad2953f0cbc" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.LoadOperation.LoadBehavior">
      <topicdata group="api" />
      <apidata name="LoadBehavior" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LoadBehavior" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.LoadBehavior" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.LoadOperation" ref="true" />
      </containers>
      <file name="480e9c8d-9cae-caf3-d7a8-f265fdee349e" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.LoadOperation.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Result" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.DomainClientResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.LoadOperation" ref="true" />
      </containers>
      <file name="5723ef6e-ab13-3665-6e05-c8819e028f43" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.LoadOperation.TotalEntityCount">
      <topicdata group="api" />
      <apidata name="TotalEntityCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TotalEntityCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.LoadOperation" ref="true" />
      </containers>
      <file name="08add495-ca5b-216e-715a-45fcbac663ba" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.LoadOperation.UpdateResults(System.ServiceModel.DomainServices.Client.DomainClientResult)">
      <topicdata group="api" />
      <apidata name="UpdateResults" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.ServiceModel.DomainServices.Client.DomainClientResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.LoadOperation" ref="true" />
      </containers>
      <file name="6cad653d-c984-7a86-7263-aeb389b420e9" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.LoadOperation.ValidationErrors">
      <topicdata group="api" />
      <apidata name="ValidationErrors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ValidationErrors" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.DataAnnotations.ValidationResult" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.LoadOperation" ref="true" />
      </containers>
      <file name="9c40329c-5122-c2cd-e89a-4d014140ab47" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.LoadOperation`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.LoadOperation`1" />
      <apidata name="LoadOperation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.DomainServices.Client.LoadOperation" ref="true" />
          <type api="T:System.ServiceModel.DomainServices.Client.OperationBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
      </templates>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <file name="c9674453-8425-16d6-86fe-d66355385797" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Client.LoadOperation`1">
      <topicdata name="LoadOperation" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Client.LoadOperation`1" />
      <apidata name="LoadOperation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.DomainServices.Client.LoadOperation.AllEntities" />
        <element api="P:System.ServiceModel.DomainServices.Client.LoadOperation.LoadBehavior" />
        <element api="P:System.ServiceModel.DomainServices.Client.LoadOperation.TotalEntityCount" />
        <element api="P:System.ServiceModel.DomainServices.Client.LoadOperation.ValidationErrors" />
        <element api="P:System.ServiceModel.DomainServices.Client.LoadOperation`1.Entities" />
        <element api="P:System.ServiceModel.DomainServices.Client.LoadOperation`1.EntityQuery" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.CanCancel" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.Cancel" />
        <element api="E:System.ServiceModel.DomainServices.Client.OperationBase.Completed" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.Error" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.HasError" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.IsCanceled" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.IsComplete" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.IsErrorHandled" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.MarkErrorAsHandled" />
        <element api="E:System.ServiceModel.DomainServices.Client.OperationBase.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.UserState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.LoadOperation`1" />
      </containers>
      <file name="b1ccb4ce-2b67-b1cd-3af2-3797df20a66a" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Client.LoadOperation`1">
      <topicdata name="LoadOperation" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Client.LoadOperation`1" />
      <apidata name="LoadOperation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.Cancel" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.MarkErrorAsHandled" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.LoadOperation`1" />
      </containers>
      <file name="5a6aa3f7-e688-d168-0148-9282178b1e8f" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Client.LoadOperation`1">
      <topicdata name="LoadOperation" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Client.LoadOperation`1" />
      <apidata name="LoadOperation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Client.LoadOperation.AllEntities" />
        <element api="P:System.ServiceModel.DomainServices.Client.LoadOperation.LoadBehavior" />
        <element api="P:System.ServiceModel.DomainServices.Client.LoadOperation.TotalEntityCount" />
        <element api="P:System.ServiceModel.DomainServices.Client.LoadOperation.ValidationErrors" />
        <element api="P:System.ServiceModel.DomainServices.Client.LoadOperation`1.Entities" />
        <element api="P:System.ServiceModel.DomainServices.Client.LoadOperation`1.EntityQuery" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.CanCancel" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.Error" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.HasError" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.IsCanceled" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.IsComplete" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.IsErrorHandled" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.UserState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.LoadOperation`1" />
      </containers>
      <file name="5e170fe5-6c63-256e-4fb3-d25b82f815f6" />
    </api>
    <api id="Events.T:System.ServiceModel.DomainServices.Client.LoadOperation`1">
      <topicdata name="LoadOperation" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.DomainServices.Client.LoadOperation`1" />
      <apidata name="LoadOperation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TEntity">
          <constrained>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="E:System.ServiceModel.DomainServices.Client.OperationBase.Completed" />
        <element api="E:System.ServiceModel.DomainServices.Client.OperationBase.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.LoadOperation`1" />
      </containers>
      <file name="444e3d72-d01f-33b7-6d8f-9d4317f341be" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.LoadOperation`1.Entities">
      <topicdata group="api" />
      <apidata name="Entities" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Entities" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.LoadOperation`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.LoadOperation`1" ref="true" />
      </containers>
      <file name="b15fbf59-7382-2824-47fa-7493f4587d3b" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.LoadOperation`1.EntityQuery">
      <topicdata group="api" />
      <apidata name="EntityQuery" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EntityQuery" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntityQuery`1" ref="true">
          <specialization>
            <template name="TEntity" index="0" api="T:System.ServiceModel.DomainServices.Client.LoadOperation`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.LoadOperation`1" ref="true" />
      </containers>
      <file name="58392b2a-a7ea-a333-7599-39a69d9dcda8" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.OperationBase">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.OperationBase" />
      <apidata name="OperationBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.DomainServices.Client.ApplicationServices.AuthenticationOperation" ref="true" />
          <type api="T:System.ServiceModel.DomainServices.Client.InvokeOperation" ref="true" />
          <type api="T:System.ServiceModel.DomainServices.Client.LoadOperation" ref="true" />
          <type api="T:System.ServiceModel.DomainServices.Client.SubmitOperation" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <file name="33c82372-7f65-919d-bcea-366867ab0be6" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Client.OperationBase">
      <topicdata name="OperationBase" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Client.OperationBase" />
      <apidata name="OperationBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.#ctor(System.Object)" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.CanCancel" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.Cancel" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.CancelCore" />
        <element api="Overload:System.ServiceModel.DomainServices.Client.OperationBase.Complete">
          <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.Complete(System.Exception)" />
          <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.Complete(System.Object)" />
        </element>
        <element api="E:System.ServiceModel.DomainServices.Client.OperationBase.Completed" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.Error" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.HasError" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.InvokeCompleteAction" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.IsCanceled" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.IsComplete" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.IsErrorHandled" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.MarkErrorAsHandled" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.RaisePropertyChanged(System.String)" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.Result" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.SupportsCancellation" />
        <element api="E:System.ServiceModel.DomainServices.Client.OperationBase.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.UserState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.OperationBase" />
      </containers>
      <file name="5e88b889-496a-ee86-daf6-1239d1e8e864" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Client.OperationBase">
      <topicdata name="OperationBase" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Client.OperationBase" />
      <apidata name="OperationBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.Cancel" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.CancelCore" />
        <element api="Overload:System.ServiceModel.DomainServices.Client.OperationBase.Complete">
          <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.Complete(System.Exception)" />
          <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.Complete(System.Object)" />
        </element>
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.InvokeCompleteAction" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.MarkErrorAsHandled" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.RaisePropertyChanged(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.OperationBase" />
      </containers>
      <file name="770f9020-c503-79e7-35d7-cdcab700441b" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Client.OperationBase">
      <topicdata name="OperationBase" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Client.OperationBase" />
      <apidata name="OperationBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.CanCancel" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.Error" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.HasError" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.IsCanceled" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.IsComplete" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.IsErrorHandled" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.Result" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.SupportsCancellation" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.UserState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.OperationBase" />
      </containers>
      <file name="27c9b969-a54c-4b63-f8fe-88ae3cdb776f" />
    </api>
    <api id="Events.T:System.ServiceModel.DomainServices.Client.OperationBase">
      <topicdata name="OperationBase" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.DomainServices.Client.OperationBase" />
      <apidata name="OperationBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.DomainServices.Client.OperationBase.Completed" />
        <element api="E:System.ServiceModel.DomainServices.Client.OperationBase.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.OperationBase" />
      </containers>
      <file name="ff26dea0-c1cf-1024-284f-25ea56089c74" />
    </api>
    <api id="Overload:System.ServiceModel.DomainServices.Client.OperationBase.Complete">
      <topicdata name="Complete" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.OperationBase" />
      <apidata name="Complete" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.Complete(System.Exception)" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.Complete(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.OperationBase" ref="true" />
      </containers>
      <file name="a48e3621-044d-8816-5ef9-9ce996de323b" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.OperationBase.#ctor(System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.OperationBase" ref="true" />
      </containers>
      <file name="aa6d53c8-2815-590d-86cd-ce2b32263253" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.OperationBase.CanCancel">
      <topicdata group="api" />
      <apidata name="CanCancel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CanCancel" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.OperationBase" ref="true" />
      </containers>
      <file name="2871b999-1cb6-12e8-b2f9-2d8f79adf1dd" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.OperationBase.Cancel">
      <topicdata group="api" />
      <apidata name="Cancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.OperationBase" ref="true" />
      </containers>
      <file name="1c5b2666-19fe-4ff9-b087-b632cba3a644" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.OperationBase.CancelCore">
      <topicdata group="api" />
      <apidata name="CancelCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.OperationBase" ref="true" />
      </containers>
      <file name="c7d16b7e-20c6-996e-fcc3-e3e86ef1583c" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.OperationBase.Complete(System.Exception)">
      <topicdata group="api" />
      <apidata name="Complete" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.DomainServices.Client.OperationBase.Complete" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="error">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.OperationBase" ref="true" />
      </containers>
      <file name="9b640ace-65ff-f5b2-1786-bbd8a7366645" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.OperationBase.Complete(System.Object)">
      <topicdata group="api" />
      <apidata name="Complete" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.DomainServices.Client.OperationBase.Complete" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.OperationBase" ref="true" />
      </containers>
      <file name="05e90ccc-4411-46e6-147a-4787adcbe27c" />
    </api>
    <api id="E:System.ServiceModel.DomainServices.Client.OperationBase.Completed">
      <topicdata group="api" />
      <apidata name="Completed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Completed" />
      <remover name="remove_Completed" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.OperationBase" ref="true" />
      </containers>
      <file name="c92c5130-bf1f-901e-a1de-f1c5da82f940" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.OperationBase.Error">
      <topicdata group="api" />
      <apidata name="Error" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Error" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.OperationBase" ref="true" />
      </containers>
      <file name="710f77f9-0f80-c557-9874-b10a4c8e7c7f" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.OperationBase.HasError">
      <topicdata group="api" />
      <apidata name="HasError" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasError" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.OperationBase" ref="true" />
      </containers>
      <file name="f3f6f184-4719-7862-157f-5904a35bd001" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.OperationBase.InvokeCompleteAction">
      <topicdata group="api" />
      <apidata name="InvokeCompleteAction" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.OperationBase" ref="true" />
      </containers>
      <file name="49acdd43-ccb7-6a68-3ec3-c54cc280d31d" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.OperationBase.IsCanceled">
      <topicdata group="api" />
      <apidata name="IsCanceled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsCanceled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.OperationBase" ref="true" />
      </containers>
      <file name="83f87f49-c1c8-306b-0c1d-d6b45b377e2b" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.OperationBase.IsComplete">
      <topicdata group="api" />
      <apidata name="IsComplete" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsComplete" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.OperationBase" ref="true" />
      </containers>
      <file name="1740cb37-3100-4acb-8ef6-f8f0a4f2059c" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.OperationBase.IsErrorHandled">
      <topicdata group="api" />
      <apidata name="IsErrorHandled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsErrorHandled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.OperationBase" ref="true" />
      </containers>
      <file name="3949c902-9bae-c93e-0099-4d22c4f9c7b4" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.OperationBase.MarkErrorAsHandled">
      <topicdata group="api" />
      <apidata name="MarkErrorAsHandled" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.OperationBase" ref="true" />
      </containers>
      <file name="7f46422d-3177-0e24-d3d2-8bfa85d830cd" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.OperationBase.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnPropertyChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.OperationBase" ref="true" />
      </containers>
      <file name="c14b7880-3c66-e95b-7e26-fcb920e0fb2c" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.OperationBase.RaisePropertyChanged(System.String)">
      <topicdata group="api" />
      <apidata name="RaisePropertyChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.OperationBase" ref="true" />
      </containers>
      <file name="8b18bf77-6117-eef6-30a5-91c662207d9c" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.OperationBase.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Result" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.OperationBase" ref="true" />
      </containers>
      <file name="95608faf-c0b5-b4d0-d014-45704505dbd4" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.OperationBase.SupportsCancellation">
      <topicdata group="api" />
      <apidata name="SupportsCancellation" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_SupportsCancellation" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.OperationBase" ref="true" />
      </containers>
      <file name="09e76356-84cd-80fb-8909-d66b178da0ff" />
    </api>
    <api id="E:System.ServiceModel.DomainServices.Client.OperationBase.System#ComponentModel#INotifyPropertyChanged#PropertyChanged">
      <topicdata group="api" eiiName="INotifyPropertyChanged.PropertyChanged" />
      <apidata name="PropertyChanged" group="member" subgroup="event" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      <remover name="remove_System.ComponentModel.INotifyPropertyChanged.PropertyChanged" />
      <eventhandler>
        <type api="T:System.ComponentModel.PropertyChangedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.PropertyChangedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged">
          <type api="T:System.ComponentModel.INotifyPropertyChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.OperationBase" ref="true" />
      </containers>
      <file name="10db7f9f-d9cc-0ff9-252d-b3beca5a0856" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.OperationBase.UserState">
      <topicdata group="api" />
      <apidata name="UserState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UserState" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.OperationBase" ref="true" />
      </containers>
      <file name="4662ceeb-363e-91a2-f006-88f0f1c498f1" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.OperationErrorStatus">
      <topicdata group="api" />
      <apidata name="OperationErrorStatus" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.DomainServices.Client.OperationErrorStatus.NotFound" />
        <element api="F:System.ServiceModel.DomainServices.Client.OperationErrorStatus.ServerError" />
        <element api="F:System.ServiceModel.DomainServices.Client.OperationErrorStatus.NotSupported" />
        <element api="F:System.ServiceModel.DomainServices.Client.OperationErrorStatus.Unauthorized" />
        <element api="F:System.ServiceModel.DomainServices.Client.OperationErrorStatus.ValidationFailed" />
        <element api="F:System.ServiceModel.DomainServices.Client.OperationErrorStatus.Conflicts" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <file name="22697d7c-17df-730d-7e5c-b0d7aeb3a8d1" />
    </api>
    <api id="F:System.ServiceModel.DomainServices.Client.OperationErrorStatus.Conflicts">
      <topicdata group="api" notopic="" />
      <apidata name="Conflicts" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.OperationErrorStatus" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.OperationErrorStatus" ref="false" />
      </containers>
      <file name="ea26a213-6eab-d8c1-1c6a-e4cfffd48288" />
    </api>
    <api id="F:System.ServiceModel.DomainServices.Client.OperationErrorStatus.NotFound">
      <topicdata group="api" notopic="" />
      <apidata name="NotFound" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.OperationErrorStatus" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.OperationErrorStatus" ref="false" />
      </containers>
      <file name="17f29eb4-0029-2111-f093-a2d9f3c87618" />
    </api>
    <api id="F:System.ServiceModel.DomainServices.Client.OperationErrorStatus.NotSupported">
      <topicdata group="api" notopic="" />
      <apidata name="NotSupported" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.OperationErrorStatus" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.OperationErrorStatus" ref="false" />
      </containers>
      <file name="78ed438c-9f4e-7b21-595e-c6698cf9d575" />
    </api>
    <api id="F:System.ServiceModel.DomainServices.Client.OperationErrorStatus.ServerError">
      <topicdata group="api" notopic="" />
      <apidata name="ServerError" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.OperationErrorStatus" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.OperationErrorStatus" ref="false" />
      </containers>
      <file name="43ed0ae3-c1f7-9799-1127-8d7d784a808d" />
    </api>
    <api id="F:System.ServiceModel.DomainServices.Client.OperationErrorStatus.Unauthorized">
      <topicdata group="api" notopic="" />
      <apidata name="Unauthorized" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.OperationErrorStatus" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.OperationErrorStatus" ref="false" />
      </containers>
      <file name="e5df5b4b-f5ff-1e8e-bac9-43bb393f3dca" />
    </api>
    <api id="F:System.ServiceModel.DomainServices.Client.OperationErrorStatus.ValidationFailed">
      <topicdata group="api" notopic="" />
      <apidata name="ValidationFailed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.OperationErrorStatus" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.OperationErrorStatus" ref="false" />
      </containers>
      <file name="c1f73131-d619-ba43-18d7-2f31c2db458e" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.QueryCompletedResult">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.QueryCompletedResult" />
      <apidata name="QueryCompletedResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <file name="095475b8-c8a3-0e19-919b-0565138d79f3" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Client.QueryCompletedResult">
      <topicdata name="QueryCompletedResult" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Client.QueryCompletedResult" />
      <apidata name="QueryCompletedResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Client.QueryCompletedResult.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.DomainServices.Client.Entity},System.Collections.Generic.IEnumerable{System.ServiceModel.DomainServices.Client.Entity},System.Int32,System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationResult})" />
        <element api="P:System.ServiceModel.DomainServices.Client.QueryCompletedResult.Entities" />
        <element api="P:System.ServiceModel.DomainServices.Client.QueryCompletedResult.IncludedEntities" />
        <element api="P:System.ServiceModel.DomainServices.Client.QueryCompletedResult.TotalCount" />
        <element api="P:System.ServiceModel.DomainServices.Client.QueryCompletedResult.ValidationErrors" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.QueryCompletedResult" />
      </containers>
      <file name="cd894aa1-7e63-f6f7-06f0-5177cab9efa2" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Client.QueryCompletedResult">
      <topicdata name="QueryCompletedResult" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Client.QueryCompletedResult" />
      <apidata name="QueryCompletedResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.QueryCompletedResult" />
      </containers>
      <file name="01675626-de6e-f027-cea7-0956f8b7a8dc" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Client.QueryCompletedResult">
      <topicdata name="QueryCompletedResult" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Client.QueryCompletedResult" />
      <apidata name="QueryCompletedResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Client.QueryCompletedResult.Entities" />
        <element api="P:System.ServiceModel.DomainServices.Client.QueryCompletedResult.IncludedEntities" />
        <element api="P:System.ServiceModel.DomainServices.Client.QueryCompletedResult.TotalCount" />
        <element api="P:System.ServiceModel.DomainServices.Client.QueryCompletedResult.ValidationErrors" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.QueryCompletedResult" />
      </containers>
      <file name="0e369446-f22a-38c6-deb8-8fa1a134c416" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.QueryCompletedResult.#ctor(System.Collections.Generic.IEnumerable{System.ServiceModel.DomainServices.Client.Entity},System.Collections.Generic.IEnumerable{System.ServiceModel.DomainServices.Client.Entity},System.Int32,System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationResult})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="entities">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="includedEntities">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="totalCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="validationErrors">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.DataAnnotations.ValidationResult" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.QueryCompletedResult" ref="true" />
      </containers>
      <file name="ebc1a4f8-ef72-6e7b-347d-162bdbc9381b" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.QueryCompletedResult.Entities">
      <topicdata group="api" />
      <apidata name="Entities" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Entities" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.QueryCompletedResult" ref="true" />
      </containers>
      <file name="63dc0619-8a7c-2d86-3352-084de1e018ac" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.QueryCompletedResult.IncludedEntities">
      <topicdata group="api" />
      <apidata name="IncludedEntities" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IncludedEntities" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.QueryCompletedResult" ref="true" />
      </containers>
      <file name="4f85b091-9081-7911-fd40-d4b26e2d65e4" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.QueryCompletedResult.TotalCount">
      <topicdata group="api" />
      <apidata name="TotalCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TotalCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.QueryCompletedResult" ref="true" />
      </containers>
      <file name="2a3c69ab-7208-3482-f9bf-2bc961daa978" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.QueryCompletedResult.ValidationErrors">
      <topicdata group="api" />
      <apidata name="ValidationErrors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ValidationErrors" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.DataAnnotations.ValidationResult" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.QueryCompletedResult" ref="true" />
      </containers>
      <file name="34f4032b-a7d7-e0c9-854c-254ecf4505ce" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.QueryResult">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.QueryResult" />
      <apidata name="QueryResult" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.DomainServices.Client.QueryResult`1" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
          <assignment name="Namespace">
            <type api="T:System.String" ref="true" />
            <value>DomainServices</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="dc5e18e6-a00c-8ac9-43ff-b856b320f64e" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Client.QueryResult">
      <topicdata name="QueryResult" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Client.QueryResult" />
      <apidata name="QueryResult" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Client.QueryResult.#ctor" />
        <element api="M:System.ServiceModel.DomainServices.Client.QueryResult.GetIncludedResults" />
        <element api="M:System.ServiceModel.DomainServices.Client.QueryResult.GetRootResults" />
        <element api="P:System.ServiceModel.DomainServices.Client.QueryResult.TotalCount" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.QueryResult" />
      </containers>
      <file name="6096b7ad-a320-2f38-459a-305e31f035b6" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Client.QueryResult">
      <topicdata name="QueryResult" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Client.QueryResult" />
      <apidata name="QueryResult" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Client.QueryResult.GetIncludedResults" />
        <element api="M:System.ServiceModel.DomainServices.Client.QueryResult.GetRootResults" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.QueryResult" />
      </containers>
      <file name="92e85c73-4414-1102-9355-7789f2499b2b" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Client.QueryResult">
      <topicdata name="QueryResult" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Client.QueryResult" />
      <apidata name="QueryResult" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Client.QueryResult.TotalCount" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.QueryResult" />
      </containers>
      <file name="0d2253e2-ab69-6890-3ba5-3df29b313cb0" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.QueryResult.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.QueryResult" ref="true" />
      </containers>
      <file name="49148073-ab5e-e629-68e8-ccd3f4758781" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.QueryResult.GetIncludedResults">
      <topicdata group="api" />
      <apidata name="GetIncludedResults" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.QueryResult" ref="true" />
      </containers>
      <file name="2d4b4602-44ee-d62c-150e-ee23a9e99272" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.QueryResult.GetRootResults">
      <topicdata group="api" />
      <apidata name="GetRootResults" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.QueryResult" ref="true" />
      </containers>
      <file name="53adad9a-f4fb-67f3-66f9-02a81c560adc" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.QueryResult.TotalCount">
      <topicdata group="api" />
      <apidata name="TotalCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TotalCount" />
      <setter name="set_TotalCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.QueryResult" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
          <assignment name="EmitDefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="1ea23a42-8757-b535-b5b8-35e003248b5b" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.QueryResult`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.QueryResult`1" />
      <apidata name="QueryResult" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Client.QueryResult`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.DomainServices.Client.QueryResult" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>QueryResultOf{0}</value>
          </assignment>
          <assignment name="Namespace">
            <type api="T:System.String" ref="true" />
            <value>DomainServices</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="b1c7ac90-dde0-b758-955c-f8539f6e8188" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Client.QueryResult`1">
      <topicdata name="QueryResult" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Client.QueryResult`1" />
      <apidata name="QueryResult" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Client.QueryResult`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.DomainServices.Client.QueryResult.TotalCount" />
        <element api="Overload:System.ServiceModel.DomainServices.Client.QueryResult`1.#ctor">
          <element api="M:System.ServiceModel.DomainServices.Client.QueryResult`1.#ctor" />
          <element api="M:System.ServiceModel.DomainServices.Client.QueryResult`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:System.ServiceModel.DomainServices.Client.QueryResult`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int32)" />
        </element>
        <element api="M:System.ServiceModel.DomainServices.Client.QueryResult`1.GetIncludedResults" />
        <element api="M:System.ServiceModel.DomainServices.Client.QueryResult`1.GetRootResults" />
        <element api="P:System.ServiceModel.DomainServices.Client.QueryResult`1.IncludedResults" />
        <element api="P:System.ServiceModel.DomainServices.Client.QueryResult`1.RootResults" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.QueryResult`1" />
      </containers>
      <file name="7736fc61-ee70-3c99-ab85-3132135071d7" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Client.QueryResult`1">
      <topicdata name="QueryResult" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Client.QueryResult`1" />
      <apidata name="QueryResult" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Client.QueryResult`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Client.QueryResult`1.GetIncludedResults" />
        <element api="M:System.ServiceModel.DomainServices.Client.QueryResult`1.GetRootResults" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.QueryResult`1" />
      </containers>
      <file name="257938a6-db4a-e50a-bf62-8e11f7a4f882" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Client.QueryResult`1">
      <topicdata name="QueryResult" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Client.QueryResult`1" />
      <apidata name="QueryResult" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Client.QueryResult`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Client.QueryResult.TotalCount" />
        <element api="P:System.ServiceModel.DomainServices.Client.QueryResult`1.IncludedResults" />
        <element api="P:System.ServiceModel.DomainServices.Client.QueryResult`1.RootResults" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.QueryResult`1" />
      </containers>
      <file name="d07e04e3-e085-3a12-d81f-5cbe8e7cf495" />
    </api>
    <api id="Overload:System.ServiceModel.DomainServices.Client.QueryResult`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.QueryResult`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.DomainServices.Client.QueryResult`1.#ctor" />
        <element api="M:System.ServiceModel.DomainServices.Client.QueryResult`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:System.ServiceModel.DomainServices.Client.QueryResult`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.QueryResult`1" ref="true" />
      </containers>
      <file name="eaf5ad42-de40-fc8a-71d6-5d066186e4af" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.QueryResult`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DomainServices.Client.QueryResult`1.#ctor" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.QueryResult`1" ref="true" />
      </containers>
      <file name="0b984d00-0a61-7017-afcf-2ddd74422dc6" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.QueryResult`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DomainServices.Client.QueryResult`1.#ctor" />
      <parameters>
        <parameter name="results">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.ServiceModel.DomainServices.Client.QueryResult`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.QueryResult`1" ref="true" />
      </containers>
      <file name="da13946d-d571-f706-3f87-1bdb14884d22" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.QueryResult`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DomainServices.Client.QueryResult`1.#ctor" />
      <parameters>
        <parameter name="results">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.ServiceModel.DomainServices.Client.QueryResult`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="totalCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.QueryResult`1" ref="true" />
      </containers>
      <file name="ac6a7ec0-5f43-53fe-a307-d4b64f03b45b" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.QueryResult`1.GetIncludedResults">
      <topicdata group="api" />
      <apidata name="GetIncludedResults" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.DomainServices.Client.QueryResult.GetIncludedResults">
          <type api="T:System.ServiceModel.DomainServices.Client.QueryResult" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.QueryResult`1" ref="true" />
      </containers>
      <file name="58330d10-04d6-f055-973a-f1365bde91a7" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.QueryResult`1.GetRootResults">
      <topicdata group="api" />
      <apidata name="GetRootResults" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.DomainServices.Client.QueryResult.GetRootResults">
          <type api="T:System.ServiceModel.DomainServices.Client.QueryResult" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.QueryResult`1" ref="true" />
      </containers>
      <file name="f957e817-b2ac-f3b2-b1e4-a2606ff9c1ae" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.QueryResult`1.IncludedResults">
      <topicdata group="api" />
      <apidata name="IncludedResults" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IncludedResults" />
      <setter name="set_IncludedResults" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.QueryResult`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
          <assignment name="EmitDefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="8b0c2f2f-adff-67c1-fa46-ef231afc1fc3" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.QueryResult`1.RootResults">
      <topicdata group="api" />
      <apidata name="RootResults" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RootResults" />
      <setter name="set_RootResults" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.ServiceModel.DomainServices.Client.QueryResult`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.QueryResult`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
          <assignment name="EmitDefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="416548f8-e0d8-97cf-187b-4e53375027f6" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.SubmitCompletedResult">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.SubmitCompletedResult" />
      <apidata name="SubmitCompletedResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <file name="d948ad05-f9df-9932-1119-5e2b18720a1d" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Client.SubmitCompletedResult">
      <topicdata name="SubmitCompletedResult" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Client.SubmitCompletedResult" />
      <apidata name="SubmitCompletedResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Client.SubmitCompletedResult.#ctor(System.ServiceModel.DomainServices.Client.EntityChangeSet,System.Collections.Generic.IEnumerable{System.ServiceModel.DomainServices.Client.ChangeSetEntry})" />
        <element api="P:System.ServiceModel.DomainServices.Client.SubmitCompletedResult.ChangeSet" />
        <element api="P:System.ServiceModel.DomainServices.Client.SubmitCompletedResult.Results" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.SubmitCompletedResult" />
      </containers>
      <file name="860cfff5-2c34-6906-1f95-aa63a60ea512" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Client.SubmitCompletedResult">
      <topicdata name="SubmitCompletedResult" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Client.SubmitCompletedResult" />
      <apidata name="SubmitCompletedResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.SubmitCompletedResult" />
      </containers>
      <file name="4ebaa579-cafa-b145-4432-270da32c9f80" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Client.SubmitCompletedResult">
      <topicdata name="SubmitCompletedResult" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Client.SubmitCompletedResult" />
      <apidata name="SubmitCompletedResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Client.SubmitCompletedResult.ChangeSet" />
        <element api="P:System.ServiceModel.DomainServices.Client.SubmitCompletedResult.Results" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.SubmitCompletedResult" />
      </containers>
      <file name="a061e6cf-27d0-1a0b-e2e9-1a5b20279876" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.SubmitCompletedResult.#ctor(System.ServiceModel.DomainServices.Client.EntityChangeSet,System.Collections.Generic.IEnumerable{System.ServiceModel.DomainServices.Client.ChangeSetEntry})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="changeSet">
          <type api="T:System.ServiceModel.DomainServices.Client.EntityChangeSet" ref="true" />
        </parameter>
        <parameter name="operationResults">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.DomainServices.Client.ChangeSetEntry" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.SubmitCompletedResult" ref="true" />
      </containers>
      <file name="5109aec8-ff17-c0f4-8771-d54f1caa322e" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.SubmitCompletedResult.ChangeSet">
      <topicdata group="api" />
      <apidata name="ChangeSet" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ChangeSet" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntityChangeSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.SubmitCompletedResult" ref="true" />
      </containers>
      <file name="bd81c0e3-5f5a-a5ac-5cad-ead51eca745a" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.SubmitCompletedResult.Results">
      <topicdata group="api" />
      <apidata name="Results" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Results" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.DomainServices.Client.ChangeSetEntry" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.SubmitCompletedResult" ref="true" />
      </containers>
      <file name="20595fe8-d7ac-5f8d-d071-8ca8ba8f3b5d" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.SubmitOperation">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.SubmitOperation" />
      <apidata name="SubmitOperation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.DomainServices.Client.OperationBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <file name="2afb686b-2b53-3cb8-4d58-aa92991bc4b8" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Client.SubmitOperation">
      <topicdata name="SubmitOperation" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Client.SubmitOperation" />
      <apidata name="SubmitOperation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.CanCancel" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.Cancel" />
        <element api="E:System.ServiceModel.DomainServices.Client.OperationBase.Completed" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.Error" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.HasError" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.IsCanceled" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.IsComplete" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.IsErrorHandled" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.MarkErrorAsHandled" />
        <element api="E:System.ServiceModel.DomainServices.Client.OperationBase.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.UserState" />
        <element api="P:System.ServiceModel.DomainServices.Client.SubmitOperation.ChangeSet" />
        <element api="P:System.ServiceModel.DomainServices.Client.SubmitOperation.EntitiesInError" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.SubmitOperation" />
      </containers>
      <file name="91bb7dd8-82df-25b5-17de-25205a5e873a" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Client.SubmitOperation">
      <topicdata name="SubmitOperation" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Client.SubmitOperation" />
      <apidata name="SubmitOperation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.Cancel" />
        <element api="M:System.ServiceModel.DomainServices.Client.OperationBase.MarkErrorAsHandled" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.SubmitOperation" />
      </containers>
      <file name="59fcceb8-a398-822b-de99-eb7bc5b0bb47" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Client.SubmitOperation">
      <topicdata name="SubmitOperation" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Client.SubmitOperation" />
      <apidata name="SubmitOperation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.CanCancel" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.Error" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.HasError" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.IsCanceled" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.IsComplete" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.IsErrorHandled" />
        <element api="P:System.ServiceModel.DomainServices.Client.OperationBase.UserState" />
        <element api="P:System.ServiceModel.DomainServices.Client.SubmitOperation.ChangeSet" />
        <element api="P:System.ServiceModel.DomainServices.Client.SubmitOperation.EntitiesInError" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.SubmitOperation" />
      </containers>
      <file name="e83f1bf7-c421-c8e2-5d6b-7ffefcfd4bd0" />
    </api>
    <api id="Events.T:System.ServiceModel.DomainServices.Client.SubmitOperation">
      <topicdata name="SubmitOperation" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.DomainServices.Client.SubmitOperation" />
      <apidata name="SubmitOperation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.DomainServices.Client.OperationBase.Completed" />
        <element api="E:System.ServiceModel.DomainServices.Client.OperationBase.System#ComponentModel#INotifyPropertyChanged#PropertyChanged" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.SubmitOperation" />
      </containers>
      <file name="fedf5ff2-388c-3198-8de2-0cc30da25b72" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.SubmitOperation.ChangeSet">
      <topicdata group="api" />
      <apidata name="ChangeSet" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ChangeSet" />
      <returns>
        <type api="T:System.ServiceModel.DomainServices.Client.EntityChangeSet" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.SubmitOperation" ref="true" />
      </containers>
      <file name="6d649681-f76b-3f21-933c-4fc707fb8ab1" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.SubmitOperation.EntitiesInError">
      <topicdata group="api" />
      <apidata name="EntitiesInError" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EntitiesInError" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.DomainServices.Client.Entity" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.SubmitOperation" ref="true" />
      </containers>
      <file name="6489fe59-591d-5a45-0021-78759dc92822" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.ValidationResultInfo">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.ValidationResultInfo" />
      <apidata name="ValidationResultInfo" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Client.ValidationResultInfo.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.DomainServices.Client.ValidationResultInfo" ref="true" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
          <assignment name="Namespace">
            <type api="T:System.String" ref="true" />
            <value>DomainServices</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="dbefba8c-8e57-7aa1-4119-c390e6c60b78" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Client.ValidationResultInfo">
      <topicdata name="ValidationResultInfo" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Client.ValidationResultInfo" />
      <apidata name="ValidationResultInfo" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Client.ValidationResultInfo.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.DomainServices.Client.ValidationResultInfo.#ctor">
          <element api="M:System.ServiceModel.DomainServices.Client.ValidationResultInfo.#ctor" />
          <element api="M:System.ServiceModel.DomainServices.Client.ValidationResultInfo.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})" />
          <element api="M:System.ServiceModel.DomainServices.Client.ValidationResultInfo.#ctor(System.String,System.Int32,System.String,System.Collections.Generic.IEnumerable{System.String})" />
        </element>
        <element api="P:System.ServiceModel.DomainServices.Client.ValidationResultInfo.ErrorCode" />
        <element api="M:System.ServiceModel.DomainServices.Client.ValidationResultInfo.GetHashCode" />
        <element api="P:System.ServiceModel.DomainServices.Client.ValidationResultInfo.Message" />
        <element api="P:System.ServiceModel.DomainServices.Client.ValidationResultInfo.SourceMemberNames" />
        <element api="P:System.ServiceModel.DomainServices.Client.ValidationResultInfo.StackTrace" />
        <element api="M:System.ServiceModel.DomainServices.Client.ValidationResultInfo.System#IEquatable{System#ServiceModel#DomainServices#Client#ValidationResultInfo}#Equals(System.ServiceModel.DomainServices.Client.ValidationResultInfo)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ValidationResultInfo" />
      </containers>
      <file name="d11342dc-3c93-bf3d-410f-5f0b4aaa6846" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Client.ValidationResultInfo">
      <topicdata name="ValidationResultInfo" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Client.ValidationResultInfo" />
      <apidata name="ValidationResultInfo" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Client.ValidationResultInfo.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Client.ValidationResultInfo.GetHashCode" />
        <element api="M:System.ServiceModel.DomainServices.Client.ValidationResultInfo.System#IEquatable{System#ServiceModel#DomainServices#Client#ValidationResultInfo}#Equals(System.ServiceModel.DomainServices.Client.ValidationResultInfo)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ValidationResultInfo" />
      </containers>
      <file name="8a27d9e3-6e0b-8013-473d-c91aab1e2eca" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Client.ValidationResultInfo">
      <topicdata name="ValidationResultInfo" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Client.ValidationResultInfo" />
      <apidata name="ValidationResultInfo" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Client.ValidationResultInfo.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Client.ValidationResultInfo.ErrorCode" />
        <element api="P:System.ServiceModel.DomainServices.Client.ValidationResultInfo.Message" />
        <element api="P:System.ServiceModel.DomainServices.Client.ValidationResultInfo.SourceMemberNames" />
        <element api="P:System.ServiceModel.DomainServices.Client.ValidationResultInfo.StackTrace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ValidationResultInfo" />
      </containers>
      <file name="fd685144-8530-dc7b-b07a-51b40ac161e0" />
    </api>
    <api id="Overload:System.ServiceModel.DomainServices.Client.ValidationResultInfo.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.ValidationResultInfo" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.DomainServices.Client.ValidationResultInfo.#ctor" />
        <element api="M:System.ServiceModel.DomainServices.Client.ValidationResultInfo.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})" />
        <element api="M:System.ServiceModel.DomainServices.Client.ValidationResultInfo.#ctor(System.String,System.Int32,System.String,System.Collections.Generic.IEnumerable{System.String})" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ValidationResultInfo" ref="true" />
      </containers>
      <file name="15b429b2-f472-b411-f871-34e6ab54f82f" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.ValidationResultInfo.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DomainServices.Client.ValidationResultInfo.#ctor" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ValidationResultInfo" ref="true" />
      </containers>
      <file name="ed99e570-e731-d50f-0058-3fadb2e098fe" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.ValidationResultInfo.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DomainServices.Client.ValidationResultInfo.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sourceMemberNames">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ValidationResultInfo" ref="true" />
      </containers>
      <file name="6adbc01e-a276-f69c-b8a6-328235d587a6" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.ValidationResultInfo.#ctor(System.String,System.Int32,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DomainServices.Client.ValidationResultInfo.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="errorCode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="stackTrace">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sourceMemberNames">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ValidationResultInfo" ref="true" />
      </containers>
      <file name="203efac6-cceb-1d9e-d466-42425549064c" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.ValidationResultInfo.ErrorCode">
      <topicdata group="api" />
      <apidata name="ErrorCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ErrorCode" />
      <setter name="set_ErrorCode" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ValidationResultInfo" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
          <assignment name="EmitDefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="587a74ea-05f6-44b9-b4d3-f9d2144e9b1d" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.ValidationResultInfo.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ValidationResultInfo" ref="true" />
      </containers>
      <file name="426284cd-65f5-a259-22a7-bc6a703ab90c" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.ValidationResultInfo.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Message" />
      <setter name="set_Message" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ValidationResultInfo" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
          <assignment name="EmitDefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="5b4167a3-8667-d194-cca9-b6a1ce0b891c" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.ValidationResultInfo.SourceMemberNames">
      <topicdata group="api" />
      <apidata name="SourceMemberNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SourceMemberNames" />
      <setter name="set_SourceMemberNames" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ValidationResultInfo" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
          <assignment name="EmitDefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="d9bd715b-e486-ff10-60f9-11ff2ab32078" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.ValidationResultInfo.StackTrace">
      <topicdata group="api" />
      <apidata name="StackTrace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_StackTrace" />
      <setter name="set_StackTrace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ValidationResultInfo" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
          <assignment name="EmitDefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="5144b381-de6c-8fff-d268-12bec2e0ef18" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.ValidationResultInfo.System#IEquatable{System#ServiceModel#DomainServices#Client#ValidationResultInfo}#Equals(System.ServiceModel.DomainServices.Client.ValidationResultInfo)">
      <topicdata group="api" eiiName="IEquatable.Equals" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.ServiceModel.DomainServices.Client.ValidationResultInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.DomainServices.Client.ValidationResultInfo" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client" module="System.ServiceModel.DomainServices.Client" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.ValidationResultInfo" ref="true" />
      </containers>
      <file name="dbf38c72-184b-8964-c77d-742436ba93f4" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Client.WebDomainClient`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.WebDomainClient`1" />
      <apidata name="WebDomainClient" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.DomainServices.Client.DomainClient" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TContract">
          <constrained ref="true" />
        </template>
      </templates>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client.Web" module="System.ServiceModel.DomainServices.Client.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
      </containers>
      <file name="5e16beb4-00f9-da73-7376-d09128e0ebf3" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Client.WebDomainClient`1">
      <topicdata name="WebDomainClient" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Client.WebDomainClient`1" />
      <apidata name="WebDomainClient" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TContract">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.BeginInvoke(System.ServiceModel.DomainServices.Client.InvokeArgs,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.BeginQuery(System.ServiceModel.DomainServices.Client.EntityQuery,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.BeginSubmit(System.ServiceModel.DomainServices.Client.EntityChangeSet,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.CancelInvoke(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.CancelQuery(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.CancelSubmit(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.EndInvoke(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.EndQuery(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.EndSubmit(System.IAsyncResult)" />
        <element api="P:System.ServiceModel.DomainServices.Client.DomainClient.EntityTypes" />
        <element api="Overload:System.ServiceModel.DomainServices.Client.WebDomainClient`1.#ctor">
          <element api="M:System.ServiceModel.DomainServices.Client.WebDomainClient`1.#ctor(System.Uri)" />
          <element api="M:System.ServiceModel.DomainServices.Client.WebDomainClient`1.#ctor(System.Uri,System.Boolean)" />
          <element api="M:System.ServiceModel.DomainServices.Client.WebDomainClient`1.#ctor(System.Uri,System.Boolean,System.ServiceModel.ChannelFactory{`0})" />
        </element>
        <element api="P:System.ServiceModel.DomainServices.Client.WebDomainClient`1.ChannelFactory" />
        <element api="P:System.ServiceModel.DomainServices.Client.WebDomainClient`1.ServiceUri" />
        <element api="P:System.ServiceModel.DomainServices.Client.WebDomainClient`1.SupportsCancellation" />
        <element api="P:System.ServiceModel.DomainServices.Client.WebDomainClient`1.UsesHttps" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client.Web" module="System.ServiceModel.DomainServices.Client.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.WebDomainClient`1" />
      </containers>
      <file name="d4e0a3bb-1e84-c1b9-06e1-9b9a646a08a4" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Client.WebDomainClient`1">
      <topicdata name="WebDomainClient" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Client.WebDomainClient`1" />
      <apidata name="WebDomainClient" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TContract">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.BeginInvoke(System.ServiceModel.DomainServices.Client.InvokeArgs,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.BeginQuery(System.ServiceModel.DomainServices.Client.EntityQuery,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.BeginSubmit(System.ServiceModel.DomainServices.Client.EntityChangeSet,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.CancelInvoke(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.CancelQuery(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.CancelSubmit(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.EndInvoke(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.EndQuery(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.DomainServices.Client.DomainClient.EndSubmit(System.IAsyncResult)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client.Web" module="System.ServiceModel.DomainServices.Client.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.WebDomainClient`1" />
      </containers>
      <file name="536290dd-16f9-3155-dd48-07452a505b74" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Client.WebDomainClient`1">
      <topicdata name="WebDomainClient" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Client.WebDomainClient`1" />
      <apidata name="WebDomainClient" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TContract">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Client.DomainClient.EntityTypes" />
        <element api="P:System.ServiceModel.DomainServices.Client.WebDomainClient`1.ChannelFactory" />
        <element api="P:System.ServiceModel.DomainServices.Client.WebDomainClient`1.ServiceUri" />
        <element api="P:System.ServiceModel.DomainServices.Client.WebDomainClient`1.SupportsCancellation" />
        <element api="P:System.ServiceModel.DomainServices.Client.WebDomainClient`1.UsesHttps" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client.Web" module="System.ServiceModel.DomainServices.Client.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.WebDomainClient`1" />
      </containers>
      <file name="e80824da-1eb3-b215-e923-964e2376391b" />
    </api>
    <api id="Overload:System.ServiceModel.DomainServices.Client.WebDomainClient`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Client.WebDomainClient`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.DomainServices.Client.WebDomainClient`1.#ctor(System.Uri)" />
        <element api="M:System.ServiceModel.DomainServices.Client.WebDomainClient`1.#ctor(System.Uri,System.Boolean)" />
        <element api="M:System.ServiceModel.DomainServices.Client.WebDomainClient`1.#ctor(System.Uri,System.Boolean,System.ServiceModel.ChannelFactory{`0})" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client.Web" module="System.ServiceModel.DomainServices.Client.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.WebDomainClient`1" ref="true" />
      </containers>
      <file name="d88fadac-a7fe-f146-f02f-e0a79da65fea" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.WebDomainClient`1.#ctor(System.Uri)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DomainServices.Client.WebDomainClient`1.#ctor" />
      <parameters>
        <parameter name="serviceUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client.Web" module="System.ServiceModel.DomainServices.Client.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.WebDomainClient`1" ref="true" />
      </containers>
      <file name="26006a62-d678-f5f5-f633-96460211c9e9" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.WebDomainClient`1.#ctor(System.Uri,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DomainServices.Client.WebDomainClient`1.#ctor" />
      <parameters>
        <parameter name="serviceUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="usesHttps">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client.Web" module="System.ServiceModel.DomainServices.Client.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.WebDomainClient`1" ref="true" />
      </containers>
      <file name="236c850d-c8fa-ecb0-1556-d9da53055b34" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Client.WebDomainClient`1.#ctor(System.Uri,System.Boolean,System.ServiceModel.ChannelFactory{`0})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DomainServices.Client.WebDomainClient`1.#ctor" />
      <parameters>
        <parameter name="serviceUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="usesHttps">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="channelFactory">
          <type api="T:System.ServiceModel.ChannelFactory`1" ref="true">
            <specialization>
              <template name="TContract" index="0" api="T:System.ServiceModel.DomainServices.Client.WebDomainClient`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client.Web" module="System.ServiceModel.DomainServices.Client.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.WebDomainClient`1" ref="true" />
      </containers>
      <file name="bac063d9-b75a-2e10-0fb7-d0fb36bcc66e" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.WebDomainClient`1.ChannelFactory">
      <topicdata group="api" />
      <apidata name="ChannelFactory" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ChannelFactory" />
      <returns>
        <type api="T:System.ServiceModel.ChannelFactory`1" ref="true">
          <specialization>
            <template name="TContract" index="0" api="T:System.ServiceModel.DomainServices.Client.WebDomainClient`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client.Web" module="System.ServiceModel.DomainServices.Client.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.WebDomainClient`1" ref="true" />
      </containers>
      <file name="df5822e0-181f-1c36-c305-abc032317335" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.WebDomainClient`1.ServiceUri">
      <topicdata group="api" />
      <apidata name="ServiceUri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ServiceUri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client.Web" module="System.ServiceModel.DomainServices.Client.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.WebDomainClient`1" ref="true" />
      </containers>
      <file name="c2177afe-d2d8-f40c-0bcd-c9f8a7ca3f03" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.WebDomainClient`1.SupportsCancellation">
      <topicdata group="api" />
      <apidata name="SupportsCancellation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.DomainServices.Client.DomainClient.SupportsCancellation">
          <type api="T:System.ServiceModel.DomainServices.Client.DomainClient" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_SupportsCancellation" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client.Web" module="System.ServiceModel.DomainServices.Client.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.WebDomainClient`1" ref="true" />
      </containers>
      <file name="8c852168-9060-e6b2-c411-c4b99e4020fc" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Client.WebDomainClient`1.UsesHttps">
      <topicdata group="api" />
      <apidata name="UsesHttps" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UsesHttps" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Client.Web" module="System.ServiceModel.DomainServices.Client.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.5.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Client" />
        <type api="T:System.ServiceModel.DomainServices.Client.WebDomainClient`1" ref="true" />
      </containers>
      <file name="0980468a-2a5a-cf2b-86a7-f414ac7f8f4d" />
    </api>
  </apis>
</reflection>