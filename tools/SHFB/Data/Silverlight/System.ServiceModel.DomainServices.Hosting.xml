<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.ServiceModel.DomainServices.Hosting">
      <assemblydata version="4.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.DomainServices.Hosting</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.DomainServices.Hosting.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.1.61829.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WCF RIA Services</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTrademarkAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>e3844512-48a8-451a-9be4-ac7793016b9d</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="System.ServiceModel.DomainServices.Hosting.OData">
      <assemblydata version="4.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.1.61829.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.DomainServices.Hosting.OData</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.DomainServices.Hosting.OData.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WCF RIA Services</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTrademarkAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>82539B51-6BB5-4C04-B37D-4FA850E397CF</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.ServiceModel.DomainServices.Hosting">
      <topicdata group="api" />
      <apidata name="System.ServiceModel.DomainServices.Hosting" group="namespace" />
      <elements>
        <element api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceFault" />
        <element api="T:System.ServiceModel.DomainServices.Hosting.QueryResult" />
        <element api="T:System.ServiceModel.DomainServices.Hosting.QueryResult`1" />
        <element api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory" />
        <element api="T:System.ServiceModel.DomainServices.Hosting.PoxBinaryEndpointFactory" />
        <element api="T:System.ServiceModel.DomainServices.Hosting.DomainServicesSection" />
        <element api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceHostFactory" />
        <element api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceHost" />
        <element api="T:System.ServiceModel.DomainServices.Hosting.EnableClientAccessAttribute" />
        <element api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceHttpModule" />
        <element api="T:System.ServiceModel.DomainServices.Hosting.ODataEndpointFactory" />
      </elements>
      <file name="64af6cb4-971a-2840-9c7a-30f392853acb" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory" />
      <apidata name="DomainServiceEndpointFactory" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.DomainServices.Hosting.PoxBinaryEndpointFactory" ref="true" />
          <type api="T:System.ServiceModel.DomainServices.Hosting.ODataEndpointFactory" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
      </containers>
      <file name="f10acb04-8e98-f2d4-bd46-230cd9616f03" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory">
      <topicdata name="DomainServiceEndpointFactory" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory" />
      <apidata name="DomainServiceEndpointFactory" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory.#ctor" />
        <element api="M:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory.CreateEndpoints(System.ServiceModel.DomainServices.Server.DomainServiceDescription,System.ServiceModel.DomainServices.Hosting.DomainServiceHost)" />
        <element api="P:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory.Name" />
        <element api="P:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory.Parameters" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory" />
      </containers>
      <file name="6499f126-6733-2c8d-089a-7f4e4e5f0009" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory">
      <topicdata name="DomainServiceEndpointFactory" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory" />
      <apidata name="DomainServiceEndpointFactory" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory.CreateEndpoints(System.ServiceModel.DomainServices.Server.DomainServiceDescription,System.ServiceModel.DomainServices.Hosting.DomainServiceHost)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory" />
      </containers>
      <file name="02d9fa6b-d606-9cfe-f4af-ab70ed10fe92" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory">
      <topicdata name="DomainServiceEndpointFactory" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory" />
      <apidata name="DomainServiceEndpointFactory" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory.Name" />
        <element api="P:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory.Parameters" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory" />
      </containers>
      <file name="27c50fda-53ed-1446-2f1f-8f91c7556224" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory" ref="true" />
      </containers>
      <file name="b19b6cc6-4051-e8f9-8b11-bdaf78302dc9" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory.CreateEndpoints(System.ServiceModel.DomainServices.Server.DomainServiceDescription,System.ServiceModel.DomainServices.Hosting.DomainServiceHost)">
      <topicdata group="api" />
      <apidata name="CreateEndpoints" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="description">
          <type api="T:System.ServiceModel.DomainServices.Server.DomainServiceDescription" ref="true" />
        </parameter>
        <parameter name="serviceHost">
          <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceHost" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory" ref="true" />
      </containers>
      <file name="658a718d-e727-2a6a-39b0-5e38cbd1fab0" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory" ref="true" />
      </containers>
      <file name="8726273b-306e-159c-6cb2-fc3e745249cc" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory.Parameters">
      <topicdata group="api" />
      <apidata name="Parameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parameters" />
      <returns>
        <type api="T:System.Collections.Specialized.NameValueCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory" ref="true" />
      </containers>
      <file name="3648a066-9a6a-8706-3879-9b2b9da35d34" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Hosting.DomainServiceFault">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Hosting.DomainServiceFault" />
      <apidata name="DomainServiceFault" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Hosting.DomainServiceFault.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
          <assignment name="Namespace">
            <type api="T:System.String" ref="true" />
            <value>DomainServices</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="1d897ded-d158-f6d5-3236-7438a8455a9d" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Hosting.DomainServiceFault">
      <topicdata name="DomainServiceFault" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Hosting.DomainServiceFault" />
      <apidata name="DomainServiceFault" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Hosting.DomainServiceFault.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Hosting.DomainServiceFault.#ctor" />
        <element api="P:System.ServiceModel.DomainServices.Hosting.DomainServiceFault.ErrorCode" />
        <element api="P:System.ServiceModel.DomainServices.Hosting.DomainServiceFault.ErrorMessage" />
        <element api="M:System.ServiceModel.DomainServices.Hosting.DomainServiceFault.GetValidationErrors" />
        <element api="P:System.ServiceModel.DomainServices.Hosting.DomainServiceFault.IsDomainException" />
        <element api="P:System.ServiceModel.DomainServices.Hosting.DomainServiceFault.OperationErrors" />
        <element api="P:System.ServiceModel.DomainServices.Hosting.DomainServiceFault.StackTrace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceFault" />
      </containers>
      <file name="fa9486e7-5c9e-9e30-d876-bf644d53e2ba" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Hosting.DomainServiceFault">
      <topicdata name="DomainServiceFault" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Hosting.DomainServiceFault" />
      <apidata name="DomainServiceFault" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Hosting.DomainServiceFault.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Hosting.DomainServiceFault.GetValidationErrors" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceFault" />
      </containers>
      <file name="d1611c00-d5ed-b6a9-501c-150e55ae5610" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Hosting.DomainServiceFault">
      <topicdata name="DomainServiceFault" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Hosting.DomainServiceFault" />
      <apidata name="DomainServiceFault" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Hosting.DomainServiceFault.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Hosting.DomainServiceFault.ErrorCode" />
        <element api="P:System.ServiceModel.DomainServices.Hosting.DomainServiceFault.ErrorMessage" />
        <element api="P:System.ServiceModel.DomainServices.Hosting.DomainServiceFault.IsDomainException" />
        <element api="P:System.ServiceModel.DomainServices.Hosting.DomainServiceFault.OperationErrors" />
        <element api="P:System.ServiceModel.DomainServices.Hosting.DomainServiceFault.StackTrace" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceFault" />
      </containers>
      <file name="97becd5f-5c49-90c5-1f7e-0a14fa740ae6" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Hosting.DomainServiceFault.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceFault" ref="true" />
      </containers>
      <file name="a689f824-fa63-f746-f391-91cf8d03cfcb" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Hosting.DomainServiceFault.ErrorCode">
      <topicdata group="api" />
      <apidata name="ErrorCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ErrorCode" />
      <setter name="set_ErrorCode" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceFault" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
          <assignment name="EmitDefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="c2696d58-107e-5e84-3594-4231afa349ae" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Hosting.DomainServiceFault.ErrorMessage">
      <topicdata group="api" />
      <apidata name="ErrorMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ErrorMessage" />
      <setter name="set_ErrorMessage" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceFault" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="40ac8066-140a-f2b6-cf91-b6c18f42dae3" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Hosting.DomainServiceFault.GetValidationErrors">
      <topicdata group="api" />
      <apidata name="GetValidationErrors" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.DataAnnotations.ValidationResult" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceFault" ref="true" />
      </containers>
      <file name="f7fe05a2-e30d-cf65-3bd3-4d544f65aded" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Hosting.DomainServiceFault.IsDomainException">
      <topicdata group="api" />
      <apidata name="IsDomainException" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsDomainException" />
      <setter name="set_IsDomainException" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceFault" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="affa9d2b-56bc-2cdd-6779-172abefeeb68" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Hosting.DomainServiceFault.OperationErrors">
      <topicdata group="api" />
      <apidata name="OperationErrors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OperationErrors" />
      <setter name="set_OperationErrors" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.DomainServices.Server.ValidationResultInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceFault" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
          <assignment name="EmitDefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="d5e9ee4d-fe09-f25a-a82f-8260c1ae0658" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Hosting.DomainServiceFault.StackTrace">
      <topicdata group="api" />
      <apidata name="StackTrace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_StackTrace" />
      <setter name="set_StackTrace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceFault" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
          <assignment name="EmitDefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="e6dc1b6b-1785-450f-6a25-df67b6513405" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Hosting.DomainServiceHost">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Hosting.DomainServiceHost" />
      <apidata name="DomainServiceHost" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.ServiceHost" ref="true" />
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IServiceProvider" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
      </containers>
      <file name="38df0fd1-ec41-e43b-1e92-c51c61a3af8a" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Hosting.DomainServiceHost">
      <topicdata name="DomainServiceHost" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Hosting.DomainServiceHost" />
      <apidata name="DomainServiceHost" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.DomainServices.Hosting.DomainServiceHost.AddServiceEndpoint">
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
            <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="endpoint">
                <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel" />
              <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
            </containers>
          </element>
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)">
            <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="implementedContract">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="binding">
                <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
              </parameter>
              <parameter name="address">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
            </returns>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel" />
              <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
            </containers>
          </element>
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)">
            <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="implementedContract">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="binding">
                <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
              </parameter>
              <parameter name="address">
                <type api="T:System.Uri" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
            </returns>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel" />
              <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
            </containers>
          </element>
          <element api="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)">
            <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="implementedContract">
                <type api="T:System.Type" ref="true" />
              </parameter>
              <parameter name="binding">
                <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
              </parameter>
              <parameter name="address">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
            </returns>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel" />
              <type api="T:System.ServiceModel.ServiceHost" ref="true" />
            </containers>
          </element>
          <element api="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)">
            <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="implementedContract">
                <type api="T:System.Type" ref="true" />
              </parameter>
              <parameter name="binding">
                <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
              </parameter>
              <parameter name="address">
                <type api="T:System.Uri" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
            </returns>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel" />
              <type api="T:System.ServiceModel.ServiceHost" ref="true" />
            </containers>
          </element>
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
            <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="implementedContract">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="binding">
                <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
              </parameter>
              <parameter name="address">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="listenUri">
                <type api="T:System.Uri" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
            </returns>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel" />
              <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
            </containers>
          </element>
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
            <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="implementedContract">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="binding">
                <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
              </parameter>
              <parameter name="address">
                <type api="T:System.Uri" ref="true" />
              </parameter>
              <parameter name="listenUri">
                <type api="T:System.Uri" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
            </returns>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel" />
              <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
            </containers>
          </element>
          <element api="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
            <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="implementedContract">
                <type api="T:System.Type" ref="true" />
              </parameter>
              <parameter name="binding">
                <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
              </parameter>
              <parameter name="address">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="listenUri">
                <type api="T:System.Uri" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
            </returns>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel" />
              <type api="T:System.ServiceModel.ServiceHost" ref="true" />
            </containers>
          </element>
          <element api="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
            <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="implementedContract">
                <type api="T:System.Type" ref="true" />
              </parameter>
              <parameter name="binding">
                <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
              </parameter>
              <parameter name="address">
                <type api="T:System.Uri" ref="true" />
              </parameter>
              <parameter name="listenUri">
                <type api="T:System.Uri" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
            </returns>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel" />
              <type api="T:System.ServiceModel.ServiceHost" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:System.ServiceModel.DomainServices.Hosting.DomainServiceHost.InitializeDescription">
          <element api="M:System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)">
            <apidata name="InitializeDescription" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="baseAddresses">
                <type api="T:System.ServiceModel.UriSchemeKeyedCollection" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel" />
              <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
            </containers>
          </element>
          <element api="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)">
            <apidata name="InitializeDescription" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="singletonInstance">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="baseAddresses">
                <type api="T:System.ServiceModel.UriSchemeKeyedCollection" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel" />
              <type api="T:System.ServiceModel.ServiceHost" ref="true" />
            </containers>
          </element>
          <element api="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)">
            <apidata name="InitializeDescription" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="serviceType">
                <type api="T:System.Type" ref="true" />
              </parameter>
              <parameter name="baseAddresses">
                <type api="T:System.ServiceModel.UriSchemeKeyedCollection" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel" />
              <type api="T:System.ServiceModel.ServiceHost" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.ServiceModel.ServiceHost.OnClosed">
          <apidata name="OnClosed" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.ServiceModel.ServiceHostBase.OnClosed">
              <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
            </member>
          </overrides>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHost" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.ServiceHost.SingletonInstance">
          <apidata name="SingletonInstance" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_SingletonInstance" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHost" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)">
          <apidata name="AddBaseAddress" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="baseAddress">
              <type api="T:System.Uri" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)">
          <apidata name="SetEndpointAddress" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="endpoint">
              <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
            </parameter>
            <parameter name="relativeAddress">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ServiceHostBase.AddDefaultEndpoints">
          <apidata name="AddDefaultEndpoints" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose">
          <apidata name="Dispose" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <implements>
            <member api="M:System.IDisposable.Dispose">
              <type api="T:System.IDisposable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ServiceHostBase.InitializeRuntime">
          <apidata name="InitializeRuntime" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)">
          <apidata name="IncrementManualFlowControlLimit" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="incrementBy">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)">
          <apidata name="LoadConfigurationSection" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="serviceSection">
              <type api="T:System.ServiceModel.Configuration.ServiceElement" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ServiceHostBase.OnAbort">
          <apidata name="OnAbort" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.ServiceModel.Channels.CommunicationObject.OnAbort">
              <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
            </member>
          </overrides>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <apidata name="OnBeginClose" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
              <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="timeout">
              <type api="T:System.TimeSpan" ref="false" />
            </parameter>
            <parameter name="callback">
              <type api="T:System.AsyncCallback" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IAsyncResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <apidata name="OnBeginOpen" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
              <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="timeout">
              <type api="T:System.TimeSpan" ref="false" />
            </parameter>
            <parameter name="callback">
              <type api="T:System.AsyncCallback" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IAsyncResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)">
          <apidata name="OnClose" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
              <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="timeout">
              <type api="T:System.TimeSpan" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)">
          <apidata name="OnEndClose" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
              <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="result">
              <type api="T:System.IAsyncResult" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)">
          <apidata name="OnEndOpen" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
              <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="result">
              <type api="T:System.IAsyncResult" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)">
          <apidata name="OnOpen" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
              <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="timeout">
              <type api="T:System.TimeSpan" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ServiceHostBase.OnOpened">
          <apidata name="OnOpened" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.ServiceModel.Channels.CommunicationObject.OnOpened">
              <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
            </member>
          </overrides>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters">
          <apidata name="ReleasePerformanceCounters" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.ServiceHostBase.Authorization">
          <apidata name="Authorization" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Authorization" />
          <returns>
            <type api="T:System.ServiceModel.Description.ServiceAuthorizationBehavior" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.ServiceHostBase.Authentication">
          <apidata name="Authentication" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Authentication" />
          <returns>
            <type api="T:System.ServiceModel.Description.ServiceAuthenticationBehavior" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.ServiceHostBase.BaseAddresses">
          <apidata name="BaseAddresses" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_BaseAddresses" />
          <returns>
            <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
              <specialization>
                <type api="T:System.Uri" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.ServiceHostBase.ChannelDispatchers">
          <apidata name="ChannelDispatchers" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ChannelDispatchers" />
          <returns>
            <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcherCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.ServiceHostBase.CloseTimeout">
          <apidata name="CloseTimeout" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_CloseTimeout" />
          <setter name="set_CloseTimeout" />
          <returns>
            <type api="T:System.TimeSpan" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.ServiceHostBase.Credentials">
          <apidata name="Credentials" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Credentials" />
          <returns>
            <type api="T:System.ServiceModel.Description.ServiceCredentials" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.ServiceHostBase.DefaultCloseTimeout">
          <apidata name="DefaultCloseTimeout" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout">
              <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_DefaultCloseTimeout" />
          <returns>
            <type api="T:System.TimeSpan" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.ServiceHostBase.DefaultOpenTimeout">
          <apidata name="DefaultOpenTimeout" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout">
              <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_DefaultOpenTimeout" />
          <returns>
            <type api="T:System.TimeSpan" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.ServiceHostBase.Description">
          <apidata name="Description" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Description" />
          <returns>
            <type api="T:System.ServiceModel.Description.ServiceDescription" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.ServiceHostBase.Extensions">
          <apidata name="Extensions" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Extensions" />
          <returns>
            <type api="T:System.ServiceModel.IExtensionCollection`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:System.ServiceModel.IExtensibleObject`1.Extensions">
              <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.ServiceHostBase.ImplementedContracts">
          <apidata name="ImplementedContracts" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ImplementedContracts" />
          <returns>
            <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.ServiceModel.Description.ContractDescription" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit">
          <apidata name="ManualFlowControlLimit" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ManualFlowControlLimit" />
          <setter name="set_ManualFlowControlLimit" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.ServiceHostBase.OpenTimeout">
          <apidata name="OpenTimeout" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_OpenTimeout" />
          <setter name="set_OpenTimeout" />
          <returns>
            <type api="T:System.TimeSpan" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="E:System.ServiceModel.ServiceHostBase.UnknownMessageReceived">
          <apidata name="UnknownMessageReceived" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_UnknownMessageReceived" />
          <remover name="remove_UnknownMessageReceived" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.UnknownMessageReceivedEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.ServiceModel.UnknownMessageReceivedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort">
          <apidata name="Abort" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.ServiceModel.ICommunicationObject.Abort">
              <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ServiceModel.DomainServices.Hosting.DomainServiceHost.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
            <apidata name="BeginClose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="callback">
                <type api="T:System.AsyncCallback" ref="true" />
              </parameter>
              <parameter name="state">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.IAsyncResult" ref="true" />
            </returns>
            <implements>
              <member api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
                <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel.Channels" />
              <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
            </containers>
          </element>
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
            <apidata name="BeginClose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="timeout">
                <type api="T:System.TimeSpan" ref="false" />
              </parameter>
              <parameter name="callback">
                <type api="T:System.AsyncCallback" ref="true" />
              </parameter>
              <parameter name="state">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.IAsyncResult" ref="true" />
            </returns>
            <implements>
              <member api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
                <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel.Channels" />
              <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:System.ServiceModel.DomainServices.Hosting.DomainServiceHost.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
            <apidata name="BeginOpen" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="callback">
                <type api="T:System.AsyncCallback" ref="true" />
              </parameter>
              <parameter name="state">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.IAsyncResult" ref="true" />
            </returns>
            <implements>
              <member api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
                <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel.Channels" />
              <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
            </containers>
          </element>
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
            <apidata name="BeginOpen" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="timeout">
                <type api="T:System.TimeSpan" ref="false" />
              </parameter>
              <parameter name="callback">
                <type api="T:System.AsyncCallback" ref="true" />
              </parameter>
              <parameter name="state">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.IAsyncResult" ref="true" />
            </returns>
            <implements>
              <member api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
                <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel.Channels" />
              <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:System.ServiceModel.DomainServices.Hosting.DomainServiceHost.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close">
            <apidata name="Close" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.ServiceModel.ICommunicationObject.Close">
                <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel.Channels" />
              <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
            </containers>
          </element>
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
            <apidata name="Close" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="timeout">
                <type api="T:System.TimeSpan" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
                <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel.Channels" />
              <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
          <apidata name="EndClose" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="result">
              <type api="T:System.IAsyncResult" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)">
              <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
          <apidata name="EndOpen" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="result">
              <type api="T:System.IAsyncResult" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)">
              <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault">
          <apidata name="Fault" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ServiceModel.DomainServices.Hosting.DomainServiceHost.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open">
            <apidata name="Open" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.ServiceModel.ICommunicationObject.Open">
                <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel.Channels" />
              <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
            </containers>
          </element>
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
            <apidata name="Open" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="timeout">
                <type api="T:System.TimeSpan" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
                <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel.Channels" />
              <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing">
          <apidata name="OnClosing" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted">
          <apidata name="OnFaulted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpening">
          <apidata name="OnOpening" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType">
          <apidata name="GetCommunicationObjectType" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed">
          <apidata name="ThrowIfDisposed" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable">
          <apidata name="ThrowIfDisposedOrImmutable" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen">
          <apidata name="ThrowIfDisposedOrNotOpen" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed">
          <apidata name="IsDisposed" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsDisposed" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State">
          <apidata name="State" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_State" />
          <returns>
            <type api="T:System.ServiceModel.CommunicationState" ref="false" />
          </returns>
          <implements>
            <member api="P:System.ServiceModel.ICommunicationObject.State">
              <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock">
          <apidata name="ThisLock" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ThisLock" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed">
          <apidata name="Closed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Closed" />
          <remover name="remove_Closed" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.ServiceModel.ICommunicationObject.Closed">
              <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing">
          <apidata name="Closing" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Closing" />
          <remover name="remove_Closing" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.ServiceModel.ICommunicationObject.Closing">
              <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted">
          <apidata name="Faulted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Faulted" />
          <remover name="remove_Faulted" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.ServiceModel.ICommunicationObject.Faulted">
              <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened">
          <apidata name="Opened" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Opened" />
          <remover name="remove_Opened" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.ServiceModel.ICommunicationObject.Opened">
              <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening">
          <apidata name="Opening" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Opening" />
          <remover name="remove_Opening" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.ServiceModel.ICommunicationObject.Opening">
              <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.DomainServices.Hosting.DomainServiceHost.#ctor(System.Type,System.Uri[])" />
        <element api="M:System.ServiceModel.DomainServices.Hosting.DomainServiceHost.AddDefaultBehaviors" />
        <element api="M:System.ServiceModel.DomainServices.Hosting.DomainServiceHost.ApplyConfiguration" />
        <element api="M:System.ServiceModel.DomainServices.Hosting.DomainServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)" />
        <element api="M:System.ServiceModel.DomainServices.Hosting.DomainServiceHost.GetService(System.Type)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceHost" />
      </containers>
      <file name="dac1d1b3-ee86-21df-4677-14d27f8e1946" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Hosting.DomainServiceHost">
      <topicdata name="DomainServiceHost" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Hosting.DomainServiceHost" />
      <apidata name="DomainServiceHost" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.DomainServices.Hosting.DomainServiceHost.AddServiceEndpoint">
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
            <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="endpoint">
                <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel" />
              <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
            </containers>
          </element>
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)">
            <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="implementedContract">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="binding">
                <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
              </parameter>
              <parameter name="address">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
            </returns>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel" />
              <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
            </containers>
          </element>
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)">
            <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="implementedContract">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="binding">
                <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
              </parameter>
              <parameter name="address">
                <type api="T:System.Uri" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
            </returns>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel" />
              <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
            </containers>
          </element>
          <element api="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)">
            <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="implementedContract">
                <type api="T:System.Type" ref="true" />
              </parameter>
              <parameter name="binding">
                <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
              </parameter>
              <parameter name="address">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
            </returns>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel" />
              <type api="T:System.ServiceModel.ServiceHost" ref="true" />
            </containers>
          </element>
          <element api="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)">
            <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="implementedContract">
                <type api="T:System.Type" ref="true" />
              </parameter>
              <parameter name="binding">
                <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
              </parameter>
              <parameter name="address">
                <type api="T:System.Uri" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
            </returns>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel" />
              <type api="T:System.ServiceModel.ServiceHost" ref="true" />
            </containers>
          </element>
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
            <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="implementedContract">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="binding">
                <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
              </parameter>
              <parameter name="address">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="listenUri">
                <type api="T:System.Uri" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
            </returns>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel" />
              <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
            </containers>
          </element>
          <element api="M:System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
            <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="implementedContract">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="binding">
                <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
              </parameter>
              <parameter name="address">
                <type api="T:System.Uri" ref="true" />
              </parameter>
              <parameter name="listenUri">
                <type api="T:System.Uri" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
            </returns>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel" />
              <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
            </containers>
          </element>
          <element api="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)">
            <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="implementedContract">
                <type api="T:System.Type" ref="true" />
              </parameter>
              <parameter name="binding">
                <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
              </parameter>
              <parameter name="address">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="listenUri">
                <type api="T:System.Uri" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
            </returns>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel" />
              <type api="T:System.ServiceModel.ServiceHost" ref="true" />
            </containers>
          </element>
          <element api="M:System.ServiceModel.ServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)">
            <apidata name="AddServiceEndpoint" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="implementedContract">
                <type api="T:System.Type" ref="true" />
              </parameter>
              <parameter name="binding">
                <type api="T:System.ServiceModel.Channels.Binding" ref="true" />
              </parameter>
              <parameter name="address">
                <type api="T:System.Uri" ref="true" />
              </parameter>
              <parameter name="listenUri">
                <type api="T:System.Uri" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
            </returns>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel" />
              <type api="T:System.ServiceModel.ServiceHost" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:System.ServiceModel.DomainServices.Hosting.DomainServiceHost.InitializeDescription">
          <element api="M:System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)">
            <apidata name="InitializeDescription" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="baseAddresses">
                <type api="T:System.ServiceModel.UriSchemeKeyedCollection" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel" />
              <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
            </containers>
          </element>
          <element api="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Object,System.ServiceModel.UriSchemeKeyedCollection)">
            <apidata name="InitializeDescription" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="singletonInstance">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="baseAddresses">
                <type api="T:System.ServiceModel.UriSchemeKeyedCollection" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel" />
              <type api="T:System.ServiceModel.ServiceHost" ref="true" />
            </containers>
          </element>
          <element api="M:System.ServiceModel.ServiceHost.InitializeDescription(System.Type,System.ServiceModel.UriSchemeKeyedCollection)">
            <apidata name="InitializeDescription" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="serviceType">
                <type api="T:System.Type" ref="true" />
              </parameter>
              <parameter name="baseAddresses">
                <type api="T:System.ServiceModel.UriSchemeKeyedCollection" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel" />
              <type api="T:System.ServiceModel.ServiceHost" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.ServiceModel.ServiceHost.OnClosed">
          <apidata name="OnClosed" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.ServiceModel.ServiceHostBase.OnClosed">
              <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
            </member>
          </overrides>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHost" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)">
          <apidata name="AddBaseAddress" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="baseAddress">
              <type api="T:System.Uri" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)">
          <apidata name="SetEndpointAddress" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="endpoint">
              <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
            </parameter>
            <parameter name="relativeAddress">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ServiceHostBase.AddDefaultEndpoints">
          <apidata name="AddDefaultEndpoints" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose">
          <apidata name="Dispose" group="member" subgroup="method" />
          <memberdata visibility="private" />
          <proceduredata virtual="true" final="true" eii="true" />
          <implements>
            <member api="M:System.IDisposable.Dispose">
              <type api="T:System.IDisposable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ServiceHostBase.InitializeRuntime">
          <apidata name="InitializeRuntime" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)">
          <apidata name="IncrementManualFlowControlLimit" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="incrementBy">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)">
          <apidata name="LoadConfigurationSection" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="serviceSection">
              <type api="T:System.ServiceModel.Configuration.ServiceElement" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ServiceHostBase.OnAbort">
          <apidata name="OnAbort" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.ServiceModel.Channels.CommunicationObject.OnAbort">
              <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
            </member>
          </overrides>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <apidata name="OnBeginClose" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
              <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="timeout">
              <type api="T:System.TimeSpan" ref="false" />
            </parameter>
            <parameter name="callback">
              <type api="T:System.AsyncCallback" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IAsyncResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <apidata name="OnBeginOpen" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
              <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="timeout">
              <type api="T:System.TimeSpan" ref="false" />
            </parameter>
            <parameter name="callback">
              <type api="T:System.AsyncCallback" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IAsyncResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)">
          <apidata name="OnClose" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
              <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="timeout">
              <type api="T:System.TimeSpan" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)">
          <apidata name="OnEndClose" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
              <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="result">
              <type api="T:System.IAsyncResult" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)">
          <apidata name="OnEndOpen" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
              <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="result">
              <type api="T:System.IAsyncResult" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)">
          <apidata name="OnOpen" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
              <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="timeout">
              <type api="T:System.TimeSpan" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ServiceHostBase.OnOpened">
          <apidata name="OnOpened" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.ServiceModel.Channels.CommunicationObject.OnOpened">
              <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
            </member>
          </overrides>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters">
          <apidata name="ReleasePerformanceCounters" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort">
          <apidata name="Abort" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.ServiceModel.ICommunicationObject.Abort">
              <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ServiceModel.DomainServices.Hosting.DomainServiceHost.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
            <apidata name="BeginClose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="callback">
                <type api="T:System.AsyncCallback" ref="true" />
              </parameter>
              <parameter name="state">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.IAsyncResult" ref="true" />
            </returns>
            <implements>
              <member api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
                <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel.Channels" />
              <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
            </containers>
          </element>
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
            <apidata name="BeginClose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="timeout">
                <type api="T:System.TimeSpan" ref="false" />
              </parameter>
              <parameter name="callback">
                <type api="T:System.AsyncCallback" ref="true" />
              </parameter>
              <parameter name="state">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.IAsyncResult" ref="true" />
            </returns>
            <implements>
              <member api="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
                <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel.Channels" />
              <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:System.ServiceModel.DomainServices.Hosting.DomainServiceHost.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
            <apidata name="BeginOpen" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="callback">
                <type api="T:System.AsyncCallback" ref="true" />
              </parameter>
              <parameter name="state">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.IAsyncResult" ref="true" />
            </returns>
            <implements>
              <member api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
                <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel.Channels" />
              <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
            </containers>
          </element>
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
            <apidata name="BeginOpen" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="timeout">
                <type api="T:System.TimeSpan" ref="false" />
              </parameter>
              <parameter name="callback">
                <type api="T:System.AsyncCallback" ref="true" />
              </parameter>
              <parameter name="state">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.IAsyncResult" ref="true" />
            </returns>
            <implements>
              <member api="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
                <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel.Channels" />
              <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:System.ServiceModel.DomainServices.Hosting.DomainServiceHost.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close">
            <apidata name="Close" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.ServiceModel.ICommunicationObject.Close">
                <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel.Channels" />
              <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
            </containers>
          </element>
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
            <apidata name="Close" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="timeout">
                <type api="T:System.TimeSpan" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)">
                <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel.Channels" />
              <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
          <apidata name="EndClose" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="result">
              <type api="T:System.IAsyncResult" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)">
              <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
          <apidata name="EndOpen" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="result">
              <type api="T:System.IAsyncResult" ref="true" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)">
              <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault">
          <apidata name="Fault" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ServiceModel.DomainServices.Hosting.DomainServiceHost.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open">
            <apidata name="Open" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.ServiceModel.ICommunicationObject.Open">
                <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel.Channels" />
              <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
            </containers>
          </element>
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
            <apidata name="Open" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <parameters>
              <parameter name="timeout">
                <type api="T:System.TimeSpan" ref="false" />
              </parameter>
            </parameters>
            <implements>
              <member api="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)">
                <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel.Channels" />
              <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing">
          <apidata name="OnClosing" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted">
          <apidata name="OnFaulted" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpening">
          <apidata name="OnOpening" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType">
          <apidata name="GetCommunicationObjectType" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed">
          <apidata name="ThrowIfDisposed" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable">
          <apidata name="ThrowIfDisposedOrImmutable" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen">
          <apidata name="ThrowIfDisposedOrNotOpen" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.DomainServices.Hosting.DomainServiceHost.AddDefaultBehaviors" />
        <element api="M:System.ServiceModel.DomainServices.Hosting.DomainServiceHost.ApplyConfiguration" />
        <element api="M:System.ServiceModel.DomainServices.Hosting.DomainServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)" />
        <element api="M:System.ServiceModel.DomainServices.Hosting.DomainServiceHost.GetService(System.Type)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceHost" />
      </containers>
      <file name="0d37073a-e5b9-5502-3e04-9d63c3cd2937" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Hosting.DomainServiceHost">
      <topicdata name="DomainServiceHost" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Hosting.DomainServiceHost" />
      <apidata name="DomainServiceHost" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.ServiceHost.SingletonInstance">
          <apidata name="SingletonInstance" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_SingletonInstance" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHost" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.ServiceHostBase.Authorization">
          <apidata name="Authorization" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Authorization" />
          <returns>
            <type api="T:System.ServiceModel.Description.ServiceAuthorizationBehavior" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.ServiceHostBase.Authentication">
          <apidata name="Authentication" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Authentication" />
          <returns>
            <type api="T:System.ServiceModel.Description.ServiceAuthenticationBehavior" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.ServiceHostBase.BaseAddresses">
          <apidata name="BaseAddresses" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_BaseAddresses" />
          <returns>
            <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
              <specialization>
                <type api="T:System.Uri" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.ServiceHostBase.ChannelDispatchers">
          <apidata name="ChannelDispatchers" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ChannelDispatchers" />
          <returns>
            <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcherCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.ServiceHostBase.CloseTimeout">
          <apidata name="CloseTimeout" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_CloseTimeout" />
          <setter name="set_CloseTimeout" />
          <returns>
            <type api="T:System.TimeSpan" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.ServiceHostBase.Credentials">
          <apidata name="Credentials" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Credentials" />
          <returns>
            <type api="T:System.ServiceModel.Description.ServiceCredentials" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.ServiceHostBase.DefaultCloseTimeout">
          <apidata name="DefaultCloseTimeout" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout">
              <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_DefaultCloseTimeout" />
          <returns>
            <type api="T:System.TimeSpan" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.ServiceHostBase.DefaultOpenTimeout">
          <apidata name="DefaultOpenTimeout" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout">
              <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_DefaultOpenTimeout" />
          <returns>
            <type api="T:System.TimeSpan" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.ServiceHostBase.Description">
          <apidata name="Description" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_Description" />
          <returns>
            <type api="T:System.ServiceModel.Description.ServiceDescription" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.ServiceHostBase.Extensions">
          <apidata name="Extensions" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_Extensions" />
          <returns>
            <type api="T:System.ServiceModel.IExtensionCollection`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="P:System.ServiceModel.IExtensibleObject`1.Extensions">
              <type api="T:System.ServiceModel.IExtensibleObject`1" ref="true">
                <specialization>
                  <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
                </specialization>
              </type>
            </member>
          </implements>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.ServiceHostBase.ImplementedContracts">
          <apidata name="ImplementedContracts" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ImplementedContracts" />
          <returns>
            <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.ServiceModel.Description.ContractDescription" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit">
          <apidata name="ManualFlowControlLimit" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ManualFlowControlLimit" />
          <setter name="set_ManualFlowControlLimit" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.ServiceHostBase.OpenTimeout">
          <apidata name="OpenTimeout" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_OpenTimeout" />
          <setter name="set_OpenTimeout" />
          <returns>
            <type api="T:System.TimeSpan" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed">
          <apidata name="IsDisposed" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsDisposed" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State">
          <apidata name="State" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_State" />
          <returns>
            <type api="T:System.ServiceModel.CommunicationState" ref="false" />
          </returns>
          <implements>
            <member api="P:System.ServiceModel.ICommunicationObject.State">
              <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock">
          <apidata name="ThisLock" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ThisLock" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceHost" />
      </containers>
      <file name="d311da97-62ab-760b-b3f3-73132f50700d" />
    </api>
    <api id="Events.T:System.ServiceModel.DomainServices.Hosting.DomainServiceHost">
      <topicdata name="DomainServiceHost" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.DomainServices.Hosting.DomainServiceHost" />
      <apidata name="DomainServiceHost" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.ServiceHostBase.UnknownMessageReceived">
          <apidata name="UnknownMessageReceived" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_UnknownMessageReceived" />
          <remover name="remove_UnknownMessageReceived" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.UnknownMessageReceivedEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.ServiceModel.UnknownMessageReceivedEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel" />
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </containers>
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed">
          <apidata name="Closed" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Closed" />
          <remover name="remove_Closed" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.ServiceModel.ICommunicationObject.Closed">
              <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing">
          <apidata name="Closing" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Closing" />
          <remover name="remove_Closing" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.ServiceModel.ICommunicationObject.Closing">
              <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted">
          <apidata name="Faulted" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Faulted" />
          <remover name="remove_Faulted" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.ServiceModel.ICommunicationObject.Faulted">
              <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened">
          <apidata name="Opened" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Opened" />
          <remover name="remove_Opened" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.ServiceModel.ICommunicationObject.Opened">
              <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening">
          <apidata name="Opening" group="member" subgroup="event" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <eventdata add="true" remove="true" />
          <adder name="add_Opening" />
          <remover name="remove_Opening" />
          <eventhandler>
            <type api="T:System.EventHandler" ref="true" />
          </eventhandler>
          <eventargs>
            <type api="T:System.EventArgs" ref="true" />
          </eventargs>
          <implements>
            <member api="E:System.ServiceModel.ICommunicationObject.Opening">
              <type api="T:System.ServiceModel.ICommunicationObject" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Channels" />
            <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceHost" />
      </containers>
      <file name="b32d42d7-5b7c-15d1-41d6-62c85bd08803" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Hosting.DomainServiceHost.#ctor(System.Type,System.Uri[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="domainServiceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="baseAddresses" params="true">
          <arrayOf rank="1">
            <type api="T:System.Uri" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceHost" ref="true" />
      </containers>
      <file name="c7b68b7d-8601-9d24-f956-69f1cc3abd12" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Hosting.DomainServiceHost.AddDefaultBehaviors">
      <topicdata group="api" />
      <apidata name="AddDefaultBehaviors" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceHost" ref="true" />
      </containers>
      <file name="2e71be74-14e6-63a3-a5cf-0b5fca2bbb89" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Hosting.DomainServiceHost.ApplyConfiguration">
      <topicdata group="api" />
      <apidata name="ApplyConfiguration" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.ServiceHost.ApplyConfiguration">
          <type api="T:System.ServiceModel.ServiceHost" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceHost" ref="true" />
      </containers>
      <file name="2267b204-7e5c-11a0-9e3d-c01315102f8d" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Hosting.DomainServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
      <topicdata group="api" />
      <apidata name="CreateDescription" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.ServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)">
          <type api="T:System.ServiceModel.ServiceHost" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="implementedContracts" out="true">
          <referenceTo>
            <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.ServiceModel.Description.ContractDescription" ref="true" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Description.ServiceDescription" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceHost" ref="true" />
      </containers>
      <file name="40688bbf-9b94-93a7-a19b-ad264eb4b4c9" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Hosting.DomainServiceHost.GetService(System.Type)">
      <topicdata group="api" />
      <apidata name="GetService" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IServiceProvider.GetService(System.Type)">
          <type api="T:System.IServiceProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceHost" ref="true" />
      </containers>
      <file name="27f4a011-aa6c-1585-88a0-78d6890ab2b4" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Hosting.DomainServiceHostFactory">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Hosting.DomainServiceHostFactory" />
      <apidata name="DomainServiceHostFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Hosting.DomainServiceHostFactory.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Activation.ServiceHostFactory" ref="true" />
          <type api="T:System.ServiceModel.Activation.ServiceHostFactoryBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
      </containers>
      <file name="bcc7cfae-5a6d-950f-fb1d-9adc1775d3e9" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Hosting.DomainServiceHostFactory">
      <topicdata name="DomainServiceHostFactory" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Hosting.DomainServiceHostFactory" />
      <apidata name="DomainServiceHostFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Hosting.DomainServiceHostFactory.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.DomainServices.Hosting.DomainServiceHostFactory.CreateServiceHost">
          <element api="M:System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.String,System.Uri[])">
            <apidata name="CreateServiceHost" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <overrides>
              <member api="M:System.ServiceModel.Activation.ServiceHostFactoryBase.CreateServiceHost(System.String,System.Uri[])">
                <type api="T:System.ServiceModel.Activation.ServiceHostFactoryBase" ref="true" />
              </member>
            </overrides>
            <parameters>
              <parameter name="constructorString">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="baseAddresses">
                <arrayOf rank="1">
                  <type api="T:System.Uri" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
            </returns>
            <containers>
              <library assembly="System.ServiceModel.Activation" module="System.ServiceModel.Activation" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel.Activation" />
              <type api="T:System.ServiceModel.Activation.ServiceHostFactory" ref="true" />
            </containers>
          </element>
          <element api="M:System.ServiceModel.DomainServices.Hosting.DomainServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])" />
        </element>
        <element api="M:System.ServiceModel.DomainServices.Hosting.DomainServiceHostFactory.#ctor" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceHostFactory" />
      </containers>
      <file name="836f6f03-c404-cdfa-eeac-4965688ca685" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Hosting.DomainServiceHostFactory">
      <topicdata name="DomainServiceHostFactory" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Hosting.DomainServiceHostFactory" />
      <apidata name="DomainServiceHostFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Hosting.DomainServiceHostFactory.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.DomainServices.Hosting.DomainServiceHostFactory.CreateServiceHost">
          <element api="M:System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.String,System.Uri[])">
            <apidata name="CreateServiceHost" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" />
            <overrides>
              <member api="M:System.ServiceModel.Activation.ServiceHostFactoryBase.CreateServiceHost(System.String,System.Uri[])">
                <type api="T:System.ServiceModel.Activation.ServiceHostFactoryBase" ref="true" />
              </member>
            </overrides>
            <parameters>
              <parameter name="constructorString">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="baseAddresses">
                <arrayOf rank="1">
                  <type api="T:System.Uri" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
            </returns>
            <containers>
              <library assembly="System.ServiceModel.Activation" module="System.ServiceModel.Activation" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.ServiceModel.Activation" />
              <type api="T:System.ServiceModel.Activation.ServiceHostFactory" ref="true" />
            </containers>
          </element>
          <element api="M:System.ServiceModel.DomainServices.Hosting.DomainServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceHostFactory" />
      </containers>
      <file name="4236cdd6-a7dd-3a5a-2483-7e804475faeb" />
    </api>
    <api id="Overload:System.ServiceModel.DomainServices.Hosting.DomainServiceHostFactory.CreateServiceHost">
      <topicdata name="CreateServiceHost" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Hosting.DomainServiceHostFactory" />
      <apidata name="CreateServiceHost" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.String,System.Uri[])">
          <apidata name="CreateServiceHost" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.ServiceModel.Activation.ServiceHostFactoryBase.CreateServiceHost(System.String,System.Uri[])">
              <type api="T:System.ServiceModel.Activation.ServiceHostFactoryBase" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="constructorString">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="baseAddresses">
              <arrayOf rank="1">
                <type api="T:System.Uri" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ServiceModel.Activation" module="System.ServiceModel.Activation" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ServiceModel.Activation" />
            <type api="T:System.ServiceModel.Activation.ServiceHostFactory" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.DomainServices.Hosting.DomainServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceHostFactory" ref="true" />
      </containers>
      <file name="9b1e325c-a78e-8c89-519d-96e16859e800" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Hosting.DomainServiceHostFactory.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceHostFactory" ref="true" />
      </containers>
      <file name="a2c7cd66-c52b-9666-35ec-af7fb95a538c" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Hosting.DomainServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])">
      <topicdata group="api" />
      <apidata name="CreateServiceHost" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.DomainServices.Hosting.DomainServiceHostFactory.CreateServiceHost" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])">
          <type api="T:System.ServiceModel.Activation.ServiceHostFactory" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serviceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="baseAddresses">
          <arrayOf rank="1">
            <type api="T:System.Uri" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.ServiceHost" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceHostFactory" ref="true" />
      </containers>
      <file name="501c69cc-8ae4-bd26-fa58-71f5ac11452c" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Hosting.DomainServiceHttpModule">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Hosting.DomainServiceHttpModule" />
      <apidata name="DomainServiceHttpModule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Hosting.DomainServiceHttpModule.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Web.IHttpModule" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
      </containers>
      <file name="4d1e46e4-6df4-f85e-15d7-03c51d2c96e1" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Hosting.DomainServiceHttpModule">
      <topicdata name="DomainServiceHttpModule" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Hosting.DomainServiceHttpModule" />
      <apidata name="DomainServiceHttpModule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Hosting.DomainServiceHttpModule.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Hosting.DomainServiceHttpModule.#ctor" />
        <element api="M:System.ServiceModel.DomainServices.Hosting.DomainServiceHttpModule.System#Web#IHttpModule#Dispose" />
        <element api="M:System.ServiceModel.DomainServices.Hosting.DomainServiceHttpModule.System#Web#IHttpModule#Init(System.Web.HttpApplication)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceHttpModule" />
      </containers>
      <file name="5fa27736-8f2c-414b-1123-341ff2e437dc" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Hosting.DomainServiceHttpModule">
      <topicdata name="DomainServiceHttpModule" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Hosting.DomainServiceHttpModule" />
      <apidata name="DomainServiceHttpModule" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Hosting.DomainServiceHttpModule.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Hosting.DomainServiceHttpModule.System#Web#IHttpModule#Dispose" />
        <element api="M:System.ServiceModel.DomainServices.Hosting.DomainServiceHttpModule.System#Web#IHttpModule#Init(System.Web.HttpApplication)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceHttpModule" />
      </containers>
      <file name="4aabf42a-6cdb-07cf-c564-07f504caa566" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Hosting.DomainServiceHttpModule.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceHttpModule" ref="true" />
      </containers>
      <file name="f2e5e807-6f63-d39e-929c-ae8fae326185" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Hosting.DomainServiceHttpModule.System#Web#IHttpModule#Dispose">
      <topicdata group="api" eiiName=".Dispose" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.Web.IHttpModule.Dispose">
          <type api="T:System.Web.IHttpModule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceHttpModule" ref="true" />
      </containers>
      <file name="a50ef335-320f-06cb-a153-542eebf819f6" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Hosting.DomainServiceHttpModule.System#Web#IHttpModule#Init(System.Web.HttpApplication)">
      <topicdata group="api" eiiName=".Init" />
      <apidata name="Init" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="application">
          <type api="T:System.Web.HttpApplication" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Web.IHttpModule.Init(System.Web.HttpApplication)">
          <type api="T:System.Web.IHttpModule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceHttpModule" ref="true" />
      </containers>
      <file name="a73a2ff2-e85f-210a-2524-ca046910a9a3" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Hosting.DomainServicesSection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Hosting.DomainServicesSection" />
      <apidata name="DomainServicesSection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Hosting.DomainServicesSection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationSection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
      </containers>
      <file name="a0064c02-6389-f67f-9658-9c36d6b899ea" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Hosting.DomainServicesSection">
      <topicdata name="DomainServicesSection" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Hosting.DomainServicesSection" />
      <apidata name="DomainServicesSection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Hosting.DomainServicesSection.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Configuration.ConfigurationSection.GetRuntimeObject">
          <apidata name="GetRuntimeObject" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationSection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationSection.IsModified">
          <apidata name="IsModified" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Configuration.ConfigurationElement.IsModified">
              <type api="T:System.Configuration.ConfigurationElement" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationSection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationSection.ResetModified">
          <apidata name="ResetModified" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Configuration.ConfigurationElement.ResetModified">
              <type api="T:System.Configuration.ConfigurationElement" ref="true" />
            </member>
          </overrides>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationSection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)">
          <apidata name="DeserializeSection" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="reader">
              <type api="T:System.Xml.XmlReader" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationSection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
          <apidata name="SerializeSection" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="parentElement">
              <type api="T:System.Configuration.ConfigurationElement" ref="true" />
            </parameter>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="saveMode">
              <type api="T:System.Configuration.ConfigurationSaveMode" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationSection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
          <apidata name="ShouldSerializePropertyInTargetVersion" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="property">
              <type api="T:System.Configuration.ConfigurationProperty" ref="true" />
            </parameter>
            <parameter name="propertyName">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="targetFramework">
              <type api="T:System.Runtime.Versioning.FrameworkName" ref="true" />
            </parameter>
            <parameter name="parentConfigurationElement">
              <type api="T:System.Configuration.ConfigurationElement" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationSection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
          <apidata name="ShouldSerializeElementInTargetVersion" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="element">
              <type api="T:System.Configuration.ConfigurationElement" ref="true" />
            </parameter>
            <parameter name="elementName">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="targetFramework">
              <type api="T:System.Runtime.Versioning.FrameworkName" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationSection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
          <apidata name="ShouldSerializeSectionInTargetVersion" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="targetFramework">
              <type api="T:System.Runtime.Versioning.FrameworkName" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationSection" ref="true" />
          </containers>
        </element>
        <element api="P:System.Configuration.ConfigurationSection.SectionInformation">
          <apidata name="SectionInformation" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_SectionInformation" />
          <returns>
            <type api="T:System.Configuration.SectionInformation" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationSection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.Init">
          <apidata name="Init" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly">
          <apidata name="IsReadOnly" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly">
          <apidata name="SetReadOnly" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)">
          <apidata name="ListErrors" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="errorList">
              <type api="T:System.Collections.IList" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)">
          <apidata name="Reset" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="parentElement">
              <type api="T:System.Configuration.ConfigurationElement" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="compareTo">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)">
          <apidata name="SetPropertyValue" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="prop">
              <type api="T:System.Configuration.ConfigurationProperty" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="ignoreLocks">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
          <apidata name="Unmerge" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="sourceElement">
              <type api="T:System.Configuration.ConfigurationElement" ref="true" />
            </parameter>
            <parameter name="parentElement">
              <type api="T:System.Configuration.ConfigurationElement" ref="true" />
            </parameter>
            <parameter name="saveMode">
              <type api="T:System.Configuration.ConfigurationSaveMode" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
          <apidata name="SerializeToXmlElement" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="writer">
              <type api="T:System.Xml.XmlWriter" ref="true" />
            </parameter>
            <parameter name="elementName">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
          <apidata name="SerializeElement" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="writer">
              <type api="T:System.Xml.XmlWriter" ref="true" />
            </parameter>
            <parameter name="serializeCollectionKey">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
          <apidata name="DeserializeElement" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="reader">
              <type api="T:System.Xml.XmlReader" ref="true" />
            </parameter>
            <parameter name="serializeCollectionKey">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)">
          <apidata name="OnRequiredPropertyNotFound" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize">
          <apidata name="PostDeserialize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)">
          <apidata name="PreSerialize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="writer">
              <type api="T:System.Xml.XmlWriter" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
          <apidata name="OnDeserializeUnrecognizedAttribute" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
          <apidata name="OnDeserializeUnrecognizedElement" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="elementName">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="reader">
              <type api="T:System.Xml.XmlReader" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)">
          <apidata name="GetTransformedTypeString" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="typeName">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)">
          <apidata name="GetTransformedAssemblyString" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="assemblyName">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes">
          <apidata name="LockAttributes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_LockAttributes" />
          <returns>
            <type api="T:System.Configuration.ConfigurationLockCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept">
          <apidata name="LockAllAttributesExcept" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_LockAllAttributesExcept" />
          <returns>
            <type api="T:System.Configuration.ConfigurationLockCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockElements">
          <apidata name="LockElements" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_LockElements" />
          <returns>
            <type api="T:System.Configuration.ConfigurationLockCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept">
          <apidata name="LockAllElementsExcept" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_LockAllElementsExcept" />
          <returns>
            <type api="T:System.Configuration.ConfigurationLockCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockItem">
          <apidata name="LockItem" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_LockItem" />
          <setter name="set_LockItem" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ServiceModel.DomainServices.Hosting.DomainServicesSection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)">
            <apidata name="Item" group="member" subgroup="property" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <propertydata get="true" set="true" />
            <getter name="get_Item" />
            <setter name="set_Item" />
            <parameters>
              <parameter name="prop">
                <type api="T:System.Configuration.ConfigurationProperty" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Object" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Configuration" />
              <type api="T:System.Configuration.ConfigurationElement" ref="true" />
            </containers>
          </element>
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)">
            <apidata name="Item" group="member" subgroup="property" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <propertydata get="true" set="true" />
            <getter name="get_Item" />
            <setter name="set_Item" />
            <parameters>
              <parameter name="propertyName">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Object" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Configuration" />
              <type api="T:System.Configuration.ConfigurationElement" ref="true" />
            </containers>
          </element>
        </element>
        <element api="P:System.Configuration.ConfigurationElement.Properties">
          <apidata name="Properties" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Properties" />
          <returns>
            <type api="T:System.Configuration.ConfigurationPropertyCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation">
          <apidata name="ElementInformation" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ElementInformation" />
          <returns>
            <type api="T:System.Configuration.ElementInformation" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext">
          <apidata name="EvaluationContext" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_EvaluationContext" />
          <returns>
            <type api="T:System.Configuration.ContextInformation" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty">
          <apidata name="ElementProperty" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_ElementProperty" />
          <returns>
            <type api="T:System.Configuration.ConfigurationElementProperty" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Configuration.ConfigurationElement.HasContext">
          <apidata name="HasContext" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_HasContext" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration">
          <apidata name="CurrentConfiguration" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_CurrentConfiguration" />
          <returns>
            <type api="T:System.Configuration.Configuration" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.DomainServices.Hosting.DomainServicesSection.#ctor" />
        <element api="P:System.ServiceModel.DomainServices.Hosting.DomainServicesSection.Endpoints" />
        <element api="M:System.ServiceModel.DomainServices.Hosting.DomainServicesSection.InitializeDefault" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServicesSection" />
      </containers>
      <file name="dde4c971-d0f3-c6d8-aa2a-f8511994054e" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Hosting.DomainServicesSection">
      <topicdata name="DomainServicesSection" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Hosting.DomainServicesSection" />
      <apidata name="DomainServicesSection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Hosting.DomainServicesSection.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Configuration.ConfigurationSection.GetRuntimeObject">
          <apidata name="GetRuntimeObject" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationSection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationSection.IsModified">
          <apidata name="IsModified" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Configuration.ConfigurationElement.IsModified">
              <type api="T:System.Configuration.ConfigurationElement" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationSection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationSection.ResetModified">
          <apidata name="ResetModified" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Configuration.ConfigurationElement.ResetModified">
              <type api="T:System.Configuration.ConfigurationElement" ref="true" />
            </member>
          </overrides>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationSection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)">
          <apidata name="DeserializeSection" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="reader">
              <type api="T:System.Xml.XmlReader" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationSection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
          <apidata name="SerializeSection" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="parentElement">
              <type api="T:System.Configuration.ConfigurationElement" ref="true" />
            </parameter>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="saveMode">
              <type api="T:System.Configuration.ConfigurationSaveMode" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationSection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
          <apidata name="ShouldSerializePropertyInTargetVersion" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="property">
              <type api="T:System.Configuration.ConfigurationProperty" ref="true" />
            </parameter>
            <parameter name="propertyName">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="targetFramework">
              <type api="T:System.Runtime.Versioning.FrameworkName" ref="true" />
            </parameter>
            <parameter name="parentConfigurationElement">
              <type api="T:System.Configuration.ConfigurationElement" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationSection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
          <apidata name="ShouldSerializeElementInTargetVersion" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="element">
              <type api="T:System.Configuration.ConfigurationElement" ref="true" />
            </parameter>
            <parameter name="elementName">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="targetFramework">
              <type api="T:System.Runtime.Versioning.FrameworkName" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationSection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
          <apidata name="ShouldSerializeSectionInTargetVersion" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="targetFramework">
              <type api="T:System.Runtime.Versioning.FrameworkName" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationSection" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.Init">
          <apidata name="Init" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly">
          <apidata name="IsReadOnly" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly">
          <apidata name="SetReadOnly" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)">
          <apidata name="ListErrors" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="errorList">
              <type api="T:System.Collections.IList" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)">
          <apidata name="Reset" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="parentElement">
              <type api="T:System.Configuration.ConfigurationElement" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="compareTo">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)">
          <apidata name="SetPropertyValue" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="prop">
              <type api="T:System.Configuration.ConfigurationProperty" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
            <parameter name="ignoreLocks">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
          <apidata name="Unmerge" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="sourceElement">
              <type api="T:System.Configuration.ConfigurationElement" ref="true" />
            </parameter>
            <parameter name="parentElement">
              <type api="T:System.Configuration.ConfigurationElement" ref="true" />
            </parameter>
            <parameter name="saveMode">
              <type api="T:System.Configuration.ConfigurationSaveMode" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
          <apidata name="SerializeToXmlElement" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="writer">
              <type api="T:System.Xml.XmlWriter" ref="true" />
            </parameter>
            <parameter name="elementName">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
          <apidata name="SerializeElement" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="writer">
              <type api="T:System.Xml.XmlWriter" ref="true" />
            </parameter>
            <parameter name="serializeCollectionKey">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
          <apidata name="DeserializeElement" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="reader">
              <type api="T:System.Xml.XmlReader" ref="true" />
            </parameter>
            <parameter name="serializeCollectionKey">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)">
          <apidata name="OnRequiredPropertyNotFound" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize">
          <apidata name="PostDeserialize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)">
          <apidata name="PreSerialize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="writer">
              <type api="T:System.Xml.XmlWriter" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
          <apidata name="OnDeserializeUnrecognizedAttribute" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="name">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="value">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
          <apidata name="OnDeserializeUnrecognizedElement" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="elementName">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="reader">
              <type api="T:System.Xml.XmlReader" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)">
          <apidata name="GetTransformedTypeString" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="typeName">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)">
          <apidata name="GetTransformedAssemblyString" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="assemblyName">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.DomainServices.Hosting.DomainServicesSection.InitializeDefault" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServicesSection" />
      </containers>
      <file name="440462f9-198b-a86c-8d82-a5e229aecba2" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Hosting.DomainServicesSection">
      <topicdata name="DomainServicesSection" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Hosting.DomainServicesSection" />
      <apidata name="DomainServicesSection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Hosting.DomainServicesSection.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationSection.SectionInformation">
          <apidata name="SectionInformation" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_SectionInformation" />
          <returns>
            <type api="T:System.Configuration.SectionInformation" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationSection" ref="true" />
          </containers>
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes">
          <apidata name="LockAttributes" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_LockAttributes" />
          <returns>
            <type api="T:System.Configuration.ConfigurationLockCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept">
          <apidata name="LockAllAttributesExcept" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_LockAllAttributesExcept" />
          <returns>
            <type api="T:System.Configuration.ConfigurationLockCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockElements">
          <apidata name="LockElements" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_LockElements" />
          <returns>
            <type api="T:System.Configuration.ConfigurationLockCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept">
          <apidata name="LockAllElementsExcept" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_LockAllElementsExcept" />
          <returns>
            <type api="T:System.Configuration.ConfigurationLockCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockItem">
          <apidata name="LockItem" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_LockItem" />
          <setter name="set_LockItem" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ServiceModel.DomainServices.Hosting.DomainServicesSection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)">
            <apidata name="Item" group="member" subgroup="property" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <propertydata get="true" set="true" />
            <getter name="get_Item" />
            <setter name="set_Item" />
            <parameters>
              <parameter name="prop">
                <type api="T:System.Configuration.ConfigurationProperty" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Object" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Configuration" />
              <type api="T:System.Configuration.ConfigurationElement" ref="true" />
            </containers>
          </element>
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)">
            <apidata name="Item" group="member" subgroup="property" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <propertydata get="true" set="true" />
            <getter name="get_Item" />
            <setter name="set_Item" />
            <parameters>
              <parameter name="propertyName">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Object" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Configuration" />
              <type api="T:System.Configuration.ConfigurationElement" ref="true" />
            </containers>
          </element>
        </element>
        <element api="P:System.Configuration.ConfigurationElement.Properties">
          <apidata name="Properties" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Properties" />
          <returns>
            <type api="T:System.Configuration.ConfigurationPropertyCollection" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation">
          <apidata name="ElementInformation" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ElementInformation" />
          <returns>
            <type api="T:System.Configuration.ElementInformation" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext">
          <apidata name="EvaluationContext" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_EvaluationContext" />
          <returns>
            <type api="T:System.Configuration.ContextInformation" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty">
          <apidata name="ElementProperty" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_ElementProperty" />
          <returns>
            <type api="T:System.Configuration.ConfigurationElementProperty" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Configuration.ConfigurationElement.HasContext">
          <apidata name="HasContext" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_HasContext" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration">
          <apidata name="CurrentConfiguration" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_CurrentConfiguration" />
          <returns>
            <type api="T:System.Configuration.Configuration" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Configuration" module="System.Configuration" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Configuration" />
            <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          </containers>
        </element>
        <element api="P:System.ServiceModel.DomainServices.Hosting.DomainServicesSection.Endpoints" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServicesSection" />
      </containers>
      <file name="2ee879f0-d6bf-5f55-6b73-cac41793ece8" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Hosting.DomainServicesSection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServicesSection" ref="true" />
      </containers>
      <file name="dc79b85d-bdda-502f-6c7c-445990ce0fb4" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Hosting.DomainServicesSection.Endpoints">
      <topicdata group="api" />
      <apidata name="Endpoints" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Endpoints" />
      <returns>
        <type api="T:System.Configuration.ProviderSettingsCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServicesSection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>endpoints</value>
          </argument>
        </attribute>
      </attributes>
      <file name="f36b31c3-7265-77e1-86ed-bb5bd42cc738" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Hosting.DomainServicesSection.InitializeDefault">
      <topicdata group="api" />
      <apidata name="InitializeDefault" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElement.InitializeDefault">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServicesSection" ref="true" />
      </containers>
      <file name="6f72200d-3c72-5aab-da12-7ea262440934" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Hosting.EnableClientAccessAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Hosting.EnableClientAccessAttribute" />
      <apidata name="EnableClientAccessAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Hosting.EnableClientAccessAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="414c40d4-b35e-d9c4-ccfa-3370f21ec880" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Hosting.EnableClientAccessAttribute">
      <topicdata name="EnableClientAccessAttribute" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Hosting.EnableClientAccessAttribute" />
      <apidata name="EnableClientAccessAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Hosting.EnableClientAccessAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Hosting.EnableClientAccessAttribute.#ctor" />
        <element api="P:System.ServiceModel.DomainServices.Hosting.EnableClientAccessAttribute.RequiresSecureEndpoint" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.EnableClientAccessAttribute" />
      </containers>
      <file name="101a52fd-3db6-b66f-63a5-a66638c519de" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Hosting.EnableClientAccessAttribute">
      <topicdata name="EnableClientAccessAttribute" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Hosting.EnableClientAccessAttribute" />
      <apidata name="EnableClientAccessAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Hosting.EnableClientAccessAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.EnableClientAccessAttribute" />
      </containers>
      <file name="ece93b07-a535-a244-b847-02340d03db4c" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Hosting.EnableClientAccessAttribute">
      <topicdata name="EnableClientAccessAttribute" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Hosting.EnableClientAccessAttribute" />
      <apidata name="EnableClientAccessAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Hosting.EnableClientAccessAttribute.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Hosting.EnableClientAccessAttribute.RequiresSecureEndpoint" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.EnableClientAccessAttribute" />
      </containers>
      <file name="809ad013-a217-3e94-0689-7ab63c7269ab" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Hosting.EnableClientAccessAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.EnableClientAccessAttribute" ref="true" />
      </containers>
      <file name="6de3df5a-c74d-0cdc-07ff-af1d285b6922" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Hosting.EnableClientAccessAttribute.RequiresSecureEndpoint">
      <topicdata group="api" />
      <apidata name="RequiresSecureEndpoint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RequiresSecureEndpoint" />
      <setter name="set_RequiresSecureEndpoint" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.EnableClientAccessAttribute" ref="true" />
      </containers>
      <file name="c5f87de3-5b4f-62c6-b600-e38bbaeed5a1" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Hosting.ODataEndpointFactory">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Hosting.ODataEndpointFactory" />
      <apidata name="ODataEndpointFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Hosting.ODataEndpointFactory.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting.OData" module="System.ServiceModel.DomainServices.Hosting.OData" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
      </containers>
      <file name="5098aa34-02cb-ec87-db1a-33bd6d4b2bc9" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Hosting.ODataEndpointFactory">
      <topicdata name="ODataEndpointFactory" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Hosting.ODataEndpointFactory" />
      <apidata name="ODataEndpointFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Hosting.ODataEndpointFactory.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory.Name" />
        <element api="P:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory.Parameters" />
        <element api="M:System.ServiceModel.DomainServices.Hosting.ODataEndpointFactory.#ctor" />
        <element api="M:System.ServiceModel.DomainServices.Hosting.ODataEndpointFactory.CreateEndpoints(System.ServiceModel.DomainServices.Server.DomainServiceDescription,System.ServiceModel.DomainServices.Hosting.DomainServiceHost)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting.OData" module="System.ServiceModel.DomainServices.Hosting.OData" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.ODataEndpointFactory" />
      </containers>
      <file name="dd718d06-7348-8f17-f220-b1419fe84291" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Hosting.ODataEndpointFactory">
      <topicdata name="ODataEndpointFactory" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Hosting.ODataEndpointFactory" />
      <apidata name="ODataEndpointFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Hosting.ODataEndpointFactory.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Hosting.ODataEndpointFactory.CreateEndpoints(System.ServiceModel.DomainServices.Server.DomainServiceDescription,System.ServiceModel.DomainServices.Hosting.DomainServiceHost)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting.OData" module="System.ServiceModel.DomainServices.Hosting.OData" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.ODataEndpointFactory" />
      </containers>
      <file name="f59700c4-1d92-77ec-9f64-b030d5d714d1" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Hosting.ODataEndpointFactory">
      <topicdata name="ODataEndpointFactory" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Hosting.ODataEndpointFactory" />
      <apidata name="ODataEndpointFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Hosting.ODataEndpointFactory.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory.Name" />
        <element api="P:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory.Parameters" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting.OData" module="System.ServiceModel.DomainServices.Hosting.OData" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.ODataEndpointFactory" />
      </containers>
      <file name="78a5bd88-21e6-3ea9-da54-b2c6bb8847d0" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Hosting.ODataEndpointFactory.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting.OData" module="System.ServiceModel.DomainServices.Hosting.OData" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.ODataEndpointFactory" ref="true" />
      </containers>
      <file name="d0df9b8f-031a-237a-07ba-454c34950dad" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Hosting.ODataEndpointFactory.CreateEndpoints(System.ServiceModel.DomainServices.Server.DomainServiceDescription,System.ServiceModel.DomainServices.Hosting.DomainServiceHost)">
      <topicdata group="api" />
      <apidata name="CreateEndpoints" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory.CreateEndpoints(System.ServiceModel.DomainServices.Server.DomainServiceDescription,System.ServiceModel.DomainServices.Hosting.DomainServiceHost)">
          <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="description">
          <type api="T:System.ServiceModel.DomainServices.Server.DomainServiceDescription" ref="true" />
        </parameter>
        <parameter name="serviceHost">
          <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceHost" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting.OData" module="System.ServiceModel.DomainServices.Hosting.OData" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.ODataEndpointFactory" ref="true" />
      </containers>
      <file name="a2c7e61f-1bcd-0ee1-5fd9-0818f885b187" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Hosting.PoxBinaryEndpointFactory">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Hosting.PoxBinaryEndpointFactory" />
      <apidata name="PoxBinaryEndpointFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Hosting.PoxBinaryEndpointFactory.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
      </containers>
      <file name="f6648735-04b7-a822-7781-0e5be4568bb2" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Hosting.PoxBinaryEndpointFactory">
      <topicdata name="PoxBinaryEndpointFactory" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Hosting.PoxBinaryEndpointFactory" />
      <apidata name="PoxBinaryEndpointFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Hosting.PoxBinaryEndpointFactory.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory.Name" />
        <element api="P:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory.Parameters" />
        <element api="M:System.ServiceModel.DomainServices.Hosting.PoxBinaryEndpointFactory.#ctor" />
        <element api="M:System.ServiceModel.DomainServices.Hosting.PoxBinaryEndpointFactory.CreateEndpoints(System.ServiceModel.DomainServices.Server.DomainServiceDescription,System.ServiceModel.DomainServices.Hosting.DomainServiceHost)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.PoxBinaryEndpointFactory" />
      </containers>
      <file name="f224ea6e-ae2b-4fe4-9035-f27e6806a358" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Hosting.PoxBinaryEndpointFactory">
      <topicdata name="PoxBinaryEndpointFactory" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Hosting.PoxBinaryEndpointFactory" />
      <apidata name="PoxBinaryEndpointFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Hosting.PoxBinaryEndpointFactory.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Hosting.PoxBinaryEndpointFactory.CreateEndpoints(System.ServiceModel.DomainServices.Server.DomainServiceDescription,System.ServiceModel.DomainServices.Hosting.DomainServiceHost)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.PoxBinaryEndpointFactory" />
      </containers>
      <file name="e7dd4d8b-1796-4c22-f643-b368efe4eb14" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Hosting.PoxBinaryEndpointFactory">
      <topicdata name="PoxBinaryEndpointFactory" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Hosting.PoxBinaryEndpointFactory" />
      <apidata name="PoxBinaryEndpointFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Hosting.PoxBinaryEndpointFactory.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory.Name" />
        <element api="P:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory.Parameters" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.PoxBinaryEndpointFactory" />
      </containers>
      <file name="9db2fee1-e37e-020d-313e-fe9290fed251" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Hosting.PoxBinaryEndpointFactory.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.PoxBinaryEndpointFactory" ref="true" />
      </containers>
      <file name="0f054138-fbbc-6ac0-0013-720ccd633589" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Hosting.PoxBinaryEndpointFactory.CreateEndpoints(System.ServiceModel.DomainServices.Server.DomainServiceDescription,System.ServiceModel.DomainServices.Hosting.DomainServiceHost)">
      <topicdata group="api" />
      <apidata name="CreateEndpoints" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory.CreateEndpoints(System.ServiceModel.DomainServices.Server.DomainServiceDescription,System.ServiceModel.DomainServices.Hosting.DomainServiceHost)">
          <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceEndpointFactory" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="description">
          <type api="T:System.ServiceModel.DomainServices.Server.DomainServiceDescription" ref="true" />
        </parameter>
        <parameter name="serviceHost">
          <type api="T:System.ServiceModel.DomainServices.Hosting.DomainServiceHost" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.PoxBinaryEndpointFactory" ref="true" />
      </containers>
      <file name="f997cd6a-7a6a-2a14-1947-b1634eff7013" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Hosting.QueryResult">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Hosting.QueryResult" />
      <apidata name="QueryResult" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.DomainServices.Hosting.QueryResult`1" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
          <assignment name="Namespace">
            <type api="T:System.String" ref="true" />
            <value>DomainServices</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="b862965c-9a04-cbc4-2cd1-cb93061295c8" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Hosting.QueryResult">
      <topicdata name="QueryResult" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Hosting.QueryResult" />
      <apidata name="QueryResult" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Hosting.QueryResult.#ctor" />
        <element api="M:System.ServiceModel.DomainServices.Hosting.QueryResult.GetIncludedResults" />
        <element api="M:System.ServiceModel.DomainServices.Hosting.QueryResult.GetRootResults" />
        <element api="P:System.ServiceModel.DomainServices.Hosting.QueryResult.TotalCount" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.QueryResult" />
      </containers>
      <file name="0df80dbc-592b-37e1-5546-483516617d00" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Hosting.QueryResult">
      <topicdata name="QueryResult" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Hosting.QueryResult" />
      <apidata name="QueryResult" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Hosting.QueryResult.GetIncludedResults" />
        <element api="M:System.ServiceModel.DomainServices.Hosting.QueryResult.GetRootResults" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.QueryResult" />
      </containers>
      <file name="0d7c64e3-9a46-2bad-2172-2f020b9adb2f" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Hosting.QueryResult">
      <topicdata name="QueryResult" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Hosting.QueryResult" />
      <apidata name="QueryResult" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Hosting.QueryResult.TotalCount" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.QueryResult" />
      </containers>
      <file name="f34b2fc8-efe6-e892-0235-3615f5aadac2" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Hosting.QueryResult.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.QueryResult" ref="true" />
      </containers>
      <file name="b0d8c542-411a-531f-2bdc-ffd03d11f565" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Hosting.QueryResult.GetIncludedResults">
      <topicdata group="api" />
      <apidata name="GetIncludedResults" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.QueryResult" ref="true" />
      </containers>
      <file name="34f8f2dd-b635-4c71-395f-2efb2d597e2c" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Hosting.QueryResult.GetRootResults">
      <topicdata group="api" />
      <apidata name="GetRootResults" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.QueryResult" ref="true" />
      </containers>
      <file name="05d82c7a-7144-a8fc-39d7-6c82307ea84e" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Hosting.QueryResult.TotalCount">
      <topicdata group="api" />
      <apidata name="TotalCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TotalCount" />
      <setter name="set_TotalCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.QueryResult" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
          <assignment name="EmitDefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="4e10292d-86e2-619d-8d90-842a53c23a67" />
    </api>
    <api id="T:System.ServiceModel.DomainServices.Hosting.QueryResult`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Hosting.QueryResult`1" />
      <apidata name="QueryResult" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Hosting.QueryResult`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.DomainServices.Hosting.QueryResult" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
          <assignment name="Name">
            <type api="T:System.String" ref="true" />
            <value>QueryResultOf{0}</value>
          </assignment>
          <assignment name="Namespace">
            <type api="T:System.String" ref="true" />
            <value>DomainServices</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="64651e4f-125b-7e55-1e0b-712db68c84ac" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.DomainServices.Hosting.QueryResult`1">
      <topicdata name="QueryResult" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.DomainServices.Hosting.QueryResult`1" />
      <apidata name="QueryResult" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Hosting.QueryResult`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.DomainServices.Hosting.QueryResult.TotalCount" />
        <element api="Overload:System.ServiceModel.DomainServices.Hosting.QueryResult`1.#ctor">
          <element api="M:System.ServiceModel.DomainServices.Hosting.QueryResult`1.#ctor" />
          <element api="M:System.ServiceModel.DomainServices.Hosting.QueryResult`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:System.ServiceModel.DomainServices.Hosting.QueryResult`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int32)" />
        </element>
        <element api="M:System.ServiceModel.DomainServices.Hosting.QueryResult`1.GetIncludedResults" />
        <element api="M:System.ServiceModel.DomainServices.Hosting.QueryResult`1.GetRootResults" />
        <element api="P:System.ServiceModel.DomainServices.Hosting.QueryResult`1.IncludedResults" />
        <element api="P:System.ServiceModel.DomainServices.Hosting.QueryResult`1.RootResults" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.QueryResult`1" />
      </containers>
      <file name="c928768f-2e20-be3b-264c-35c5ec282254" />
    </api>
    <api id="Methods.T:System.ServiceModel.DomainServices.Hosting.QueryResult`1">
      <topicdata name="QueryResult" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.DomainServices.Hosting.QueryResult`1" />
      <apidata name="QueryResult" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Hosting.QueryResult`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.DomainServices.Hosting.QueryResult`1.GetIncludedResults" />
        <element api="M:System.ServiceModel.DomainServices.Hosting.QueryResult`1.GetRootResults" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.QueryResult`1" />
      </containers>
      <file name="3900c31e-c4cd-8139-93a1-2ff88404c783" />
    </api>
    <api id="Properties.T:System.ServiceModel.DomainServices.Hosting.QueryResult`1">
      <topicdata name="QueryResult" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.DomainServices.Hosting.QueryResult`1" />
      <apidata name="QueryResult" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.DomainServices.Hosting.QueryResult`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:System.ServiceModel.DomainServices.Hosting.QueryResult.TotalCount" />
        <element api="P:System.ServiceModel.DomainServices.Hosting.QueryResult`1.IncludedResults" />
        <element api="P:System.ServiceModel.DomainServices.Hosting.QueryResult`1.RootResults" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.QueryResult`1" />
      </containers>
      <file name="26979f65-3174-a53e-8c85-5bc153c4ff86" />
    </api>
    <api id="Overload:System.ServiceModel.DomainServices.Hosting.QueryResult`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.DomainServices.Hosting.QueryResult`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.DomainServices.Hosting.QueryResult`1.#ctor" />
        <element api="M:System.ServiceModel.DomainServices.Hosting.QueryResult`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:System.ServiceModel.DomainServices.Hosting.QueryResult`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.QueryResult`1" ref="true" />
      </containers>
      <file name="1165b9f7-ca00-c67e-aacc-9cf9216c567e" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Hosting.QueryResult`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DomainServices.Hosting.QueryResult`1.#ctor" />
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.QueryResult`1" ref="true" />
      </containers>
      <file name="887ea523-2a22-a2b2-180e-259c41d71375" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Hosting.QueryResult`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DomainServices.Hosting.QueryResult`1.#ctor" />
      <parameters>
        <parameter name="results">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.ServiceModel.DomainServices.Hosting.QueryResult`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.QueryResult`1" ref="true" />
      </containers>
      <file name="ef9e18d1-9758-09f4-b2a5-eeb4a43000cb" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Hosting.QueryResult`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.DomainServices.Hosting.QueryResult`1.#ctor" />
      <parameters>
        <parameter name="results">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.ServiceModel.DomainServices.Hosting.QueryResult`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="totalCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.QueryResult`1" ref="true" />
      </containers>
      <file name="db82d123-e4cc-c667-112b-edeca25092fd" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Hosting.QueryResult`1.GetIncludedResults">
      <topicdata group="api" />
      <apidata name="GetIncludedResults" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.DomainServices.Hosting.QueryResult.GetIncludedResults">
          <type api="T:System.ServiceModel.DomainServices.Hosting.QueryResult" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.QueryResult`1" ref="true" />
      </containers>
      <file name="1d27d8a5-d01d-55bc-8b47-5ffba46f857e" />
    </api>
    <api id="M:System.ServiceModel.DomainServices.Hosting.QueryResult`1.GetRootResults">
      <topicdata group="api" />
      <apidata name="GetRootResults" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.DomainServices.Hosting.QueryResult.GetRootResults">
          <type api="T:System.ServiceModel.DomainServices.Hosting.QueryResult" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.QueryResult`1" ref="true" />
      </containers>
      <file name="6fc60122-94e2-f993-175e-482a42082d2e" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Hosting.QueryResult`1.IncludedResults">
      <topicdata group="api" />
      <apidata name="IncludedResults" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IncludedResults" />
      <setter name="set_IncludedResults" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.QueryResult`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
          <assignment name="EmitDefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="b8c36e0d-d852-23ce-62f1-09c4ad51286a" />
    </api>
    <api id="P:System.ServiceModel.DomainServices.Hosting.QueryResult`1.RootResults">
      <topicdata group="api" />
      <apidata name="RootResults" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RootResults" />
      <setter name="set_RootResults" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.ServiceModel.DomainServices.Hosting.QueryResult`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.DomainServices.Hosting" module="System.ServiceModel.DomainServices.Hosting" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.0.0.0 (4.1.61829.0)" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.DomainServices.Hosting" />
        <type api="T:System.ServiceModel.DomainServices.Hosting.QueryResult`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
          <assignment name="EmitDefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="e8fdd399-b92d-5348-8ffe-2adde1789198" />
    </api>
  </apis>
</reflection>