<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.ComponentModel.Composition">
      <assemblydata version="5.0.5.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>5.0.61118.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® Silverlight</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>5.0.5.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>5.0.61118.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ComponentModel.Composition</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Silverlight Microsoft Extensibility Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ComponentModel.Composition</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="System.ComponentModel.Composition.Initialization">
      <assemblydata version="5.0.5.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ComponentModel.Composition.Initialization</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Silverlight Microsoft Extensibility Framework Initialization</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ComponentModel.Composition.Initialization</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® Silverlight</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>5.0.61118.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>5.0.61118.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>5.0.5.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.ComponentModel.Composition.Hosting">
      <topicdata group="api" />
      <apidata name="System.ComponentModel.Composition.Hosting" group="namespace" />
      <elements>
        <element api="T:System.ComponentModel.Composition.Hosting.ExportProvider" />
        <element api="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />
        <element api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" />
        <element api="T:System.ComponentModel.Composition.Hosting.CompositionConstants" />
        <element api="T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged" />
        <element api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" />
        <element api="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" />
        <element api="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />
        <element api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" />
        <element api="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" />
        <element api="T:System.ComponentModel.Composition.Hosting.CompositionBatch" />
        <element api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />
        <element api="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" />
        <element api="T:System.ComponentModel.Composition.Hosting.ImportEngine" />
        <element api="T:System.ComponentModel.Composition.Hosting.TypeCatalog" />
        <element api="T:System.ComponentModel.Composition.Hosting.CompositionHost" />
        <element api="T:System.ComponentModel.Composition.Hosting.DeploymentCatalog" />
      </elements>
      <file name="0a645421-119c-675c-bf27-8a840186f6b4" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.AggregateCatalog">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.AggregateCatalog" />
      <apidata name="AggregateCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="1206ac39-75b8-2b1b-0d9e-72aead1e052a" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.AggregateCatalog">
      <topicdata name="AggregateCatalog" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" />
      <apidata name="AggregateCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor">
          <element api="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor" />
          <element api="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog[])" />
          <element api="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePartCatalog})" />
        </element>
        <element api="P:System.ComponentModel.Composition.Hosting.AggregateCatalog.Catalogs" />
        <element api="E:System.ComponentModel.Composition.Hosting.AggregateCatalog.Changed" />
        <element api="E:System.ComponentModel.Composition.Hosting.AggregateCatalog.Changing" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.AggregateCatalog.Dispose">
          <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
        <element api="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)" />
        <element api="P:System.ComponentModel.Composition.Hosting.AggregateCatalog.Parts" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" />
      </containers>
      <file name="8728879d-279a-e831-a802-dc3a6ada2e09" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Hosting.AggregateCatalog">
      <topicdata name="AggregateCatalog" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" />
      <apidata name="AggregateCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.AggregateCatalog.Dispose">
          <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
        <element api="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" />
      </containers>
      <file name="e67ebc40-47d9-ca4b-8c13-90b9f6a74fe1" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.Hosting.AggregateCatalog">
      <topicdata name="AggregateCatalog" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" />
      <apidata name="AggregateCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Composition.Hosting.AggregateCatalog.Catalogs" />
        <element api="P:System.ComponentModel.Composition.Hosting.AggregateCatalog.Parts" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" />
      </containers>
      <file name="d2e5e9a0-64a9-b08c-cd1c-3870c109e453" />
    </api>
    <api id="Events.T:System.ComponentModel.Composition.Hosting.AggregateCatalog">
      <topicdata name="AggregateCatalog" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" />
      <apidata name="AggregateCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.Composition.Hosting.AggregateCatalog.Changed" />
        <element api="E:System.ComponentModel.Composition.Hosting.AggregateCatalog.Changing" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" />
      </containers>
      <file name="a29b372e-8ad5-2004-d0d9-d2e10d2e392b" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.AggregateCatalog" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor" />
        <element api="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog[])" />
        <element api="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePartCatalog})" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" ref="true" />
      </containers>
      <file name="80cebbf1-7c5f-54ee-2b89-8426c374fef5" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.AggregateCatalog.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.AggregateCatalog" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose" />
        <element api="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" ref="true" />
      </containers>
      <file name="37955446-92b1-e2d8-896e-b2d61288b76f" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor" />
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" ref="true" />
      </containers>
      <file name="59ab00fe-29d8-ef58-25b4-3bdea26e9f5e" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePartCatalog})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor" />
      <parameters>
        <parameter name="catalogs">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" ref="true" />
      </containers>
      <file name="3cb7b899-cf32-a8a9-1cc4-33105a706a96" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor" />
      <parameters>
        <parameter name="catalogs" params="true">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" ref="true" />
      </containers>
      <file name="c49b09b9-2958-a0b1-6b0e-7f21e6f03a03" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.AggregateCatalog.Catalogs">
      <topicdata group="api" />
      <apidata name="Catalogs" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Catalogs" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" ref="true" />
      </containers>
      <file name="a6a1e979-e7f6-d049-f024-27ca542c485b" />
    </api>
    <api id="E:System.ComponentModel.Composition.Hosting.AggregateCatalog.Changed">
      <topicdata group="api" />
      <apidata name="Changed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Changed" />
      <remover name="remove_Changed" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changed">
          <type api="T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" ref="true" />
      </containers>
      <file name="9d0a5943-eb22-32c2-07bc-56a56a8b3761" />
    </api>
    <api id="E:System.ComponentModel.Composition.Hosting.AggregateCatalog.Changing">
      <topicdata group="api" />
      <apidata name="Changing" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Changing" />
      <remover name="remove_Changing" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changing">
          <type api="T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" ref="true" />
      </containers>
      <file name="84ff32a8-cbf3-f9e6-584b-7ec702ec53f4" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Composition.Hosting.AggregateCatalog.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose(System.Boolean)">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" ref="true" />
      </containers>
      <file name="155a70b9-7759-2324-7f38-84d13ae97963" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
      <topicdata group="api" />
      <apidata name="GetExports" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="definition">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportDefinition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
                <type api="T:System.ComponentModel.Composition.Primitives.ExportDefinition" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" ref="true" />
      </containers>
      <file name="bf74d4e0-5feb-9d2e-6bce-971d6bc3f5c8" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="OnChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" ref="true" />
      </containers>
      <file name="2c67bec1-c745-d7af-982a-0aa69c92ff88" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="OnChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" ref="true" />
      </containers>
      <file name="e66a773c-3c30-e3b6-3db2-b89757187663" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.AggregateCatalog.Parts">
      <topicdata group="api" />
      <apidata name="Parts" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Parts">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Parts" />
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" ref="true" />
      </containers>
      <file name="ff2b5c41-bd17-fedc-5a18-8d1431c81cd9" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" />
      <apidata name="AggregateExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="1197bcde-4864-ce5b-e3ca-02cdaf43ba4d" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.AggregateExportProvider">
      <topicdata name="AggregateExportProvider" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" />
      <apidata name="AggregateExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.#ctor">
          <element api="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])" />
          <element api="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.ExportProvider})" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose">
          <element api="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
        <element api="P:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Providers" />
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged" />
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.GetExport">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.GetExportedValue">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.GetExportedValueOrDefault">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.GetExportedValues">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.GetExports">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" />
      </containers>
      <file name="0653fc47-4225-5633-3ba0-585f0d6b913a" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Hosting.AggregateExportProvider">
      <topicdata name="AggregateExportProvider" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" />
      <apidata name="AggregateExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose">
          <element api="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.GetExport">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.GetExportedValue">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.GetExportedValueOrDefault">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.GetExportedValues">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.GetExports">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" />
      </containers>
      <file name="0c769f33-cb4a-ce25-c95a-4a30b2f38757" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.Hosting.AggregateExportProvider">
      <topicdata name="AggregateExportProvider" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" />
      <apidata name="AggregateExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Providers" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" />
      </containers>
      <file name="a3501dc4-7fed-313d-d180-3255555c1945" />
    </api>
    <api id="Events.T:System.ComponentModel.Composition.Hosting.AggregateExportProvider">
      <topicdata name="AggregateExportProvider" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" />
      <apidata name="AggregateExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged" />
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" />
      </containers>
      <file name="824744fc-5253-78b2-516e-af40ae0f995b" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])" />
        <element api="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.ExportProvider})" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" ref="true" />
      </containers>
      <file name="b9d552e2-d4d7-96a2-5210-44426e44b888" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose" />
        <element api="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" ref="true" />
      </containers>
      <file name="eadfaf9f-2cb2-b0ac-1d55-47818cef3947" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Hosting.ExportProvider})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.#ctor" />
      <parameters>
        <parameter name="providers">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" ref="true" />
      </containers>
      <file name="5d738255-4cd9-d2b9-1ebb-4e6f52ff9f65" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.#ctor" />
      <parameters>
        <parameter name="providers" params="true">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" ref="true" />
      </containers>
      <file name="e4560453-1ec2-7f6b-7b0e-f19b5a465c46" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" ref="true" />
      </containers>
      <file name="a10f654d-0f9e-4bc6-a42e-cb0a0433546b" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" ref="true" />
      </containers>
      <file name="2647d0d7-c518-4928-0b2d-8fc4dfc68ee2" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AggregateExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
      <topicdata group="api" />
      <apidata name="GetExportsCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
          <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="definition">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportDefinition" ref="true" />
        </parameter>
        <parameter name="atomicComposition">
          <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.Export" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" ref="true" />
      </containers>
      <file name="a5efc6da-b85a-703c-e7b3-dcfdb5edf65e" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.AggregateExportProvider.Providers">
      <topicdata group="api" />
      <apidata name="Providers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Providers" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" ref="true" />
      </containers>
      <file name="7d5cf573-50d2-8745-1a2f-da2173651ccf" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />
      <apidata name="AssemblyCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="ec11fa93-ae1d-6704-bd62-b31815150d7e" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.AssemblyCatalog">
      <topicdata name="AssemblyCatalog" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />
      <apidata name="AssemblyCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly)" />
        <element api="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Assembly" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Dispose">
          <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
        <element api="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Parts" />
        <element api="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName" />
        <element api="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin" />
        <element api="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.ToString" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />
      </containers>
      <file name="08458f0e-8179-2167-c698-506a1c14544d" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Hosting.AssemblyCatalog">
      <topicdata name="AssemblyCatalog" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />
      <apidata name="AssemblyCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Dispose">
          <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
        <element api="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.ToString" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />
      </containers>
      <file name="ca572198-96fb-4ae2-d929-edea6f0b7797" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.Hosting.AssemblyCatalog">
      <topicdata name="AssemblyCatalog" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />
      <apidata name="AssemblyCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Assembly" />
        <element api="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Parts" />
        <element api="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName" />
        <element api="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />
      </containers>
      <file name="992aa308-8499-6bf1-3f62-a530e6a75fe2" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose" />
        <element api="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" ref="true" />
      </containers>
      <file name="c38662da-26b0-d9f6-3b68-ced6e1b5df81" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.#ctor(System.Reflection.Assembly)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="assembly">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" ref="true" />
      </containers>
      <file name="e1747ba2-16c9-b6cc-554c-2558f3e566c1" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Assembly">
      <topicdata group="api" />
      <apidata name="Assembly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Assembly" />
      <returns>
        <type api="T:System.Reflection.Assembly" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" ref="true" />
      </containers>
      <file name="2c5f3fa7-b2e2-459a-5dcf-6ea851a5fcd8" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose(System.Boolean)">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" ref="true" />
      </containers>
      <file name="7a579477-cb0b-03bd-7e2e-1c1af7510247" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
      <topicdata group="api" />
      <apidata name="GetExports" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="definition">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportDefinition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
                <type api="T:System.ComponentModel.Composition.Primitives.ExportDefinition" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" ref="true" />
      </containers>
      <file name="057209bb-8c52-c639-80f2-fb75b81677b7" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.Parts">
      <topicdata group="api" />
      <apidata name="Parts" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Parts">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Parts" />
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" ref="true" />
      </containers>
      <file name="11fd4e55-97f6-65dd-2870-855ef830fbc3" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName">
      <topicdata group="api" eiiName="ICompositionElement.DisplayName" />
      <apidata name="DisplayName" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName">
          <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" ref="true" />
      </containers>
      <file name="070c2d96-d055-54f8-9601-7873d7902b8d" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.AssemblyCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin">
      <topicdata group="api" eiiName="ICompositionElement.Origin" />
      <apidata name="Origin" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.Composition.Primitives.ICompositionElement.Origin" />
      <returns>
        <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.Composition.Primitives.ICompositionElement.Origin">
          <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" ref="true" />
      </containers>
      <file name="a7def477-cdf8-f520-e51c-367348e7ed32" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AssemblyCatalog.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AssemblyCatalog" ref="true" />
      </containers>
      <file name="cda30b97-101a-85a8-0452-261942d69c62" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.AtomicComposition">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.AtomicComposition" />
      <apidata name="AtomicComposition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="90f4488c-ddc9-92ec-bae3-076dff4a945c" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.AtomicComposition">
      <topicdata name="AtomicComposition" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.AtomicComposition" />
      <apidata name="AtomicComposition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor">
          <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor" />
          <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor(System.ComponentModel.Composition.Hosting.AtomicComposition)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.AddCompleteAction(System.Action)" />
        <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.AddRevertAction(System.Action)" />
        <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Complete" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose">
          <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue">
          <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,``0@)" />
          <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,System.Boolean,``0@)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" />
      </containers>
      <file name="261c7677-cf0f-f332-189e-ef7aa20afdab" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Hosting.AtomicComposition">
      <topicdata name="AtomicComposition" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Hosting.AtomicComposition" />
      <apidata name="AtomicComposition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.AddCompleteAction(System.Action)" />
        <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.AddRevertAction(System.Action)" />
        <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Complete" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose">
          <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue">
          <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,``0@)" />
          <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,System.Boolean,``0@)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" />
      </containers>
      <file name="8e2d6e65-be59-9015-6a5b-4c5394ae5c95" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.AtomicComposition" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor" />
        <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor(System.ComponentModel.Composition.Hosting.AtomicComposition)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
      </containers>
      <file name="ff818997-a2e1-8d52-c2a8-b08f042e508e" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.AtomicComposition" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose" />
        <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
      </containers>
      <file name="1451eedd-b445-1e82-5ef5-72e913b6da07" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue">
      <topicdata name="TryGetValue" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.AtomicComposition" />
      <apidata name="TryGetValue" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,``0@)" />
        <element api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,System.Boolean,``0@)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
      </containers>
      <file name="7a21f833-d824-c6dd-098b-b6eb741c4134" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor" />
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
      </containers>
      <file name="76b7fd27-0b54-f7a5-809e-1c11b2e5ede4" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor(System.ComponentModel.Composition.Hosting.AtomicComposition)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor" />
      <parameters>
        <parameter name="outerAtomicComposition">
          <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
      </containers>
      <file name="a251c2e2-aa72-1d93-27d4-3edf5daf22e2" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AtomicComposition.AddCompleteAction(System.Action)">
      <topicdata group="api" />
      <apidata name="AddCompleteAction" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="completeAction">
          <type api="T:System.Action" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
      </containers>
      <file name="bcbc70f1-298c-a18c-6bd6-2acbe0280dcb" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AtomicComposition.AddRevertAction(System.Action)">
      <topicdata group="api" />
      <apidata name="AddRevertAction" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="revertAction">
          <type api="T:System.Action" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
      </containers>
      <file name="f9a53d58-495d-1953-581c-9ebba7cd1a8a" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Complete">
      <topicdata group="api" />
      <apidata name="Complete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
      </containers>
      <file name="d313fb4c-6b73-c2f8-2c4b-29d95c9fdd78" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
      </containers>
      <file name="de12c6a6-ccd0-1050-d2da-7f4ac59575fb" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
      </containers>
      <file name="7ff89fd4-1609-9922-0334-9a0aaf546c63" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="SetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
      </containers>
      <file name="c14f18e4-8279-1453-c695-355fe31a3e57" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,System.Boolean,``0@)">
      <topicdata group="api" />
      <apidata name="TryGetValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="localAtomicCompositionOnly">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="value" out="true">
          <referenceTo>
            <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,System.Boolean,``0@)" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
      </containers>
      <file name="0500713d-485a-0f93-0e11-b492309842e5" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,``0@)">
      <topicdata group="api" />
      <apidata name="TryGetValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value" out="true">
          <referenceTo>
            <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,``0@)" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
      </containers>
      <file name="31f114de-8444-1470-f49f-3a2c86c12f8e" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />
      <apidata name="CatalogExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="ed7cbe48-3c63-efdd-2e81-82f2b8243ccf" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.CatalogExportProvider">
      <topicdata name="CatalogExportProvider" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />
      <apidata name="CatalogExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.#ctor">
          <element api="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)" />
          <element api="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean)" />
        </element>
        <element api="P:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Catalog" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Dispose">
          <element api="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
        <element api="P:System.ComponentModel.Composition.Hosting.CatalogExportProvider.SourceProvider" />
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged" />
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExport">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExportedValue">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExportedValueOrDefault">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExportedValues">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExports">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />
      </containers>
      <file name="196f069b-bd95-6d3c-34d3-38d5084e7f74" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Hosting.CatalogExportProvider">
      <topicdata name="CatalogExportProvider" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />
      <apidata name="CatalogExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Dispose">
          <element api="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExport">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExportedValue">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExportedValueOrDefault">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExportedValues">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExports">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />
      </containers>
      <file name="41765ada-a028-a801-7880-e23f8988091e" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.Hosting.CatalogExportProvider">
      <topicdata name="CatalogExportProvider" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />
      <apidata name="CatalogExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Catalog" />
        <element api="P:System.ComponentModel.Composition.Hosting.CatalogExportProvider.SourceProvider" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />
      </containers>
      <file name="c4aba56a-cd90-c0fe-8505-b63f99bcf655" />
    </api>
    <api id="Events.T:System.ComponentModel.Composition.Hosting.CatalogExportProvider">
      <topicdata name="CatalogExportProvider" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />
      <apidata name="CatalogExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged" />
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />
      </containers>
      <file name="3da35101-bdc6-e614-bc9d-4ef2f58e0285" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)" />
        <element api="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" ref="true" />
      </containers>
      <file name="035dfc45-a732-e334-09bc-f546b9c94133" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Dispose" />
        <element api="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" ref="true" />
      </containers>
      <file name="9bef10e6-15e7-1efb-b8c5-4dbde0ae2bab" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.#ctor" />
      <parameters>
        <parameter name="catalog">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" ref="true" />
      </containers>
      <file name="f2ebd670-f618-21b6-e5d3-78134ed2bb18" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.#ctor" />
      <parameters>
        <parameter name="catalog">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </parameter>
        <parameter name="isThreadSafe">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" ref="true" />
      </containers>
      <file name="b39a4780-9e53-db52-0023-7b2af1be114e" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Catalog">
      <topicdata group="api" />
      <apidata name="Catalog" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Catalog" />
      <returns>
        <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" ref="true" />
      </containers>
      <file name="d5b4df5f-ba4e-491c-517c-e8751f2984c2" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" ref="true" />
      </containers>
      <file name="d23d9657-bf3f-cb4d-d497-459c75b58078" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" ref="true" />
      </containers>
      <file name="7930baf2-2bbb-a546-a19f-b510b16afe87" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
      <topicdata group="api" />
      <apidata name="GetExportsCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
          <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="definition">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportDefinition" ref="true" />
        </parameter>
        <parameter name="atomicComposition">
          <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.Export" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" ref="true" />
      </containers>
      <file name="b5a8c582-d40d-5cdb-6ea6-37a20d8e91dd" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.CatalogExportProvider.SourceProvider">
      <topicdata group="api" />
      <apidata name="SourceProvider" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SourceProvider" />
      <setter name="set_SourceProvider" />
      <returns>
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" ref="true" />
      </containers>
      <file name="b00be86d-40b3-b75b-2cef-8a63cf6317d1" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" />
      <apidata name="ComposablePartCatalogChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="182f1763-10e4-a5d5-60b8-02d94886aacb" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs">
      <topicdata name="ComposablePartCatalogChangeEventArgs" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" />
      <apidata name="ComposablePartCatalogChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePartDefinition},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePartDefinition},System.ComponentModel.Composition.Hosting.AtomicComposition)" />
        <element api="P:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs.AddedDefinitions" />
        <element api="P:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs.AtomicComposition" />
        <element api="P:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs.RemovedDefinitions" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" />
      </containers>
      <file name="3e85d566-6c03-9a87-c855-7b2f104295d4" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs">
      <topicdata name="ComposablePartCatalogChangeEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" />
      <apidata name="ComposablePartCatalogChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" />
      </containers>
      <file name="77b585bc-9ee9-7582-ee80-34a37eb2a019" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs">
      <topicdata name="ComposablePartCatalogChangeEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" />
      <apidata name="ComposablePartCatalogChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs.AddedDefinitions" />
        <element api="P:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs.AtomicComposition" />
        <element api="P:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs.RemovedDefinitions" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" />
      </containers>
      <file name="b8b6cd96-bdc1-e8c1-0808-50bd52384628" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePartDefinition},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePartDefinition},System.ComponentModel.Composition.Hosting.AtomicComposition)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="addedDefinitions">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="removedDefinitions">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="atomicComposition">
          <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
      </containers>
      <file name="d78e873b-fcd0-243d-225b-1a07ea0c06ce" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs.AddedDefinitions">
      <topicdata group="api" />
      <apidata name="AddedDefinitions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AddedDefinitions" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
      </containers>
      <file name="ced019b1-3bfa-4beb-cd44-e9010d0fdb8b" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs.AtomicComposition">
      <topicdata group="api" />
      <apidata name="AtomicComposition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AtomicComposition" />
      <returns>
        <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
      </containers>
      <file name="aae22562-277f-52ca-7584-6f70d0517395" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs.RemovedDefinitions">
      <topicdata group="api" />
      <apidata name="RemovedDefinitions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RemovedDefinitions" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
      </containers>
      <file name="6563e865-263d-6ea1-9aea-b95e1818bf97" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" />
      <apidata name="ComposablePartExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="c8d89d3a-2bdd-cfaf-3284-ed45742cd193" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider">
      <topicdata name="ComposablePartExportProvider" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" />
      <apidata name="ComposablePartExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor">
          <element api="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor" />
          <element api="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Dispose">
          <element api="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
        <element api="P:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.SourceProvider" />
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged" />
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.GetExport">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.GetExportedValue">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.GetExportedValueOrDefault">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.GetExportedValues">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.GetExports">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" />
      </containers>
      <file name="b8fcdbd6-538f-3f73-df25-3fa05cc44194" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider">
      <topicdata name="ComposablePartExportProvider" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" />
      <apidata name="ComposablePartExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Dispose">
          <element api="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.GetExport">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.GetExportedValue">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.GetExportedValueOrDefault">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.GetExportedValues">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.GetExports">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" />
      </containers>
      <file name="1a473986-3a8c-6057-2eec-d1fe892fe3d5" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider">
      <topicdata name="ComposablePartExportProvider" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" />
      <apidata name="ComposablePartExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.SourceProvider" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" />
      </containers>
      <file name="e7d7ca4f-a8c7-8685-e4fc-d0acab8906e2" />
    </api>
    <api id="Events.T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider">
      <topicdata name="ComposablePartExportProvider" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" />
      <apidata name="ComposablePartExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged" />
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" />
      </containers>
      <file name="4c4599f4-47b7-c5c8-1f3a-5f158bebebea" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor" />
        <element api="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" ref="true" />
      </containers>
      <file name="dfa7d331-bd82-3167-7b14-b4c68721e184" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Dispose" />
        <element api="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" ref="true" />
      </containers>
      <file name="d07ad1f5-11c9-1e6e-c687-ae508f6e19ed" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor" />
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" ref="true" />
      </containers>
      <file name="6b8aed03-a57d-3dd5-5225-2da811e55840" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.#ctor" />
      <parameters>
        <parameter name="isThreadSafe">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" ref="true" />
      </containers>
      <file name="763dc4f0-6c06-77e7-f22a-5369a82949e0" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)">
      <topicdata group="api" />
      <apidata name="Compose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="batch">
          <type api="T:System.ComponentModel.Composition.Hosting.CompositionBatch" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" ref="true" />
      </containers>
      <file name="63b5aa96-4a6a-79e6-00e9-3a5d832a4e3c" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" ref="true" />
      </containers>
      <file name="6580f18c-79d2-fdd8-4b81-16976987c484" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" ref="true" />
      </containers>
      <file name="0feb7766-1704-e792-1180-df59e958b932" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
      <topicdata group="api" />
      <apidata name="GetExportsCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
          <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="definition">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportDefinition" ref="true" />
        </parameter>
        <parameter name="atomicComposition">
          <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.Export" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" ref="true" />
      </containers>
      <file name="aafea548-1a85-6262-4d56-0fe7f4068f85" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider.SourceProvider">
      <topicdata group="api" />
      <apidata name="SourceProvider" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SourceProvider" />
      <setter name="set_SourceProvider" />
      <returns>
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" ref="true" />
      </containers>
      <file name="7ef8467b-a4d1-4c64-00d7-cfcb5d75e7d5" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.CompositionBatch">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.CompositionBatch" />
      <apidata name="CompositionBatch" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.CompositionBatch.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="d09131ee-9abc-caff-1b4d-342a58c1c8a7" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.CompositionBatch">
      <topicdata name="CompositionBatch" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.CompositionBatch" />
      <apidata name="CompositionBatch" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.CompositionBatch.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,``0)" source="extension" overload="true">
          <apidata name="AddExportedValue" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="exportedValue">
              <template name="T" index="0" api="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,``0)" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,System.String,``0)" source="extension" overload="true">
          <apidata name="AddExportedValue" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="contractName">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="exportedValue">
              <template name="T" index="0" api="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,System.String,``0)" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.AddPart(System.ComponentModel.Composition.Hosting.CompositionBatch,System.Object)" source="extension">
          <apidata name="AddPart" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="attributedPart">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionBatch.#ctor">
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionBatch.#ctor" />
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionBatch.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePart},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePart})" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionBatch.AddExport(System.ComponentModel.Composition.Primitives.Export)" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionBatch.AddPart(System.ComponentModel.Composition.Primitives.ComposablePart)" />
        <element api="P:System.ComponentModel.Composition.Hosting.CompositionBatch.PartsToAdd" />
        <element api="P:System.ComponentModel.Composition.Hosting.CompositionBatch.PartsToRemove" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionBatch.RemovePart(System.ComponentModel.Composition.Primitives.ComposablePart)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionBatch" />
      </containers>
      <file name="871d6779-4aff-de6f-4062-e002b2ca147d" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Hosting.CompositionBatch">
      <topicdata name="CompositionBatch" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Hosting.CompositionBatch" />
      <apidata name="CompositionBatch" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.CompositionBatch.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,``0)" source="extension" overload="true">
          <apidata name="AddExportedValue" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="exportedValue">
              <template name="T" index="0" api="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,``0)" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,System.String,``0)" source="extension" overload="true">
          <apidata name="AddExportedValue" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="contractName">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="exportedValue">
              <template name="T" index="0" api="M:System.ComponentModel.Composition.AttributedModelServices.AddExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionBatch,System.String,``0)" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.AddPart(System.ComponentModel.Composition.Hosting.CompositionBatch,System.Object)" source="extension">
          <apidata name="AddPart" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="attributedPart">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionBatch.AddExport(System.ComponentModel.Composition.Primitives.Export)" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionBatch.AddPart(System.ComponentModel.Composition.Primitives.ComposablePart)" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionBatch.RemovePart(System.ComponentModel.Composition.Primitives.ComposablePart)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionBatch" />
      </containers>
      <file name="95b599a1-c6cc-0be8-7a7f-0800c71ac6c7" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.Hosting.CompositionBatch">
      <topicdata name="CompositionBatch" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.Hosting.CompositionBatch" />
      <apidata name="CompositionBatch" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.CompositionBatch.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Composition.Hosting.CompositionBatch.PartsToAdd" />
        <element api="P:System.ComponentModel.Composition.Hosting.CompositionBatch.PartsToRemove" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionBatch" />
      </containers>
      <file name="cc49899c-fcde-d14c-3cc3-e85e0be6a314" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.CompositionBatch.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.CompositionBatch" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionBatch.#ctor" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionBatch.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePart},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePart})" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionBatch" ref="true" />
      </containers>
      <file name="4297fdc2-cf89-9282-2539-c4b390a7ad0a" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionBatch.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.CompositionBatch.#ctor" />
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionBatch" ref="true" />
      </containers>
      <file name="d1d4f2c1-7650-077a-6de6-82c34961bc0a" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionBatch.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePart},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePart})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.CompositionBatch.#ctor" />
      <parameters>
        <parameter name="partsToAdd">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="partsToRemove">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionBatch" ref="true" />
      </containers>
      <file name="6e6e2b90-c3c8-7583-5aa5-6b945ba388db" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionBatch.AddExport(System.ComponentModel.Composition.Primitives.Export)">
      <topicdata group="api" />
      <apidata name="AddExport" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="export">
          <type api="T:System.ComponentModel.Composition.Primitives.Export" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionBatch" ref="true" />
      </containers>
      <file name="873d23ee-59ed-f08a-0c4c-8450222af5f7" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionBatch.AddPart(System.ComponentModel.Composition.Primitives.ComposablePart)">
      <topicdata group="api" />
      <apidata name="AddPart" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="part">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionBatch" ref="true" />
      </containers>
      <file name="68b67af9-0078-3070-e437-c09685a7c5a2" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.CompositionBatch.PartsToAdd">
      <topicdata group="api" />
      <apidata name="PartsToAdd" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PartsToAdd" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionBatch" ref="true" />
      </containers>
      <file name="6a721093-6eb1-708d-de5c-98795a5b70a2" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.CompositionBatch.PartsToRemove">
      <topicdata group="api" />
      <apidata name="PartsToRemove" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PartsToRemove" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionBatch" ref="true" />
      </containers>
      <file name="0ecb3b84-cf1b-5bf8-f766-266a767269df" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionBatch.RemovePart(System.ComponentModel.Composition.Primitives.ComposablePart)">
      <topicdata group="api" />
      <apidata name="RemovePart" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="part">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionBatch" ref="true" />
      </containers>
      <file name="1815a5ea-84a8-3a47-e641-4ad75f226d69" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.CompositionConstants">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.CompositionConstants" />
      <apidata name="CompositionConstants" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="560feaae-13e3-ea74-d0a7-7819c6cd8cf6" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.CompositionConstants">
      <topicdata name="CompositionConstants" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.CompositionConstants" />
      <apidata name="CompositionConstants" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.Composition.Hosting.CompositionConstants.ExportTypeIdentityMetadataName" />
        <element api="F:System.ComponentModel.Composition.Hosting.CompositionConstants.PartCreationPolicyMetadataName" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionConstants" />
      </containers>
      <file name="b32f81ed-735c-c68d-2356-91a229f3e20e" />
    </api>
    <api id="Fields.T:System.ComponentModel.Composition.Hosting.CompositionConstants">
      <topicdata name="CompositionConstants" group="list" subgroup="Fields" typeTopicId="T:System.ComponentModel.Composition.Hosting.CompositionConstants" />
      <apidata name="CompositionConstants" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ComponentModel.Composition.Hosting.CompositionConstants.ExportTypeIdentityMetadataName" />
        <element api="F:System.ComponentModel.Composition.Hosting.CompositionConstants.PartCreationPolicyMetadataName" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionConstants" />
      </containers>
      <file name="124c9c14-fe8f-8b05-2b38-fd07f9493f21" />
    </api>
    <api id="F:System.ComponentModel.Composition.Hosting.CompositionConstants.ExportTypeIdentityMetadataName">
      <topicdata group="api" />
      <apidata name="ExportTypeIdentityMetadataName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>ExportTypeIdentity</value>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionConstants" ref="true" />
      </containers>
      <file name="e74918c9-2f88-f931-7f88-9b0005b871c4" />
    </api>
    <api id="F:System.ComponentModel.Composition.Hosting.CompositionConstants.PartCreationPolicyMetadataName">
      <topicdata group="api" />
      <apidata name="PartCreationPolicyMetadataName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>System.ComponentModel.Composition.CreationPolicy</value>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionConstants" ref="true" />
      </containers>
      <file name="2e59a125-0f81-7166-4523-420ad4f1d484" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.CompositionContainer" />
      <apidata name="CompositionContainer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.Composition.ICompositionService" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="ba6caf57-0de7-63e9-7adf-b0531ea42b91" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.CompositionContainer">
      <topicdata name="CompositionContainer" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />
      <apidata name="CompositionContainer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object)" source="extension">
          <apidata name="SatisfyImportsOnce" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="attributedPart">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,``0)" source="extension" overload="true">
          <apidata name="ComposeExportedValue" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="exportedValue">
              <template name="T" index="0" api="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,``0)" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,System.String,``0)" source="extension" overload="true">
          <apidata name="ComposeExportedValue" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="contractName">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="exportedValue">
              <template name="T" index="0" api="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,System.String,``0)" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.ComposeParts(System.ComponentModel.Composition.Hosting.CompositionContainer,System.Object[])" source="extension">
          <apidata name="ComposeParts" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="attributedParts" params="true">
              <arrayOf rank="1">
                <type api="T:System.Object" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor">
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor" />
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])" />
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.ExportProvider[])" />
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])" />
        </element>
        <element api="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose">
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
        <element api="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport">
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)" />
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport``1(System.Lazy{``0})" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports">
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})" />
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``1(System.Collections.Generic.IEnumerable{System.Lazy{``0}})" />
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``1}})" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)" />
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged" />
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExport">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportedValue">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportedValueOrDefault">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportedValues">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExports">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />
      </containers>
      <file name="fd2b0e5f-9402-48ec-12a7-ef681416efce" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Hosting.CompositionContainer">
      <topicdata name="CompositionContainer" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />
      <apidata name="CompositionContainer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object)" source="extension">
          <apidata name="SatisfyImportsOnce" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="attributedPart">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,``0)" source="extension" overload="true">
          <apidata name="ComposeExportedValue" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="exportedValue">
              <template name="T" index="0" api="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,``0)" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,System.String,``0)" source="extension" overload="true">
          <apidata name="ComposeExportedValue" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" />
          </templates>
          <parameters>
            <parameter name="contractName">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="exportedValue">
              <template name="T" index="0" api="M:System.ComponentModel.Composition.AttributedModelServices.ComposeExportedValue``1(System.ComponentModel.Composition.Hosting.CompositionContainer,System.String,``0)" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.ComposeParts(System.ComponentModel.Composition.Hosting.CompositionContainer,System.Object[])" source="extension">
          <apidata name="ComposeParts" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="attributedParts" params="true">
              <arrayOf rank="1">
                <type api="T:System.Object" ref="true" />
              </arrayOf>
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose">
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport">
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)" />
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport``1(System.Lazy{``0})" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports">
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})" />
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``1(System.Collections.Generic.IEnumerable{System.Lazy{``0}})" />
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``1}})" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExport">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportedValue">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportedValueOrDefault">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportedValues">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExports">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />
      </containers>
      <file name="0b585ba5-bb04-c2aa-510d-e5be48e52243" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.Hosting.CompositionContainer">
      <topicdata name="CompositionContainer" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />
      <apidata name="CompositionContainer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog" />
        <element api="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />
      </containers>
      <file name="c0099f1a-793c-3f4a-3be9-b34eabb23b1c" />
    </api>
    <api id="Events.T:System.ComponentModel.Composition.Hosting.CompositionContainer">
      <topicdata name="CompositionContainer" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />
      <apidata name="CompositionContainer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged" />
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />
      </containers>
      <file name="164c2d6a-9fac-aba4-569d-fbd2259f220d" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.CompositionContainer" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.ExportProvider[])" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="cd5876be-c93a-b098-44ae-b81f53a3b430" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.CompositionContainer" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="ba9aacde-f8be-33c1-238f-f5fe7efc77b8" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport">
      <topicdata name="ReleaseExport" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.CompositionContainer" />
      <apidata name="ReleaseExport" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport``1(System.Lazy{``0})" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="bb9550a2-67bf-bb73-1e54-afc49d291882" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports">
      <topicdata name="ReleaseExports" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.CompositionContainer" />
      <apidata name="ReleaseExports" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``1(System.Collections.Generic.IEnumerable{System.Lazy{``0}})" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``1}})" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="9322c179-4744-0fbf-94bb-06339f1bf00d" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor" />
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="e4e4f515-2b1e-1ff2-2512-af9b97774b66" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor" />
      <parameters>
        <parameter name="providers" params="true">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="e1c29e78-7fbf-ce0d-0164-a50e28776e64" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor" />
      <parameters>
        <parameter name="catalog">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </parameter>
        <parameter name="isThreadSafe">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="providers" params="true">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="95d97c5a-8b4c-7e06-0b52-baab94688919" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.ExportProvider[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor" />
      <parameters>
        <parameter name="catalog">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </parameter>
        <parameter name="providers" params="true">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="5913eb16-9fb2-81a0-ec24-1c05cd40bcb0" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog">
      <topicdata group="api" />
      <apidata name="Catalog" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Catalog" />
      <returns>
        <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="38c6a31a-c8d5-1854-75c2-207093200625" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)">
      <topicdata group="api" />
      <apidata name="Compose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="batch">
          <type api="T:System.ComponentModel.Composition.Hosting.CompositionBatch" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="187ad6d4-45ad-e2da-09e4-f11ebb295854" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="7d7deaad-f395-aaa7-e155-002b97bf43c5" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="4cff8254-5fb3-5057-1da9-060797764b72" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
      <topicdata group="api" />
      <apidata name="GetExportsCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
          <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="definition">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportDefinition" ref="true" />
        </parameter>
        <parameter name="atomicComposition">
          <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.Export" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="f3418a8f-cd54-3ed9-3af6-39213ba0e778" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers">
      <topicdata group="api" />
      <apidata name="Providers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Providers" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="8ad8846c-41bf-c91b-133e-71d2364b302e" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)">
      <topicdata group="api" />
      <apidata name="ReleaseExport" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="export">
          <type api="T:System.ComponentModel.Composition.Primitives.Export" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="f56c63d1-f5a9-48d0-79f7-e5dff3f25075" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport``1(System.Lazy{``0})">
      <topicdata group="api" />
      <apidata name="ReleaseExport" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="export">
          <type api="T:System.Lazy`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport``1(System.Lazy{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="71393385-3403-bd66-1612-31249bcccba9" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})">
      <topicdata group="api" />
      <apidata name="ReleaseExports" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="exports">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Primitives.Export" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="e6c184ee-4acd-a8ce-188a-c823f0809860" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``1(System.Collections.Generic.IEnumerable{System.Lazy{``0}})">
      <topicdata group="api" />
      <apidata name="ReleaseExports" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="exports">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Lazy`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``1(System.Collections.Generic.IEnumerable{System.Lazy{``0}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="9bf278f4-cde0-9992-f80c-a8e6ef16dc78" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``1}})">
      <topicdata group="api" />
      <apidata name="ReleaseExports" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TMetadataView" />
      </templates>
      <parameters>
        <parameter name="exports">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Lazy`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``1}})" />
                  <template name="TMetadataView" index="1" api="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``1}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="4998cf14-a71e-df13-556c-33e5abd37ef8" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)">
      <topicdata group="api" />
      <apidata name="SatisfyImportsOnce" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="part">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.Composition.ICompositionService.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)">
          <type api="T:System.ComponentModel.Composition.ICompositionService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </containers>
      <file name="990d1055-135e-fe00-371e-8264ca0e3f32" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.CompositionHost">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.CompositionHost" />
      <apidata name="CompositionHost" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ComponentModel.Composition.Initialization" module="System.ComponentModel.Composition.Initialization" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="46cfa1c0-36b4-376e-643e-5cedb857550b" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.CompositionHost">
      <topicdata name="CompositionHost" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.CompositionHost" />
      <apidata name="CompositionHost" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionHost.Initialize">
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionHost.Initialize(System.ComponentModel.Composition.Primitives.ComposablePartCatalog[])" />
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionHost.Initialize(System.ComponentModel.Composition.Hosting.CompositionContainer)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Initialization" module="System.ComponentModel.Composition.Initialization" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionHost" />
      </containers>
      <file name="6174c63d-2327-8d49-03a8-c22ffecb2499" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Hosting.CompositionHost">
      <topicdata name="CompositionHost" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Hosting.CompositionHost" />
      <apidata name="CompositionHost" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.ComponentModel.Composition.Hosting.CompositionHost.Initialize">
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionHost.Initialize(System.ComponentModel.Composition.Primitives.ComposablePartCatalog[])" />
          <element api="M:System.ComponentModel.Composition.Hosting.CompositionHost.Initialize(System.ComponentModel.Composition.Hosting.CompositionContainer)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Initialization" module="System.ComponentModel.Composition.Initialization" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionHost" />
      </containers>
      <file name="a901bba9-efbd-e395-2f76-d99a9f40335c" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.CompositionHost.Initialize">
      <topicdata name="Initialize" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.CompositionHost" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionHost.Initialize(System.ComponentModel.Composition.Primitives.ComposablePartCatalog[])" />
        <element api="M:System.ComponentModel.Composition.Hosting.CompositionHost.Initialize(System.ComponentModel.Composition.Hosting.CompositionContainer)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Initialization" module="System.ComponentModel.Composition.Initialization" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionHost" ref="true" />
      </containers>
      <file name="d42d26bc-e46e-709c-fb8f-752b77e89ac9" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionHost.Initialize(System.ComponentModel.Composition.Hosting.CompositionContainer)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.Composition.Hosting.CompositionHost.Initialize" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="container">
          <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition.Initialization" module="System.ComponentModel.Composition.Initialization" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionHost" ref="true" />
      </containers>
      <file name="a3a571ba-5320-2bf1-f4cd-9ae7d15822e8" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.CompositionHost.Initialize(System.ComponentModel.Composition.Primitives.ComposablePartCatalog[])">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.ComponentModel.Composition.Hosting.CompositionHost.Initialize" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="catalogs" params="true">
          <arrayOf rank="1">
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Initialization" module="System.ComponentModel.Composition.Initialization" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.CompositionHost" ref="true" />
      </containers>
      <file name="d8f72ef5-2b88-d1e8-bb4b-db6b589850a3" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.DeploymentCatalog">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.DeploymentCatalog" />
      <apidata name="DeploymentCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Initialization" module="System.ComponentModel.Composition.Initialization" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="d60cd265-5c9f-9be7-6cdd-7b17a107262e" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.DeploymentCatalog">
      <topicdata name="DeploymentCatalog" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.DeploymentCatalog" />
      <apidata name="DeploymentCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.DeploymentCatalog.#ctor">
          <element api="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.#ctor" />
          <element api="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.#ctor(System.String)" />
          <element api="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.#ctor(System.Uri)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.CancelAsync" />
        <element api="E:System.ComponentModel.Composition.Hosting.DeploymentCatalog.Changed" />
        <element api="E:System.ComponentModel.Composition.Hosting.DeploymentCatalog.Changing" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.DeploymentCatalog.Dispose">
          <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.DownloadAsync" />
        <element api="E:System.ComponentModel.Composition.Hosting.DeploymentCatalog.DownloadCompleted" />
        <element api="E:System.ComponentModel.Composition.Hosting.DeploymentCatalog.DownloadProgressChanged" />
        <element api="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
        <element api="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnDownloadCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)" />
        <element api="P:System.ComponentModel.Composition.Hosting.DeploymentCatalog.Parts" />
        <element api="P:System.ComponentModel.Composition.Hosting.DeploymentCatalog.Uri" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Initialization" module="System.ComponentModel.Composition.Initialization" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DeploymentCatalog" />
      </containers>
      <file name="b150974c-0c9b-8b5f-8761-49a1819d490a" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Hosting.DeploymentCatalog">
      <topicdata name="DeploymentCatalog" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Hosting.DeploymentCatalog" />
      <apidata name="DeploymentCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.CancelAsync" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.DeploymentCatalog.Dispose">
          <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.DownloadAsync" />
        <element api="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
        <element api="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnDownloadCompleted(System.ComponentModel.AsyncCompletedEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Initialization" module="System.ComponentModel.Composition.Initialization" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DeploymentCatalog" />
      </containers>
      <file name="d5803324-1970-df03-39ba-b7439af64e3d" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.Hosting.DeploymentCatalog">
      <topicdata name="DeploymentCatalog" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.Hosting.DeploymentCatalog" />
      <apidata name="DeploymentCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.#ctor" />
      <elements>
        <element api="P:System.ComponentModel.Composition.Hosting.DeploymentCatalog.Parts" />
        <element api="P:System.ComponentModel.Composition.Hosting.DeploymentCatalog.Uri" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Initialization" module="System.ComponentModel.Composition.Initialization" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DeploymentCatalog" />
      </containers>
      <file name="b425d7ef-8044-bdea-b0eb-f4eafc764266" />
    </api>
    <api id="Events.T:System.ComponentModel.Composition.Hosting.DeploymentCatalog">
      <topicdata name="DeploymentCatalog" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Composition.Hosting.DeploymentCatalog" />
      <apidata name="DeploymentCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.#ctor" />
      <elements>
        <element api="E:System.ComponentModel.Composition.Hosting.DeploymentCatalog.Changed" />
        <element api="E:System.ComponentModel.Composition.Hosting.DeploymentCatalog.Changing" />
        <element api="E:System.ComponentModel.Composition.Hosting.DeploymentCatalog.DownloadCompleted" />
        <element api="E:System.ComponentModel.Composition.Hosting.DeploymentCatalog.DownloadProgressChanged" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Initialization" module="System.ComponentModel.Composition.Initialization" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DeploymentCatalog" />
      </containers>
      <file name="97c1ec98-1c58-ca09-6b6b-c52bdeb6a37b" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.DeploymentCatalog.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.DeploymentCatalog" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.#ctor" />
        <element api="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.#ctor(System.String)" />
        <element api="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.#ctor(System.Uri)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Initialization" module="System.ComponentModel.Composition.Initialization" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DeploymentCatalog" ref="true" />
      </containers>
      <file name="86c4a6d9-8433-dc73-6ce1-9d7d1786df50" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.DeploymentCatalog.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.DeploymentCatalog" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose" />
        <element api="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Initialization" module="System.ComponentModel.Composition.Initialization" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DeploymentCatalog" ref="true" />
      </containers>
      <file name="68120f30-9b12-b947-829b-29df6666cfb8" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.DeploymentCatalog.#ctor" />
      <containers>
        <library assembly="System.ComponentModel.Composition.Initialization" module="System.ComponentModel.Composition.Initialization" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DeploymentCatalog" ref="true" />
      </containers>
      <file name="d6159418-0df0-e6c7-b522-fb215533a215" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.DeploymentCatalog.#ctor" />
      <parameters>
        <parameter name="uriRelative">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition.Initialization" module="System.ComponentModel.Composition.Initialization" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DeploymentCatalog" ref="true" />
      </containers>
      <file name="65d67eb8-205c-05de-8a9a-95c2c66a2b3a" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.#ctor(System.Uri)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.DeploymentCatalog.#ctor" />
      <parameters>
        <parameter name="uri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition.Initialization" module="System.ComponentModel.Composition.Initialization" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DeploymentCatalog" ref="true" />
      </containers>
      <file name="0520c998-6b3a-e93d-1bd6-53c5a918e591" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.CancelAsync">
      <topicdata group="api" />
      <apidata name="CancelAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ComponentModel.Composition.Initialization" module="System.ComponentModel.Composition.Initialization" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DeploymentCatalog" ref="true" />
      </containers>
      <file name="3b192469-3c43-f2a3-787d-6d8b2836cb46" />
    </api>
    <api id="E:System.ComponentModel.Composition.Hosting.DeploymentCatalog.Changed">
      <topicdata group="api" />
      <apidata name="Changed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Changed" />
      <remover name="remove_Changed" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changed">
          <type api="T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Initialization" module="System.ComponentModel.Composition.Initialization" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DeploymentCatalog" ref="true" />
      </containers>
      <file name="f4a7d133-2d7b-a9ab-59c7-e443d93790e8" />
    </api>
    <api id="E:System.ComponentModel.Composition.Hosting.DeploymentCatalog.Changing">
      <topicdata group="api" />
      <apidata name="Changing" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Changing" />
      <remover name="remove_Changing" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changing">
          <type api="T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition.Initialization" module="System.ComponentModel.Composition.Initialization" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DeploymentCatalog" ref="true" />
      </containers>
      <file name="21514511-a81a-f5ab-d31a-da1130f32fb6" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Composition.Hosting.DeploymentCatalog.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose(System.Boolean)">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition.Initialization" module="System.ComponentModel.Composition.Initialization" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DeploymentCatalog" ref="true" />
      </containers>
      <file name="8e07e11d-9bcf-1557-e054-deb31fdd87f4" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.DownloadAsync">
      <topicdata group="api" />
      <apidata name="DownloadAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ComponentModel.Composition.Initialization" module="System.ComponentModel.Composition.Initialization" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DeploymentCatalog" ref="true" />
      </containers>
      <file name="9284123c-f0a0-af02-2beb-63f48a849724" />
    </api>
    <api id="E:System.ComponentModel.Composition.Hosting.DeploymentCatalog.DownloadCompleted">
      <topicdata group="api" />
      <apidata name="DownloadCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_DownloadCompleted" />
      <remover name="remove_DownloadCompleted" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ComponentModel.Composition.Initialization" module="System.ComponentModel.Composition.Initialization" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DeploymentCatalog" ref="true" />
      </containers>
      <file name="b4598e91-08ef-84cb-46a2-d68161aef197" />
    </api>
    <api id="E:System.ComponentModel.Composition.Hosting.DeploymentCatalog.DownloadProgressChanged">
      <topicdata group="api" />
      <apidata name="DownloadProgressChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_DownloadProgressChanged" />
      <remover name="remove_DownloadProgressChanged" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Net.DownloadProgressChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Net.DownloadProgressChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ComponentModel.Composition.Initialization" module="System.ComponentModel.Composition.Initialization" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DeploymentCatalog" ref="true" />
      </containers>
      <file name="d77e8fb5-fe57-da30-7c45-5cbe16e0faf9" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
      <topicdata group="api" />
      <apidata name="GetExports" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="definition">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportDefinition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
                <type api="T:System.ComponentModel.Composition.Primitives.ExportDefinition" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Initialization" module="System.ComponentModel.Composition.Initialization" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DeploymentCatalog" ref="true" />
      </containers>
      <file name="b0eeae19-14c9-b1cd-1eb1-88753882e817" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="OnChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition.Initialization" module="System.ComponentModel.Composition.Initialization" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DeploymentCatalog" ref="true" />
      </containers>
      <file name="2330afca-e0ea-307d-9b1c-e29648c251e7" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="OnChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition.Initialization" module="System.ComponentModel.Composition.Initialization" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DeploymentCatalog" ref="true" />
      </containers>
      <file name="8a7e7f25-8138-f9c3-8288-9755b2120687" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnDownloadCompleted(System.ComponentModel.AsyncCompletedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnDownloadCompleted" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition.Initialization" module="System.ComponentModel.Composition.Initialization" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DeploymentCatalog" ref="true" />
      </containers>
      <file name="656ab9a3-a46c-b8be-8806-3523f6bb165a" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.DeploymentCatalog.OnDownloadProgressChanged(System.Net.DownloadProgressChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnDownloadProgressChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Net.DownloadProgressChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition.Initialization" module="System.ComponentModel.Composition.Initialization" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DeploymentCatalog" ref="true" />
      </containers>
      <file name="1ab085b2-921a-562b-aad1-d114f54d128a" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.DeploymentCatalog.Parts">
      <topicdata group="api" />
      <apidata name="Parts" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Parts">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Parts" />
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Initialization" module="System.ComponentModel.Composition.Initialization" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DeploymentCatalog" ref="true" />
      </containers>
      <file name="8d99d34f-0e49-db36-66a3-ff57c63510ec" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.DeploymentCatalog.Uri">
      <topicdata group="api" />
      <apidata name="Uri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Uri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition.Initialization" module="System.ComponentModel.Composition.Initialization" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.DeploymentCatalog" ref="true" />
      </containers>
      <file name="43ed4f66-db54-9983-9b95-e646a109b9d9" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.ExportProvider">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.ExportProvider" />
      <apidata name="ExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" ref="true" />
          <type api="T:System.ComponentModel.Composition.Hosting.AggregateExportProvider" ref="true" />
          <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartExportProvider" ref="true" />
          <type api="T:System.ComponentModel.Composition.Hosting.CompositionContainer" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="f95802a5-286e-b667-585b-12d48daac7ba" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.ExportProvider">
      <topicdata name="ExportProvider" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.ExportProvider" />
      <apidata name="ExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.#ctor" />
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged" />
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2(System.String)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" />
      </containers>
      <file name="3a782442-7bf7-774f-1f35-4c6c62c3689b" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Hosting.ExportProvider">
      <topicdata name="ExportProvider" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Hosting.ExportProvider" />
      <apidata name="ExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports">
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2(System.String)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" />
      </containers>
      <file name="7d68c871-c158-f30b-b931-8aaaa66e481f" />
    </api>
    <api id="Events.T:System.ComponentModel.Composition.Hosting.ExportProvider">
      <topicdata name="ExportProvider" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Composition.Hosting.ExportProvider" />
      <apidata name="ExportProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged" />
        <element api="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" />
      </containers>
      <file name="e509f25e-634a-45d7-9ec9-4445dc2c37b4" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport">
      <topicdata name="GetExport" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.ExportProvider" />
      <apidata name="GetExport" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="72d99097-c44a-cded-fd8a-b27039605253" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue">
      <topicdata name="GetExportedValue" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.ExportProvider" />
      <apidata name="GetExportedValue" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="89cb16ba-9272-6a66-e8e1-ae6b0b7f3ea8" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault">
      <topicdata name="GetExportedValueOrDefault" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.ExportProvider" />
      <apidata name="GetExportedValueOrDefault" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="d9f90113-0fc6-1acd-fa21-1e174b7df847" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues">
      <topicdata name="GetExportedValues" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.ExportProvider" />
      <apidata name="GetExportedValues" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="7557c6ae-c5fa-d0a1-572e-485c5f27f4ce" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports">
      <topicdata name="GetExports" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.ExportProvider" />
      <apidata name="GetExports" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2(System.String)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="bbf5b20c-ffad-b95a-7387-6121f1e130cc" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="1f9ab8f0-2912-5601-a4b5-3f4efd5b41d3" />
    </api>
    <api id="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged">
      <topicdata group="api" />
      <apidata name="ExportsChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ExportsChanged" />
      <remover name="remove_ExportsChanged" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="77491672-122f-6aa5-ac8d-751da53584e9" />
    </api>
    <api id="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging">
      <topicdata group="api" />
      <apidata name="ExportsChanging" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ExportsChanging" />
      <remover name="remove_ExportsChanging" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="fed08698-66de-5e43-85b1-ac9de5d72718" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1">
      <topicdata group="api" />
      <apidata name="GetExport" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <type api="T:System.Lazy`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="963c0daa-9738-c217-7ff4-159140fdd6df" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2">
      <topicdata group="api" />
      <apidata name="GetExport" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TMetadataView" />
      </templates>
      <returns>
        <type api="T:System.Lazy`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2" />
            <template name="TMetadataView" index="1" api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="9044e69d-8f3c-98b0-dae0-ff96b76ce2aa" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)">
      <topicdata group="api" />
      <apidata name="GetExport" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Lazy`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="f0d94660-da7f-1fcc-e021-fcf20304fc3c" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2(System.String)">
      <topicdata group="api" />
      <apidata name="GetExport" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TMetadataView" />
      </templates>
      <parameters>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Lazy`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2(System.String)" />
            <template name="TMetadataView" index="1" api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2(System.String)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="7a13093f-a5ac-5512-92ac-c68c53284a0b" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1">
      <topicdata group="api" />
      <apidata name="GetExportedValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="aac7747b-15a6-34df-5b1c-2490c1ca13a0" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)">
      <topicdata group="api" />
      <apidata name="GetExportedValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="6816b28d-0a2f-bf6c-db48-f4c95ffefeb3" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1">
      <topicdata group="api" />
      <apidata name="GetExportedValueOrDefault" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="465927fe-959a-d999-ce79-a7af6221a20d" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)">
      <topicdata group="api" />
      <apidata name="GetExportedValueOrDefault" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="f0fde4f1-633b-9fcd-da47-27415f116550" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1">
      <topicdata group="api" />
      <apidata name="GetExportedValues" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="41114376-2066-34fa-6500-10fe482d7a13" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)">
      <topicdata group="api" />
      <apidata name="GetExportedValues" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="a0e32a1a-ca0d-3835-e76f-53d8174b1d1c" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1">
      <topicdata group="api" />
      <apidata name="GetExports" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Lazy`1" ref="true">
              <specialization>
                <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="708a47e2-c2b2-dfa0-afbb-fb05cef37c3a" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2">
      <topicdata group="api" />
      <apidata name="GetExports" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TMetadataView" />
      </templates>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Lazy`2" ref="true">
              <specialization>
                <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2" />
                <template name="TMetadataView" index="1" api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="0b974905-1c6e-32e1-58ea-d473695787ac" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
      <topicdata group="api" />
      <apidata name="GetExports" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="definition">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportDefinition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.Export" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="0fb4ae34-9b9c-2c61-d205-589bae463644" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
      <topicdata group="api" />
      <apidata name="GetExports" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="definition">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportDefinition" ref="true" />
        </parameter>
        <parameter name="atomicComposition">
          <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.Export" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="07e5d7fd-1ef8-7253-9d27-415aa6c7dc93" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)">
      <topicdata group="api" />
      <apidata name="GetExports" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Lazy`1" ref="true">
              <specialization>
                <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="8cefaa31-4ce3-445c-13b2-aeae0d546672" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2(System.String)">
      <topicdata group="api" />
      <apidata name="GetExports" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TMetadataView" />
      </templates>
      <parameters>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Lazy`2" ref="true">
              <specialization>
                <template name="T" index="0" api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2(System.String)" />
                <template name="TMetadataView" index="1" api="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2(System.String)" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="987cb25a-17ec-552b-0594-fff02f06330c" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)">
      <topicdata group="api" />
      <apidata name="GetExports" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="metadataViewType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Lazy`2" ref="true">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="6017b0cb-a17e-30c9-06f6-70e6ff035b78" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
      <topicdata group="api" />
      <apidata name="GetExportsCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="definition">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportDefinition" ref="true" />
        </parameter>
        <parameter name="atomicComposition">
          <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.Export" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="e1cf576b-9ae0-b097-4697-c783ddf2575f" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="OnExportsChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="49fe4b6f-b2ce-2318-e077-e64dbd9688cb" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)">
      <topicdata group="api" />
      <apidata name="OnExportsChanging" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="fbd73a1c-687a-4fca-c1f9-6e97e85b16df" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)">
      <topicdata group="api" />
      <apidata name="TryGetExports" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="definition">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportDefinition" ref="true" />
        </parameter>
        <parameter name="atomicComposition">
          <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
        </parameter>
        <parameter name="exports" out="true">
          <referenceTo>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ComponentModel.Composition.Primitives.Export" ref="true" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
      </containers>
      <file name="8890bce3-1323-44d2-707f-1c77945489a6" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" />
      <apidata name="ExportsChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="4dff6d94-2920-43ee-9207-94f5a8dbbb91" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs">
      <topicdata name="ExportsChangeEventArgs" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" />
      <apidata name="ExportsChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition},System.ComponentModel.Composition.Hosting.AtomicComposition)" />
        <element api="P:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs.AddedExports" />
        <element api="P:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs.AtomicComposition" />
        <element api="P:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs.ChangedContractNames" />
        <element api="P:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs.RemovedExports" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" />
      </containers>
      <file name="32185601-d99c-b34f-712c-dd7052ec32b9" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs">
      <topicdata name="ExportsChangeEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" />
      <apidata name="ExportsChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" />
      </containers>
      <file name="8b3cb16a-4772-36ac-9dbe-97451b834ee4" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs">
      <topicdata name="ExportsChangeEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" />
      <apidata name="ExportsChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs.AddedExports" />
        <element api="P:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs.AtomicComposition" />
        <element api="P:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs.ChangedContractNames" />
        <element api="P:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs.RemovedExports" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" />
      </containers>
      <file name="e370f3c2-877e-4a4c-474d-26b345c6760c" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition},System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition},System.ComponentModel.Composition.Hosting.AtomicComposition)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="addedExports">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Primitives.ExportDefinition" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="removedExports">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.ComponentModel.Composition.Primitives.ExportDefinition" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="atomicComposition">
          <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" ref="true" />
      </containers>
      <file name="73dba646-b14e-e97e-c697-b2ba256f5810" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs.AddedExports">
      <topicdata group="api" />
      <apidata name="AddedExports" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AddedExports" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.ExportDefinition" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" ref="true" />
      </containers>
      <file name="e3bc7a61-aef9-e58b-4193-ff6caed48bdb" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs.AtomicComposition">
      <topicdata group="api" />
      <apidata name="AtomicComposition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AtomicComposition" />
      <returns>
        <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" ref="true" />
      </containers>
      <file name="d1362e5a-6dbc-0c04-3f47-32a10baf1c7e" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs.ChangedContractNames">
      <topicdata group="api" />
      <apidata name="ChangedContractNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ChangedContractNames" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" ref="true" />
      </containers>
      <file name="60d7adaf-191e-49a3-aa5f-c920d9e60954" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs.RemovedExports">
      <topicdata group="api" />
      <apidata name="RemovedExports" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RemovedExports" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.ExportDefinition" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" ref="true" />
      </containers>
      <file name="1dbfd457-4464-5749-a1fc-8b3249fd37f1" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.ImportEngine">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.ImportEngine" />
      <apidata name="ImportEngine" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.Composition.ICompositionService" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="97bb2709-7933-5d27-7218-fc53372aa29e" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.ImportEngine">
      <topicdata name="ImportEngine" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.ImportEngine" />
      <apidata name="ImportEngine" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object)" source="extension">
          <apidata name="SatisfyImportsOnce" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="attributedPart">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor">
          <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider)" />
          <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider,System.Boolean)" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose">
          <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.PreviewImports(System.ComponentModel.Composition.Primitives.ComposablePart,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.ReleaseImports(System.ComponentModel.Composition.Primitives.ComposablePart,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.SatisfyImports(System.ComponentModel.Composition.Primitives.ComposablePart)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ImportEngine" />
      </containers>
      <file name="4f5e8cb6-c70f-57cf-50bc-6e573e9c6339" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Hosting.ImportEngine">
      <topicdata name="ImportEngine" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Hosting.ImportEngine" />
      <apidata name="ImportEngine" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.Composition.AttributedModelServices.SatisfyImportsOnce(System.ComponentModel.Composition.ICompositionService,System.Object)" source="extension">
          <apidata name="SatisfyImportsOnce" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="attributedPart">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
          </returns>
          <containers>
            <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.ComponentModel.Composition" />
            <type api="T:System.ComponentModel.Composition.AttributedModelServices" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose">
          <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.PreviewImports(System.ComponentModel.Composition.Primitives.ComposablePart,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.ReleaseImports(System.ComponentModel.Composition.Primitives.ComposablePart,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.SatisfyImports(System.ComponentModel.Composition.Primitives.ComposablePart)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ImportEngine" />
      </containers>
      <file name="e25a9912-9de5-560c-e298-e0d6a4b7eef8" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.ImportEngine" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider)" />
        <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ImportEngine" ref="true" />
      </containers>
      <file name="9e79f673-57d2-6648-f526-c4e1acd927ef" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.ImportEngine" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose" />
        <element api="M:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ImportEngine" ref="true" />
      </containers>
      <file name="92dc136b-8337-10e2-12e4-b1f76410c22b" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor" />
      <parameters>
        <parameter name="sourceProvider">
          <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ImportEngine" ref="true" />
      </containers>
      <file name="c1b2be03-7a06-a208-f9c8-2caa6473d93d" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.ImportEngine.#ctor" />
      <parameters>
        <parameter name="sourceProvider">
          <type api="T:System.ComponentModel.Composition.Hosting.ExportProvider" ref="true" />
        </parameter>
        <parameter name="isThreadSafe">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ImportEngine" ref="true" />
      </containers>
      <file name="93d201f2-d881-c167-da14-dab0e0a33bf9" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ImportEngine" ref="true" />
      </containers>
      <file name="417d1a2a-b940-abfd-941c-b472dd9cfd90" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Composition.Hosting.ImportEngine.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ImportEngine" ref="true" />
      </containers>
      <file name="c301449e-3ffd-6182-9428-7b6c04e767b3" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ImportEngine.PreviewImports(System.ComponentModel.Composition.Primitives.ComposablePart,System.ComponentModel.Composition.Hosting.AtomicComposition)">
      <topicdata group="api" />
      <apidata name="PreviewImports" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="part">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
        </parameter>
        <parameter name="atomicComposition">
          <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ImportEngine" ref="true" />
      </containers>
      <file name="6b4a7223-d956-3a0c-871a-66ec8939f5e1" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ImportEngine.ReleaseImports(System.ComponentModel.Composition.Primitives.ComposablePart,System.ComponentModel.Composition.Hosting.AtomicComposition)">
      <topicdata group="api" />
      <apidata name="ReleaseImports" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="part">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
        </parameter>
        <parameter name="atomicComposition">
          <type api="T:System.ComponentModel.Composition.Hosting.AtomicComposition" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ImportEngine" ref="true" />
      </containers>
      <file name="91326edd-52f2-2324-db7f-aae9235a57d3" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ImportEngine.SatisfyImports(System.ComponentModel.Composition.Primitives.ComposablePart)">
      <topicdata group="api" />
      <apidata name="SatisfyImports" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="part">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ImportEngine" ref="true" />
      </containers>
      <file name="41d583db-ee2f-b5fc-3034-8f9ee35cbba6" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.ImportEngine.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)">
      <topicdata group="api" />
      <apidata name="SatisfyImportsOnce" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="part">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePart" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.ComponentModel.Composition.ICompositionService.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)">
          <type api="T:System.ComponentModel.Composition.ICompositionService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.ImportEngine" ref="true" />
      </containers>
      <file name="5b49de94-5826-3c49-d01f-c5ffc6f4c622" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged" />
      <apidata name="INotifyComposablePartCatalogChanged" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" ref="true" />
        <type api="T:System.ComponentModel.Composition.Hosting.DeploymentCatalog" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="7bee59b0-18a8-78d2-1e0c-7fb5b58e305b" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged">
      <topicdata name="INotifyComposablePartCatalogChanged" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged" />
      <apidata name="INotifyComposablePartCatalogChanged" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changed" />
        <element api="E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changing" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged" />
      </containers>
      <file name="964058ae-6f5a-625e-7bf5-8a095a012bff" />
    </api>
    <api id="Events.T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged">
      <topicdata name="INotifyComposablePartCatalogChanged" group="list" subgroup="Events" typeTopicId="T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged" />
      <apidata name="INotifyComposablePartCatalogChanged" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changed" />
        <element api="E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changing" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged" />
      </containers>
      <file name="494ac5a8-d0c4-acf9-5fcd-1135956d276a" />
    </api>
    <api id="E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changed">
      <topicdata group="api" />
      <apidata name="Changed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Changed" />
      <remover name="remove_Changed" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged" ref="true" />
      </containers>
      <file name="57a53253-3584-b43b-3660-80936c02313f" />
    </api>
    <api id="E:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged.Changing">
      <topicdata group="api" />
      <apidata name="Changing" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Changing" />
      <remover name="remove_Changing" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.INotifyComposablePartCatalogChanged" ref="true" />
      </containers>
      <file name="9d4fdea5-6e13-09e2-9965-d35d2793b37b" />
    </api>
    <api id="T:System.ComponentModel.Composition.Hosting.TypeCatalog">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.TypeCatalog" />
      <apidata name="TypeCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
      </containers>
      <file name="42d3c82e-6afd-d65a-0810-8b0bf563682b" />
    </api>
    <api id="AllMembers.T:System.ComponentModel.Composition.Hosting.TypeCatalog">
      <topicdata name="TypeCatalog" group="list" subgroup="members" typeTopicId="T:System.ComponentModel.Composition.Hosting.TypeCatalog" />
      <apidata name="TypeCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor">
          <element api="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type})" />
          <element api="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Type[])" />
        </element>
        <element api="Overload:System.ComponentModel.Composition.Hosting.TypeCatalog.Dispose">
          <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.TypeCatalog.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.TypeCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
        <element api="P:System.ComponentModel.Composition.Hosting.TypeCatalog.Parts" />
        <element api="P:System.ComponentModel.Composition.Hosting.TypeCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName" />
        <element api="P:System.ComponentModel.Composition.Hosting.TypeCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin" />
        <element api="M:System.ComponentModel.Composition.Hosting.TypeCatalog.ToString" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.TypeCatalog" />
      </containers>
      <file name="e71e77d3-0123-d3e1-79d7-ed901d83e615" />
    </api>
    <api id="Methods.T:System.ComponentModel.Composition.Hosting.TypeCatalog">
      <topicdata name="TypeCatalog" group="list" subgroup="Methods" typeTopicId="T:System.ComponentModel.Composition.Hosting.TypeCatalog" />
      <apidata name="TypeCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ComponentModel.Composition.Hosting.TypeCatalog.Dispose">
          <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose" />
          <element api="M:System.ComponentModel.Composition.Hosting.TypeCatalog.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.ComponentModel.Composition.Hosting.TypeCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
        <element api="M:System.ComponentModel.Composition.Hosting.TypeCatalog.ToString" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.TypeCatalog" />
      </containers>
      <file name="663478da-fa49-36cd-3266-c1fd30154c2c" />
    </api>
    <api id="Properties.T:System.ComponentModel.Composition.Hosting.TypeCatalog">
      <topicdata name="TypeCatalog" group="list" subgroup="Properties" typeTopicId="T:System.ComponentModel.Composition.Hosting.TypeCatalog" />
      <apidata name="TypeCatalog" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.Composition.Hosting.TypeCatalog.Parts" />
        <element api="P:System.ComponentModel.Composition.Hosting.TypeCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName" />
        <element api="P:System.ComponentModel.Composition.Hosting.TypeCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.TypeCatalog" />
      </containers>
      <file name="dcb905a5-eeff-3467-918c-29cc6f678aba" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.TypeCatalog" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type})" />
        <element api="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Type[])" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.TypeCatalog" ref="true" />
      </containers>
      <file name="d733d173-fdd4-3fda-012c-b383856103e0" />
    </api>
    <api id="Overload:System.ComponentModel.Composition.Hosting.TypeCatalog.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ComponentModel.Composition.Hosting.TypeCatalog" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose" />
        <element api="M:System.ComponentModel.Composition.Hosting.TypeCatalog.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.TypeCatalog" ref="true" />
      </containers>
      <file name="05324694-d2f7-c489-edbd-9cdf72d68d31" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Collections.Generic.IEnumerable{System.Type})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor" />
      <parameters>
        <parameter name="types">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.TypeCatalog" ref="true" />
      </containers>
      <file name="f5bcee13-b458-1586-b549-d3f18aaba448" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor(System.Type[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ComponentModel.Composition.Hosting.TypeCatalog.#ctor" />
      <parameters>
        <parameter name="types" params="true">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.TypeCatalog" ref="true" />
      </containers>
      <file name="e91ef99d-eb0d-f579-2233-8bd18dc2ac3d" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.TypeCatalog.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ComponentModel.Composition.Hosting.TypeCatalog.Dispose" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Dispose(System.Boolean)">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.TypeCatalog" ref="true" />
      </containers>
      <file name="fb4cca63-4d03-ae1c-4fe5-1e0835d2b692" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.TypeCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
      <topicdata group="api" />
      <apidata name="GetExports" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="definition">
          <type api="T:System.ComponentModel.Composition.Primitives.ImportDefinition" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
                <type api="T:System.ComponentModel.Composition.Primitives.ExportDefinition" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.TypeCatalog" ref="true" />
      </containers>
      <file name="1ebb9043-ee15-e881-0733-6f9bb3b07b35" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.TypeCatalog.Parts">
      <topicdata group="api" />
      <apidata name="Parts" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ComponentModel.Composition.Primitives.ComposablePartCatalog.Parts">
          <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Parts" />
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <type api="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.TypeCatalog" ref="true" />
      </containers>
      <file name="1fcbd3da-3de8-abcb-b3d8-6d5e62947d35" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.TypeCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#DisplayName">
      <topicdata group="api" eiiName="ICompositionElement.DisplayName" />
      <apidata name="DisplayName" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.Composition.Primitives.ICompositionElement.DisplayName">
          <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.TypeCatalog" ref="true" />
      </containers>
      <file name="5eec66f7-3ad6-fac0-c8e1-83a01ce618c6" />
    </api>
    <api id="P:System.ComponentModel.Composition.Hosting.TypeCatalog.System#ComponentModel#Composition#Primitives#ICompositionElement#Origin">
      <topicdata group="api" eiiName="ICompositionElement.Origin" />
      <apidata name="Origin" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.ComponentModel.Composition.Primitives.ICompositionElement.Origin" />
      <returns>
        <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
      </returns>
      <implements>
        <member api="P:System.ComponentModel.Composition.Primitives.ICompositionElement.Origin">
          <type api="T:System.ComponentModel.Composition.Primitives.ICompositionElement" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.TypeCatalog" ref="true" />
      </containers>
      <file name="81be493e-e119-e59b-3344-c41db5b06083" />
    </api>
    <api id="M:System.ComponentModel.Composition.Hosting.TypeCatalog.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ComponentModel.Composition" module="System.ComponentModel.Composition" kind="DynamicallyLinkedLibrary">
          <assemblydata version="5.0.61118.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ComponentModel.Composition.Hosting" />
        <type api="T:System.ComponentModel.Composition.Hosting.TypeCatalog" ref="true" />
      </containers>
      <file name="8542d0d8-6343-245a-ca47-cc436d466402" />
    </api>
  </apis>
</reflection>