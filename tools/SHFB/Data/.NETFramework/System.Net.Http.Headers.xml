<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.Net.Http">
      <assemblydata version="4.0.0.0" culture="" key="002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Net.Http.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Net.Http.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Net.Http.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\FinalPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.Net.Http.Headers">
      <topicdata group="api" />
      <apidata name="System.Net.Http.Headers" group="namespace" />
      <elements>
        <element api="T:System.Net.Http.Headers.AuthenticationHeaderValue" />
        <element api="T:System.Net.Http.Headers.CacheControlHeaderValue" />
        <element api="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />
        <element api="T:System.Net.Http.Headers.ContentRangeHeaderValue" />
        <element api="T:System.Net.Http.Headers.EntityTagHeaderValue" />
        <element api="T:System.Net.Http.Headers.HttpContentHeaders" />
        <element api="T:System.Net.Http.Headers.HttpHeaders" />
        <element api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
        <element api="T:System.Net.Http.Headers.HttpRequestHeaders" />
        <element api="T:System.Net.Http.Headers.HttpResponseHeaders" />
        <element api="T:System.Net.Http.Headers.MediaTypeHeaderValue" />
        <element api="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />
        <element api="T:System.Net.Http.Headers.NameValueHeaderValue" />
        <element api="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />
        <element api="T:System.Net.Http.Headers.ProductHeaderValue" />
        <element api="T:System.Net.Http.Headers.ProductInfoHeaderValue" />
        <element api="T:System.Net.Http.Headers.RangeConditionHeaderValue" />
        <element api="T:System.Net.Http.Headers.RangeHeaderValue" />
        <element api="T:System.Net.Http.Headers.RangeItemHeaderValue" />
        <element api="T:System.Net.Http.Headers.RetryConditionHeaderValue" />
        <element api="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />
        <element api="T:System.Net.Http.Headers.TransferCodingHeaderValue" />
        <element api="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />
        <element api="T:System.Net.Http.Headers.ViaHeaderValue" />
        <element api="T:System.Net.Http.Headers.WarningHeaderValue" />
      </elements>
      <file name="20b1ef79-b052-337d-7cd1-d360e5d402c7" />
    </api>
    <api id="T:System.Net.Http.Headers.AuthenticationHeaderValue">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.AuthenticationHeaderValue" />
      <apidata name="AuthenticationHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
      </containers>
      <file name="e8346c29-82d9-2faf-2404-8da95a674f3a" />
    </api>
    <api id="AllMembers.T:System.Net.Http.Headers.AuthenticationHeaderValue">
      <topicdata name="AuthenticationHeaderValue" group="list" subgroup="members" typeTopicId="T:System.Net.Http.Headers.AuthenticationHeaderValue" />
      <apidata name="AuthenticationHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor">
          <element api="M:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor(System.String)" />
          <element api="M:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor(System.String,System.String)" />
        </element>
        <element api="M:System.Net.Http.Headers.AuthenticationHeaderValue.Equals(System.Object)" />
        <element api="M:System.Net.Http.Headers.AuthenticationHeaderValue.GetHashCode" />
        <element api="P:System.Net.Http.Headers.AuthenticationHeaderValue.Parameter" />
        <element api="M:System.Net.Http.Headers.AuthenticationHeaderValue.Parse(System.String)" />
        <element api="P:System.Net.Http.Headers.AuthenticationHeaderValue.Scheme" />
        <element api="M:System.Net.Http.Headers.AuthenticationHeaderValue.System#ICloneable#Clone" />
        <element api="M:System.Net.Http.Headers.AuthenticationHeaderValue.ToString" />
        <element api="M:System.Net.Http.Headers.AuthenticationHeaderValue.TryParse(System.String,System.Net.Http.Headers.AuthenticationHeaderValue@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" />
      </containers>
      <file name="8688fa0f-b02b-3f31-777c-d386c7e11b62" />
    </api>
    <api id="Methods.T:System.Net.Http.Headers.AuthenticationHeaderValue">
      <topicdata name="AuthenticationHeaderValue" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.Headers.AuthenticationHeaderValue" />
      <apidata name="AuthenticationHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Net.Http.Headers.AuthenticationHeaderValue.Equals(System.Object)" />
        <element api="M:System.Net.Http.Headers.AuthenticationHeaderValue.GetHashCode" />
        <element api="M:System.Net.Http.Headers.AuthenticationHeaderValue.Parse(System.String)" />
        <element api="M:System.Net.Http.Headers.AuthenticationHeaderValue.System#ICloneable#Clone" />
        <element api="M:System.Net.Http.Headers.AuthenticationHeaderValue.ToString" />
        <element api="M:System.Net.Http.Headers.AuthenticationHeaderValue.TryParse(System.String,System.Net.Http.Headers.AuthenticationHeaderValue@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" />
      </containers>
      <file name="dd32219a-0328-c0d9-54d0-cb4617d54b85" />
    </api>
    <api id="Properties.T:System.Net.Http.Headers.AuthenticationHeaderValue">
      <topicdata name="AuthenticationHeaderValue" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.Headers.AuthenticationHeaderValue" />
      <apidata name="AuthenticationHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Net.Http.Headers.AuthenticationHeaderValue.Parameter" />
        <element api="P:System.Net.Http.Headers.AuthenticationHeaderValue.Scheme" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" />
      </containers>
      <file name="d8fc47f3-390b-14ee-1c74-85628b75b7b5" />
    </api>
    <api id="Overload:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.AuthenticationHeaderValue" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor(System.String)" />
        <element api="M:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
      </containers>
      <file name="e7143ce6-5819-84d8-ffa4-450017aa13b7" />
    </api>
    <api id="M:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor" />
      <parameters>
        <parameter name="scheme">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
      </containers>
      <file name="5aecdd87-b81b-1eed-599c-c6e402a24886" />
    </api>
    <api id="M:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.AuthenticationHeaderValue.#ctor" />
      <parameters>
        <parameter name="scheme">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
      </containers>
      <file name="0f594d7b-5727-81fd-47cc-440cf99fe135" />
    </api>
    <api id="M:System.Net.Http.Headers.AuthenticationHeaderValue.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
      </containers>
      <file name="6991c416-7812-e3fa-0e04-a7017022cc1f" />
    </api>
    <api id="M:System.Net.Http.Headers.AuthenticationHeaderValue.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
      </containers>
      <file name="188a4eb4-b2a2-810c-5bd2-f015ad2ff1f4" />
    </api>
    <api id="P:System.Net.Http.Headers.AuthenticationHeaderValue.Parameter">
      <topicdata group="api" />
      <apidata name="Parameter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parameter" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
      </containers>
      <file name="0e9dc0c4-c52c-acdf-6c46-c5b4f5ecdd02" />
    </api>
    <api id="M:System.Net.Http.Headers.AuthenticationHeaderValue.Parse(System.String)">
      <topicdata group="api" />
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
      </containers>
      <file name="7f9894ff-3058-f2a1-ba8d-39447be801a5" />
    </api>
    <api id="P:System.Net.Http.Headers.AuthenticationHeaderValue.Scheme">
      <topicdata group="api" />
      <apidata name="Scheme" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Scheme" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
      </containers>
      <file name="d8ee7d6e-46b5-66db-fdee-95355c040a7a" />
    </api>
    <api id="M:System.Net.Http.Headers.AuthenticationHeaderValue.System#ICloneable#Clone">
      <topicdata group="api" eiiName="ICloneable.Clone" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICloneable.Clone">
          <type api="T:System.ICloneable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
      </containers>
      <file name="e493830e-130f-2d9b-7785-cab150691e8a" />
    </api>
    <api id="M:System.Net.Http.Headers.AuthenticationHeaderValue.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
      </containers>
      <file name="619aaa5f-005e-6ad1-b949-59619d9c4d82" />
    </api>
    <api id="M:System.Net.Http.Headers.AuthenticationHeaderValue.TryParse(System.String,System.Net.Http.Headers.AuthenticationHeaderValue@)">
      <topicdata group="api" />
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parsedValue" out="true">
          <referenceTo>
            <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
      </containers>
      <file name="f1911a7b-74c2-be94-a4de-aef046388c2a" />
    </api>
    <api id="T:System.Net.Http.Headers.CacheControlHeaderValue">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.CacheControlHeaderValue" />
      <apidata name="CacheControlHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.Http.Headers.CacheControlHeaderValue.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
      </containers>
      <file name="1d4a397d-fb3a-d37d-5f0d-783a0c8ea6c3" />
    </api>
    <api id="AllMembers.T:System.Net.Http.Headers.CacheControlHeaderValue">
      <topicdata name="CacheControlHeaderValue" group="list" subgroup="members" typeTopicId="T:System.Net.Http.Headers.CacheControlHeaderValue" />
      <apidata name="CacheControlHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.Http.Headers.CacheControlHeaderValue.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Net.Http.Headers.CacheControlHeaderValue.#ctor" />
        <element api="M:System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)" />
        <element api="P:System.Net.Http.Headers.CacheControlHeaderValue.Extensions" />
        <element api="M:System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode" />
        <element api="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxAge" />
        <element api="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale" />
        <element api="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit" />
        <element api="P:System.Net.Http.Headers.CacheControlHeaderValue.MinFresh" />
        <element api="P:System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate" />
        <element api="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCache" />
        <element api="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders" />
        <element api="P:System.Net.Http.Headers.CacheControlHeaderValue.NoStore" />
        <element api="P:System.Net.Http.Headers.CacheControlHeaderValue.NoTransform" />
        <element api="P:System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached" />
        <element api="M:System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)" />
        <element api="P:System.Net.Http.Headers.CacheControlHeaderValue.Private" />
        <element api="P:System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders" />
        <element api="P:System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate" />
        <element api="P:System.Net.Http.Headers.CacheControlHeaderValue.Public" />
        <element api="P:System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge" />
        <element api="M:System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone" />
        <element api="M:System.Net.Http.Headers.CacheControlHeaderValue.ToString" />
        <element api="M:System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.CacheControlHeaderValue" />
      </containers>
      <file name="5f81b403-e531-2c17-50b0-57ed0210e2be" />
    </api>
    <api id="Methods.T:System.Net.Http.Headers.CacheControlHeaderValue">
      <topicdata name="CacheControlHeaderValue" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.Headers.CacheControlHeaderValue" />
      <apidata name="CacheControlHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.Http.Headers.CacheControlHeaderValue.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)" />
        <element api="M:System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode" />
        <element api="M:System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)" />
        <element api="M:System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone" />
        <element api="M:System.Net.Http.Headers.CacheControlHeaderValue.ToString" />
        <element api="M:System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.CacheControlHeaderValue" />
      </containers>
      <file name="b07a0141-9dd7-ef43-9b30-a28bb195c229" />
    </api>
    <api id="Properties.T:System.Net.Http.Headers.CacheControlHeaderValue">
      <topicdata name="CacheControlHeaderValue" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.Headers.CacheControlHeaderValue" />
      <apidata name="CacheControlHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.Http.Headers.CacheControlHeaderValue.#ctor" />
      <elements>
        <element api="P:System.Net.Http.Headers.CacheControlHeaderValue.Extensions" />
        <element api="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxAge" />
        <element api="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale" />
        <element api="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit" />
        <element api="P:System.Net.Http.Headers.CacheControlHeaderValue.MinFresh" />
        <element api="P:System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate" />
        <element api="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCache" />
        <element api="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders" />
        <element api="P:System.Net.Http.Headers.CacheControlHeaderValue.NoStore" />
        <element api="P:System.Net.Http.Headers.CacheControlHeaderValue.NoTransform" />
        <element api="P:System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached" />
        <element api="P:System.Net.Http.Headers.CacheControlHeaderValue.Private" />
        <element api="P:System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders" />
        <element api="P:System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate" />
        <element api="P:System.Net.Http.Headers.CacheControlHeaderValue.Public" />
        <element api="P:System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.CacheControlHeaderValue" />
      </containers>
      <file name="9aa88333-0f20-03da-aef8-1457094dc585" />
    </api>
    <api id="M:System.Net.Http.Headers.CacheControlHeaderValue.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.CacheControlHeaderValue" ref="true" />
      </containers>
      <file name="c30e1601-8dd8-fe63-62ae-e0c1067dbb07" />
    </api>
    <api id="M:System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.CacheControlHeaderValue" ref="true" />
      </containers>
      <file name="da2c30c8-7e2f-8f43-ebcf-064dc8f20066" />
    </api>
    <api id="P:System.Net.Http.Headers.CacheControlHeaderValue.Extensions">
      <topicdata group="api" />
      <apidata name="Extensions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Extensions" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.Headers.NameValueHeaderValue" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.CacheControlHeaderValue" ref="true" />
      </containers>
      <file name="4dae5470-23cf-6fc1-c9a1-37ef5d4e25f5" />
    </api>
    <api id="M:System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.CacheControlHeaderValue" ref="true" />
      </containers>
      <file name="5f384925-8939-430f-a8da-4db7c6047fd6" />
    </api>
    <api id="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxAge">
      <topicdata group="api" />
      <apidata name="MaxAge" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxAge" />
      <setter name="set_MaxAge" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.TimeSpan" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.CacheControlHeaderValue" ref="true" />
      </containers>
      <file name="6b1a9309-1b8c-a6f9-bb5c-42629dbf7c75" />
    </api>
    <api id="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale">
      <topicdata group="api" />
      <apidata name="MaxStale" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxStale" />
      <setter name="set_MaxStale" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.CacheControlHeaderValue" ref="true" />
      </containers>
      <file name="9668f517-a94c-fa4e-8900-6041f47377d6" />
    </api>
    <api id="P:System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit">
      <topicdata group="api" />
      <apidata name="MaxStaleLimit" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxStaleLimit" />
      <setter name="set_MaxStaleLimit" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.TimeSpan" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.CacheControlHeaderValue" ref="true" />
      </containers>
      <file name="274f42ee-e0d0-6f60-8519-5fb608574b75" />
    </api>
    <api id="P:System.Net.Http.Headers.CacheControlHeaderValue.MinFresh">
      <topicdata group="api" />
      <apidata name="MinFresh" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MinFresh" />
      <setter name="set_MinFresh" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.TimeSpan" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.CacheControlHeaderValue" ref="true" />
      </containers>
      <file name="1e3cd7b6-61b7-756f-c7d1-1384f4577c21" />
    </api>
    <api id="P:System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate">
      <topicdata group="api" />
      <apidata name="MustRevalidate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MustRevalidate" />
      <setter name="set_MustRevalidate" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.CacheControlHeaderValue" ref="true" />
      </containers>
      <file name="6a81a30d-5011-5802-31a1-e16bd98f772b" />
    </api>
    <api id="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCache">
      <topicdata group="api" />
      <apidata name="NoCache" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NoCache" />
      <setter name="set_NoCache" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.CacheControlHeaderValue" ref="true" />
      </containers>
      <file name="f33de4c8-4b54-57f7-39de-d6c8ba30823f" />
    </api>
    <api id="P:System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders">
      <topicdata group="api" />
      <apidata name="NoCacheHeaders" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NoCacheHeaders" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.CacheControlHeaderValue" ref="true" />
      </containers>
      <file name="fc8b2999-f27a-e203-c96e-5cc36f68d577" />
    </api>
    <api id="P:System.Net.Http.Headers.CacheControlHeaderValue.NoStore">
      <topicdata group="api" />
      <apidata name="NoStore" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NoStore" />
      <setter name="set_NoStore" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.CacheControlHeaderValue" ref="true" />
      </containers>
      <file name="5747b983-5e77-e591-2bfb-92e786d0ba77" />
    </api>
    <api id="P:System.Net.Http.Headers.CacheControlHeaderValue.NoTransform">
      <topicdata group="api" />
      <apidata name="NoTransform" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NoTransform" />
      <setter name="set_NoTransform" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.CacheControlHeaderValue" ref="true" />
      </containers>
      <file name="516dbe04-476c-6224-4e09-cc1967253ac4" />
    </api>
    <api id="P:System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached">
      <topicdata group="api" />
      <apidata name="OnlyIfCached" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OnlyIfCached" />
      <setter name="set_OnlyIfCached" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.CacheControlHeaderValue" ref="true" />
      </containers>
      <file name="31766687-c619-d09e-8509-4bb0de4a8524" />
    </api>
    <api id="M:System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)">
      <topicdata group="api" />
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.Headers.CacheControlHeaderValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.CacheControlHeaderValue" ref="true" />
      </containers>
      <file name="966079b0-886f-0507-dbeb-d2399e2d9146" />
    </api>
    <api id="P:System.Net.Http.Headers.CacheControlHeaderValue.Private">
      <topicdata group="api" />
      <apidata name="Private" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Private" />
      <setter name="set_Private" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.CacheControlHeaderValue" ref="true" />
      </containers>
      <file name="fb51b4d9-5a63-2b18-4075-15ebdac3f34c" />
    </api>
    <api id="P:System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders">
      <topicdata group="api" />
      <apidata name="PrivateHeaders" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PrivateHeaders" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.CacheControlHeaderValue" ref="true" />
      </containers>
      <file name="aa32beca-4f77-4d36-d50e-96e489f1a8cd" />
    </api>
    <api id="P:System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate">
      <topicdata group="api" />
      <apidata name="ProxyRevalidate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ProxyRevalidate" />
      <setter name="set_ProxyRevalidate" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.CacheControlHeaderValue" ref="true" />
      </containers>
      <file name="d639edfd-1c0a-a54e-ec82-dcb16a12ec95" />
    </api>
    <api id="P:System.Net.Http.Headers.CacheControlHeaderValue.Public">
      <topicdata group="api" />
      <apidata name="Public" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Public" />
      <setter name="set_Public" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.CacheControlHeaderValue" ref="true" />
      </containers>
      <file name="bef0fa22-ad10-544e-ea93-2692ad0a2664" />
    </api>
    <api id="P:System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge">
      <topicdata group="api" />
      <apidata name="SharedMaxAge" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SharedMaxAge" />
      <setter name="set_SharedMaxAge" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.TimeSpan" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.CacheControlHeaderValue" ref="true" />
      </containers>
      <file name="f9999159-d0f0-7b40-3259-d721a3501eb3" />
    </api>
    <api id="M:System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone">
      <topicdata group="api" eiiName="ICloneable.Clone" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICloneable.Clone">
          <type api="T:System.ICloneable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.CacheControlHeaderValue" ref="true" />
      </containers>
      <file name="20ba6119-760b-3da3-f30b-5c55be8237ba" />
    </api>
    <api id="M:System.Net.Http.Headers.CacheControlHeaderValue.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.CacheControlHeaderValue" ref="true" />
      </containers>
      <file name="1d6c2427-02e9-a8ad-32bf-7f5cde1b7459" />
    </api>
    <api id="M:System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)">
      <topicdata group="api" />
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parsedValue" out="true">
          <referenceTo>
            <type api="T:System.Net.Http.Headers.CacheControlHeaderValue" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.CacheControlHeaderValue" ref="true" />
      </containers>
      <file name="e081dc39-33dd-0e55-2719-9c20f7b53d7e" />
    </api>
    <api id="T:System.Net.Http.Headers.ContentDispositionHeaderValue">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.ContentDispositionHeaderValue" />
      <apidata name="ContentDispositionHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
      </containers>
      <file name="ee22d18b-bac9-9295-df6c-d0ac5070d873" />
    </api>
    <api id="AllMembers.T:System.Net.Http.Headers.ContentDispositionHeaderValue">
      <topicdata name="ContentDispositionHeaderValue" group="list" subgroup="members" typeTopicId="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />
      <apidata name="ContentDispositionHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.Http.Headers.ContentDispositionHeaderValue.#ctor">
          <element api="M:System.Net.Http.Headers.ContentDispositionHeaderValue.#ctor(System.Net.Http.Headers.ContentDispositionHeaderValue)" />
          <element api="M:System.Net.Http.Headers.ContentDispositionHeaderValue.#ctor(System.String)" />
        </element>
        <element api="P:System.Net.Http.Headers.ContentDispositionHeaderValue.CreationDate" />
        <element api="P:System.Net.Http.Headers.ContentDispositionHeaderValue.DispositionType" />
        <element api="M:System.Net.Http.Headers.ContentDispositionHeaderValue.Equals(System.Object)" />
        <element api="P:System.Net.Http.Headers.ContentDispositionHeaderValue.FileName" />
        <element api="P:System.Net.Http.Headers.ContentDispositionHeaderValue.FileNameStar" />
        <element api="M:System.Net.Http.Headers.ContentDispositionHeaderValue.GetHashCode" />
        <element api="P:System.Net.Http.Headers.ContentDispositionHeaderValue.ModificationDate" />
        <element api="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Name" />
        <element api="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Parameters" />
        <element api="M:System.Net.Http.Headers.ContentDispositionHeaderValue.Parse(System.String)" />
        <element api="P:System.Net.Http.Headers.ContentDispositionHeaderValue.ReadDate" />
        <element api="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Size" />
        <element api="M:System.Net.Http.Headers.ContentDispositionHeaderValue.System#ICloneable#Clone" />
        <element api="M:System.Net.Http.Headers.ContentDispositionHeaderValue.ToString" />
        <element api="M:System.Net.Http.Headers.ContentDispositionHeaderValue.TryParse(System.String,System.Net.Http.Headers.ContentDispositionHeaderValue@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />
      </containers>
      <file name="074b8cac-2130-811a-1a64-3d52c3a3b5ed" />
    </api>
    <api id="Methods.T:System.Net.Http.Headers.ContentDispositionHeaderValue">
      <topicdata name="ContentDispositionHeaderValue" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />
      <apidata name="ContentDispositionHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Net.Http.Headers.ContentDispositionHeaderValue.Equals(System.Object)" />
        <element api="M:System.Net.Http.Headers.ContentDispositionHeaderValue.GetHashCode" />
        <element api="M:System.Net.Http.Headers.ContentDispositionHeaderValue.Parse(System.String)" />
        <element api="M:System.Net.Http.Headers.ContentDispositionHeaderValue.System#ICloneable#Clone" />
        <element api="M:System.Net.Http.Headers.ContentDispositionHeaderValue.ToString" />
        <element api="M:System.Net.Http.Headers.ContentDispositionHeaderValue.TryParse(System.String,System.Net.Http.Headers.ContentDispositionHeaderValue@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />
      </containers>
      <file name="695b2efb-dcee-f218-4d8f-34d3db19a741" />
    </api>
    <api id="Properties.T:System.Net.Http.Headers.ContentDispositionHeaderValue">
      <topicdata name="ContentDispositionHeaderValue" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />
      <apidata name="ContentDispositionHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Net.Http.Headers.ContentDispositionHeaderValue.CreationDate" />
        <element api="P:System.Net.Http.Headers.ContentDispositionHeaderValue.DispositionType" />
        <element api="P:System.Net.Http.Headers.ContentDispositionHeaderValue.FileName" />
        <element api="P:System.Net.Http.Headers.ContentDispositionHeaderValue.FileNameStar" />
        <element api="P:System.Net.Http.Headers.ContentDispositionHeaderValue.ModificationDate" />
        <element api="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Name" />
        <element api="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Parameters" />
        <element api="P:System.Net.Http.Headers.ContentDispositionHeaderValue.ReadDate" />
        <element api="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Size" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentDispositionHeaderValue" />
      </containers>
      <file name="324623d4-3372-b000-89fb-8a34c1063d96" />
    </api>
    <api id="Overload:System.Net.Http.Headers.ContentDispositionHeaderValue.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.ContentDispositionHeaderValue" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.Http.Headers.ContentDispositionHeaderValue.#ctor(System.Net.Http.Headers.ContentDispositionHeaderValue)" />
        <element api="M:System.Net.Http.Headers.ContentDispositionHeaderValue.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentDispositionHeaderValue" ref="true" />
      </containers>
      <file name="782f7600-d0ff-debc-715c-ee214892aac5" />
    </api>
    <api id="M:System.Net.Http.Headers.ContentDispositionHeaderValue.#ctor(System.Net.Http.Headers.ContentDispositionHeaderValue)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Net.Http.Headers.ContentDispositionHeaderValue.#ctor" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Net.Http.Headers.ContentDispositionHeaderValue" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentDispositionHeaderValue" ref="true" />
      </containers>
      <file name="5ec2abe4-28a5-01db-0dc6-edfb3166b2d3" />
    </api>
    <api id="M:System.Net.Http.Headers.ContentDispositionHeaderValue.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.ContentDispositionHeaderValue.#ctor" />
      <parameters>
        <parameter name="dispositionType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentDispositionHeaderValue" ref="true" />
      </containers>
      <file name="45f19ace-e8d2-5ccd-e2ca-40ecc9c0e2ea" />
    </api>
    <api id="P:System.Net.Http.Headers.ContentDispositionHeaderValue.CreationDate">
      <topicdata group="api" />
      <apidata name="CreationDate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CreationDate" />
      <setter name="set_CreationDate" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTimeOffset" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentDispositionHeaderValue" ref="true" />
      </containers>
      <file name="0374e28f-5ed4-8d01-62ed-e7ab8b852838" />
    </api>
    <api id="P:System.Net.Http.Headers.ContentDispositionHeaderValue.DispositionType">
      <topicdata group="api" />
      <apidata name="DispositionType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DispositionType" />
      <setter name="set_DispositionType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentDispositionHeaderValue" ref="true" />
      </containers>
      <file name="dd368fdd-1ba7-0067-582a-d72580d60b03" />
    </api>
    <api id="M:System.Net.Http.Headers.ContentDispositionHeaderValue.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentDispositionHeaderValue" ref="true" />
      </containers>
      <file name="e6d1734d-eb9a-a1e2-463e-80310ab8eafb" />
    </api>
    <api id="P:System.Net.Http.Headers.ContentDispositionHeaderValue.FileName">
      <topicdata group="api" />
      <apidata name="FileName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FileName" />
      <setter name="set_FileName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentDispositionHeaderValue" ref="true" />
      </containers>
      <file name="73fd6a75-7d1e-6e2e-ea38-62a210bc4cd3" />
    </api>
    <api id="P:System.Net.Http.Headers.ContentDispositionHeaderValue.FileNameStar">
      <topicdata group="api" />
      <apidata name="FileNameStar" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FileNameStar" />
      <setter name="set_FileNameStar" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentDispositionHeaderValue" ref="true" />
      </containers>
      <file name="4427a134-a83d-413c-26dc-a8c89eb48556" />
    </api>
    <api id="M:System.Net.Http.Headers.ContentDispositionHeaderValue.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentDispositionHeaderValue" ref="true" />
      </containers>
      <file name="8f8fc746-59bf-0456-40e2-20c49570e065" />
    </api>
    <api id="P:System.Net.Http.Headers.ContentDispositionHeaderValue.ModificationDate">
      <topicdata group="api" />
      <apidata name="ModificationDate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ModificationDate" />
      <setter name="set_ModificationDate" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTimeOffset" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentDispositionHeaderValue" ref="true" />
      </containers>
      <file name="71b37ca0-06e3-af0a-472a-88cd6fe98531" />
    </api>
    <api id="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentDispositionHeaderValue" ref="true" />
      </containers>
      <file name="5c5ab057-8c94-e715-ae3d-6f2ff7922d24" />
    </api>
    <api id="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Parameters">
      <topicdata group="api" />
      <apidata name="Parameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parameters" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.Headers.NameValueHeaderValue" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentDispositionHeaderValue" ref="true" />
      </containers>
      <file name="55b53597-6f18-9fb4-5e48-6ab42540bc93" />
    </api>
    <api id="M:System.Net.Http.Headers.ContentDispositionHeaderValue.Parse(System.String)">
      <topicdata group="api" />
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.Headers.ContentDispositionHeaderValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentDispositionHeaderValue" ref="true" />
      </containers>
      <file name="cb43143a-6fcc-a846-3cb5-2eccde858c5f" />
    </api>
    <api id="P:System.Net.Http.Headers.ContentDispositionHeaderValue.ReadDate">
      <topicdata group="api" />
      <apidata name="ReadDate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReadDate" />
      <setter name="set_ReadDate" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTimeOffset" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentDispositionHeaderValue" ref="true" />
      </containers>
      <file name="05094b79-623a-df4d-bb3e-b67fa6dc8487" />
    </api>
    <api id="P:System.Net.Http.Headers.ContentDispositionHeaderValue.Size">
      <topicdata group="api" />
      <apidata name="Size" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Size" />
      <setter name="set_Size" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentDispositionHeaderValue" ref="true" />
      </containers>
      <file name="5e4661ed-a133-1ba9-d36a-caa53aa68591" />
    </api>
    <api id="M:System.Net.Http.Headers.ContentDispositionHeaderValue.System#ICloneable#Clone">
      <topicdata group="api" eiiName="ICloneable.Clone" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICloneable.Clone">
          <type api="T:System.ICloneable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentDispositionHeaderValue" ref="true" />
      </containers>
      <file name="628528b2-1c93-fdea-1135-668b04adda98" />
    </api>
    <api id="M:System.Net.Http.Headers.ContentDispositionHeaderValue.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentDispositionHeaderValue" ref="true" />
      </containers>
      <file name="9ab24574-de0d-0438-9f48-1126f53b4328" />
    </api>
    <api id="M:System.Net.Http.Headers.ContentDispositionHeaderValue.TryParse(System.String,System.Net.Http.Headers.ContentDispositionHeaderValue@)">
      <topicdata group="api" />
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parsedValue" out="true">
          <referenceTo>
            <type api="T:System.Net.Http.Headers.ContentDispositionHeaderValue" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentDispositionHeaderValue" ref="true" />
      </containers>
      <file name="980d0602-9f1e-dc75-b2fa-f33794925eaa" />
    </api>
    <api id="T:System.Net.Http.Headers.ContentRangeHeaderValue">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.ContentRangeHeaderValue" />
      <apidata name="ContentRangeHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
      </containers>
      <file name="16a4a5a1-21cc-31a8-5203-5d99f9d21cb7" />
    </api>
    <api id="AllMembers.T:System.Net.Http.Headers.ContentRangeHeaderValue">
      <topicdata name="ContentRangeHeaderValue" group="list" subgroup="members" typeTopicId="T:System.Net.Http.Headers.ContentRangeHeaderValue" />
      <apidata name="ContentRangeHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor">
          <element api="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64)" />
          <element api="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64)" />
          <element api="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64,System.Int64)" />
        </element>
        <element api="M:System.Net.Http.Headers.ContentRangeHeaderValue.Equals(System.Object)" />
        <element api="P:System.Net.Http.Headers.ContentRangeHeaderValue.From" />
        <element api="M:System.Net.Http.Headers.ContentRangeHeaderValue.GetHashCode" />
        <element api="P:System.Net.Http.Headers.ContentRangeHeaderValue.HasLength" />
        <element api="P:System.Net.Http.Headers.ContentRangeHeaderValue.HasRange" />
        <element api="P:System.Net.Http.Headers.ContentRangeHeaderValue.Length" />
        <element api="M:System.Net.Http.Headers.ContentRangeHeaderValue.Parse(System.String)" />
        <element api="M:System.Net.Http.Headers.ContentRangeHeaderValue.System#ICloneable#Clone" />
        <element api="P:System.Net.Http.Headers.ContentRangeHeaderValue.To" />
        <element api="M:System.Net.Http.Headers.ContentRangeHeaderValue.ToString" />
        <element api="M:System.Net.Http.Headers.ContentRangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.ContentRangeHeaderValue@)" />
        <element api="P:System.Net.Http.Headers.ContentRangeHeaderValue.Unit" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentRangeHeaderValue" />
      </containers>
      <file name="4283f7c4-c00a-8094-f2fe-920330a3f86b" />
    </api>
    <api id="Methods.T:System.Net.Http.Headers.ContentRangeHeaderValue">
      <topicdata name="ContentRangeHeaderValue" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.Headers.ContentRangeHeaderValue" />
      <apidata name="ContentRangeHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Net.Http.Headers.ContentRangeHeaderValue.Equals(System.Object)" />
        <element api="M:System.Net.Http.Headers.ContentRangeHeaderValue.GetHashCode" />
        <element api="M:System.Net.Http.Headers.ContentRangeHeaderValue.Parse(System.String)" />
        <element api="M:System.Net.Http.Headers.ContentRangeHeaderValue.System#ICloneable#Clone" />
        <element api="M:System.Net.Http.Headers.ContentRangeHeaderValue.ToString" />
        <element api="M:System.Net.Http.Headers.ContentRangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.ContentRangeHeaderValue@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentRangeHeaderValue" />
      </containers>
      <file name="812bcb38-f634-ff76-becf-033d6b879a7b" />
    </api>
    <api id="Properties.T:System.Net.Http.Headers.ContentRangeHeaderValue">
      <topicdata name="ContentRangeHeaderValue" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.Headers.ContentRangeHeaderValue" />
      <apidata name="ContentRangeHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Net.Http.Headers.ContentRangeHeaderValue.From" />
        <element api="P:System.Net.Http.Headers.ContentRangeHeaderValue.HasLength" />
        <element api="P:System.Net.Http.Headers.ContentRangeHeaderValue.HasRange" />
        <element api="P:System.Net.Http.Headers.ContentRangeHeaderValue.Length" />
        <element api="P:System.Net.Http.Headers.ContentRangeHeaderValue.To" />
        <element api="P:System.Net.Http.Headers.ContentRangeHeaderValue.Unit" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentRangeHeaderValue" />
      </containers>
      <file name="5b8cdf40-2b7f-d9c2-4f5b-5a7f1feabbc4" />
    </api>
    <api id="Overload:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.ContentRangeHeaderValue" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64)" />
        <element api="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64)" />
        <element api="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64,System.Int64)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentRangeHeaderValue" ref="true" />
      </containers>
      <file name="63775a71-1038-fd33-c1d4-8f9390c328ee" />
    </api>
    <api id="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor" />
      <parameters>
        <parameter name="length">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentRangeHeaderValue" ref="true" />
      </containers>
      <file name="1f897389-3b44-7f8e-3746-0878d9f1c8e1" />
    </api>
    <api id="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor" />
      <parameters>
        <parameter name="from">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="to">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentRangeHeaderValue" ref="true" />
      </containers>
      <file name="4f03736c-2b26-29d9-e917-771e46d97883" />
    </api>
    <api id="M:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor(System.Int64,System.Int64,System.Int64)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.ContentRangeHeaderValue.#ctor" />
      <parameters>
        <parameter name="from">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="to">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentRangeHeaderValue" ref="true" />
      </containers>
      <file name="8e437b38-1c1b-6286-826d-629b7ef97d4f" />
    </api>
    <api id="M:System.Net.Http.Headers.ContentRangeHeaderValue.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentRangeHeaderValue" ref="true" />
      </containers>
      <file name="f8c0b2ba-d554-4e6d-3497-ed28f0ea81fb" />
    </api>
    <api id="P:System.Net.Http.Headers.ContentRangeHeaderValue.From">
      <topicdata group="api" />
      <apidata name="From" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_From" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentRangeHeaderValue" ref="true" />
      </containers>
      <file name="a1bddc35-89cb-2709-e298-7cdb5c2ace77" />
    </api>
    <api id="M:System.Net.Http.Headers.ContentRangeHeaderValue.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentRangeHeaderValue" ref="true" />
      </containers>
      <file name="89c86a63-8c65-9c83-642a-11a648e4e34c" />
    </api>
    <api id="P:System.Net.Http.Headers.ContentRangeHeaderValue.HasLength">
      <topicdata group="api" />
      <apidata name="HasLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasLength" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentRangeHeaderValue" ref="true" />
      </containers>
      <file name="58273b42-c24c-19e8-03c8-19bd26819cdf" />
    </api>
    <api id="P:System.Net.Http.Headers.ContentRangeHeaderValue.HasRange">
      <topicdata group="api" />
      <apidata name="HasRange" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HasRange" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentRangeHeaderValue" ref="true" />
      </containers>
      <file name="9c3894e6-4ce5-fad9-bbff-4b0fe8a24eb7" />
    </api>
    <api id="P:System.Net.Http.Headers.ContentRangeHeaderValue.Length">
      <topicdata group="api" />
      <apidata name="Length" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Length" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentRangeHeaderValue" ref="true" />
      </containers>
      <file name="f1e771bd-6fba-dcdc-c67c-120a0fc9b29d" />
    </api>
    <api id="M:System.Net.Http.Headers.ContentRangeHeaderValue.Parse(System.String)">
      <topicdata group="api" />
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.Headers.ContentRangeHeaderValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentRangeHeaderValue" ref="true" />
      </containers>
      <file name="a2a1801a-3311-6799-9f59-394152ee6185" />
    </api>
    <api id="M:System.Net.Http.Headers.ContentRangeHeaderValue.System#ICloneable#Clone">
      <topicdata group="api" eiiName="ICloneable.Clone" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICloneable.Clone">
          <type api="T:System.ICloneable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentRangeHeaderValue" ref="true" />
      </containers>
      <file name="9f719e93-186a-b8c8-df50-f10d077290bc" />
    </api>
    <api id="P:System.Net.Http.Headers.ContentRangeHeaderValue.To">
      <topicdata group="api" />
      <apidata name="To" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_To" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentRangeHeaderValue" ref="true" />
      </containers>
      <file name="16457acd-bee2-859d-1203-ee5dbf3f4d92" />
    </api>
    <api id="M:System.Net.Http.Headers.ContentRangeHeaderValue.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentRangeHeaderValue" ref="true" />
      </containers>
      <file name="809bc9e7-1b5b-65b4-2281-2871dfb38cca" />
    </api>
    <api id="M:System.Net.Http.Headers.ContentRangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.ContentRangeHeaderValue@)">
      <topicdata group="api" />
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parsedValue" out="true">
          <referenceTo>
            <type api="T:System.Net.Http.Headers.ContentRangeHeaderValue" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentRangeHeaderValue" ref="true" />
      </containers>
      <file name="bdb3b3ee-dc04-e1b4-ba20-7f9625f7b125" />
    </api>
    <api id="P:System.Net.Http.Headers.ContentRangeHeaderValue.Unit">
      <topicdata group="api" />
      <apidata name="Unit" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Unit" />
      <setter name="set_Unit" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ContentRangeHeaderValue" ref="true" />
      </containers>
      <file name="f6b225d7-69ed-1d2b-0201-dbecdea0c6ac" />
    </api>
    <api id="T:System.Net.Http.Headers.EntityTagHeaderValue">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.EntityTagHeaderValue" />
      <apidata name="EntityTagHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
      </containers>
      <file name="7f3f1708-2582-1c59-58c0-30bed0f555be" />
    </api>
    <api id="AllMembers.T:System.Net.Http.Headers.EntityTagHeaderValue">
      <topicdata name="EntityTagHeaderValue" group="list" subgroup="members" typeTopicId="T:System.Net.Http.Headers.EntityTagHeaderValue" />
      <apidata name="EntityTagHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.Http.Headers.EntityTagHeaderValue.#ctor">
          <element api="M:System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String)" />
          <element api="M:System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String,System.Boolean)" />
        </element>
        <element api="P:System.Net.Http.Headers.EntityTagHeaderValue.Any" />
        <element api="M:System.Net.Http.Headers.EntityTagHeaderValue.Equals(System.Object)" />
        <element api="M:System.Net.Http.Headers.EntityTagHeaderValue.GetHashCode" />
        <element api="P:System.Net.Http.Headers.EntityTagHeaderValue.IsWeak" />
        <element api="M:System.Net.Http.Headers.EntityTagHeaderValue.Parse(System.String)" />
        <element api="M:System.Net.Http.Headers.EntityTagHeaderValue.System#ICloneable#Clone" />
        <element api="P:System.Net.Http.Headers.EntityTagHeaderValue.Tag" />
        <element api="M:System.Net.Http.Headers.EntityTagHeaderValue.ToString" />
        <element api="M:System.Net.Http.Headers.EntityTagHeaderValue.TryParse(System.String,System.Net.Http.Headers.EntityTagHeaderValue@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.EntityTagHeaderValue" />
      </containers>
      <file name="8944685d-eb3b-2460-236b-477f5daf329a" />
    </api>
    <api id="Methods.T:System.Net.Http.Headers.EntityTagHeaderValue">
      <topicdata name="EntityTagHeaderValue" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.Headers.EntityTagHeaderValue" />
      <apidata name="EntityTagHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Net.Http.Headers.EntityTagHeaderValue.Equals(System.Object)" />
        <element api="M:System.Net.Http.Headers.EntityTagHeaderValue.GetHashCode" />
        <element api="M:System.Net.Http.Headers.EntityTagHeaderValue.Parse(System.String)" />
        <element api="M:System.Net.Http.Headers.EntityTagHeaderValue.System#ICloneable#Clone" />
        <element api="M:System.Net.Http.Headers.EntityTagHeaderValue.ToString" />
        <element api="M:System.Net.Http.Headers.EntityTagHeaderValue.TryParse(System.String,System.Net.Http.Headers.EntityTagHeaderValue@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.EntityTagHeaderValue" />
      </containers>
      <file name="4d7bfb12-c32e-5aa6-7229-32694f1d85c6" />
    </api>
    <api id="Properties.T:System.Net.Http.Headers.EntityTagHeaderValue">
      <topicdata name="EntityTagHeaderValue" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.Headers.EntityTagHeaderValue" />
      <apidata name="EntityTagHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Net.Http.Headers.EntityTagHeaderValue.Any" />
        <element api="P:System.Net.Http.Headers.EntityTagHeaderValue.IsWeak" />
        <element api="P:System.Net.Http.Headers.EntityTagHeaderValue.Tag" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.EntityTagHeaderValue" />
      </containers>
      <file name="61f6b3d5-fb1e-cdb7-27bc-4c73cc7f35ad" />
    </api>
    <api id="Overload:System.Net.Http.Headers.EntityTagHeaderValue.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.EntityTagHeaderValue" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String)" />
        <element api="M:System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.EntityTagHeaderValue" ref="true" />
      </containers>
      <file name="6bfe0685-bd97-5882-cca7-40ef26eb2b88" />
    </api>
    <api id="M:System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.EntityTagHeaderValue.#ctor" />
      <parameters>
        <parameter name="tag">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.EntityTagHeaderValue" ref="true" />
      </containers>
      <file name="b3f0a311-f1fb-5245-777a-2b386c9144dd" />
    </api>
    <api id="M:System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.EntityTagHeaderValue.#ctor" />
      <parameters>
        <parameter name="tag">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="isWeak">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.EntityTagHeaderValue" ref="true" />
      </containers>
      <file name="485822cf-1479-13be-caf5-1577bf3b11c3" />
    </api>
    <api id="P:System.Net.Http.Headers.EntityTagHeaderValue.Any">
      <topicdata group="api" />
      <apidata name="Any" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Any" />
      <returns>
        <type api="T:System.Net.Http.Headers.EntityTagHeaderValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.EntityTagHeaderValue" ref="true" />
      </containers>
      <file name="7c010480-cb10-a59f-e0b0-c96242dacdff" />
    </api>
    <api id="M:System.Net.Http.Headers.EntityTagHeaderValue.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.EntityTagHeaderValue" ref="true" />
      </containers>
      <file name="770146d2-d39f-3d04-d90e-5c3e401f1d85" />
    </api>
    <api id="M:System.Net.Http.Headers.EntityTagHeaderValue.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.EntityTagHeaderValue" ref="true" />
      </containers>
      <file name="651f8703-ce9f-f919-b9e0-4fc8d1b2e27d" />
    </api>
    <api id="P:System.Net.Http.Headers.EntityTagHeaderValue.IsWeak">
      <topicdata group="api" />
      <apidata name="IsWeak" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsWeak" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.EntityTagHeaderValue" ref="true" />
      </containers>
      <file name="9b5b15aa-2b9a-7995-e944-65f4c277cc71" />
    </api>
    <api id="M:System.Net.Http.Headers.EntityTagHeaderValue.Parse(System.String)">
      <topicdata group="api" />
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.Headers.EntityTagHeaderValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.EntityTagHeaderValue" ref="true" />
      </containers>
      <file name="792fd618-42de-840a-f8ce-86e8ae911c19" />
    </api>
    <api id="M:System.Net.Http.Headers.EntityTagHeaderValue.System#ICloneable#Clone">
      <topicdata group="api" eiiName="ICloneable.Clone" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICloneable.Clone">
          <type api="T:System.ICloneable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.EntityTagHeaderValue" ref="true" />
      </containers>
      <file name="f963b825-adea-b7bd-1121-5540aa5d540c" />
    </api>
    <api id="P:System.Net.Http.Headers.EntityTagHeaderValue.Tag">
      <topicdata group="api" />
      <apidata name="Tag" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Tag" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.EntityTagHeaderValue" ref="true" />
      </containers>
      <file name="b4ac760c-b42f-5a6c-a8dd-e4d7c16f25c4" />
    </api>
    <api id="M:System.Net.Http.Headers.EntityTagHeaderValue.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.EntityTagHeaderValue" ref="true" />
      </containers>
      <file name="73ceef66-5392-8a74-8350-12d1f813d1cd" />
    </api>
    <api id="M:System.Net.Http.Headers.EntityTagHeaderValue.TryParse(System.String,System.Net.Http.Headers.EntityTagHeaderValue@)">
      <topicdata group="api" />
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parsedValue" out="true">
          <referenceTo>
            <type api="T:System.Net.Http.Headers.EntityTagHeaderValue" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.EntityTagHeaderValue" ref="true" />
      </containers>
      <file name="fce9e6af-0790-2989-cd62-df1e19769959" />
    </api>
    <api id="T:System.Net.Http.Headers.HttpContentHeaders">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.HttpContentHeaders" />
      <apidata name="HttpContentHeaders" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Net.Http.Headers.HttpHeaders" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
      </containers>
      <file name="bee9530f-ba0e-6a44-de58-cd35f7a23ab2" />
    </api>
    <api id="AllMembers.T:System.Net.Http.Headers.HttpContentHeaders">
      <topicdata name="HttpContentHeaders" group="list" subgroup="members" typeTopicId="T:System.Net.Http.Headers.HttpContentHeaders" />
      <apidata name="HttpContentHeaders" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="P:System.Net.Http.Headers.HttpContentHeaders.Allow" />
        <element api="P:System.Net.Http.Headers.HttpContentHeaders.ContentDisposition" />
        <element api="P:System.Net.Http.Headers.HttpContentHeaders.ContentEncoding" />
        <element api="P:System.Net.Http.Headers.HttpContentHeaders.ContentLanguage" />
        <element api="P:System.Net.Http.Headers.HttpContentHeaders.ContentLength" />
        <element api="P:System.Net.Http.Headers.HttpContentHeaders.ContentLocation" />
        <element api="P:System.Net.Http.Headers.HttpContentHeaders.ContentMD5" />
        <element api="P:System.Net.Http.Headers.HttpContentHeaders.ContentRange" />
        <element api="P:System.Net.Http.Headers.HttpContentHeaders.ContentType" />
        <element api="P:System.Net.Http.Headers.HttpContentHeaders.Expires" />
        <element api="P:System.Net.Http.Headers.HttpContentHeaders.LastModified" />
        <element api="Overload:System.Net.Http.Headers.HttpContentHeaders.Add">
          <element api="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable{System.String})" />
          <element api="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)" />
        </element>
        <element api="M:System.Net.Http.Headers.HttpHeaders.Clear" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.Contains(System.String)" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.GetEnumerator" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.GetValues(System.String)" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.Remove(System.String)" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.ToString" />
        <element api="Overload:System.Net.Http.Headers.HttpContentHeaders.TryAddWithoutValidation">
          <element api="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})" />
          <element api="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.String)" />
        </element>
        <element api="M:System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpContentHeaders" />
      </containers>
      <file name="814aed41-b2fc-1062-00f9-6f9a184d7f32" />
    </api>
    <api id="Methods.T:System.Net.Http.Headers.HttpContentHeaders">
      <topicdata name="HttpContentHeaders" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.Headers.HttpContentHeaders" />
      <apidata name="HttpContentHeaders" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Net.Http.Headers.HttpContentHeaders.Add">
          <element api="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable{System.String})" />
          <element api="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)" />
        </element>
        <element api="M:System.Net.Http.Headers.HttpHeaders.Clear" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.Contains(System.String)" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.GetEnumerator" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.GetValues(System.String)" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.Remove(System.String)" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.ToString" />
        <element api="Overload:System.Net.Http.Headers.HttpContentHeaders.TryAddWithoutValidation">
          <element api="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})" />
          <element api="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.String)" />
        </element>
        <element api="M:System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpContentHeaders" />
      </containers>
      <file name="34039601-c620-d3d6-90e1-fada303a9431" />
    </api>
    <api id="Properties.T:System.Net.Http.Headers.HttpContentHeaders">
      <topicdata name="HttpContentHeaders" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.Headers.HttpContentHeaders" />
      <apidata name="HttpContentHeaders" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Net.Http.Headers.HttpContentHeaders.Allow" />
        <element api="P:System.Net.Http.Headers.HttpContentHeaders.ContentDisposition" />
        <element api="P:System.Net.Http.Headers.HttpContentHeaders.ContentEncoding" />
        <element api="P:System.Net.Http.Headers.HttpContentHeaders.ContentLanguage" />
        <element api="P:System.Net.Http.Headers.HttpContentHeaders.ContentLength" />
        <element api="P:System.Net.Http.Headers.HttpContentHeaders.ContentLocation" />
        <element api="P:System.Net.Http.Headers.HttpContentHeaders.ContentMD5" />
        <element api="P:System.Net.Http.Headers.HttpContentHeaders.ContentRange" />
        <element api="P:System.Net.Http.Headers.HttpContentHeaders.ContentType" />
        <element api="P:System.Net.Http.Headers.HttpContentHeaders.Expires" />
        <element api="P:System.Net.Http.Headers.HttpContentHeaders.LastModified" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpContentHeaders" />
      </containers>
      <file name="e0dbc5ae-38d3-1b56-ac5e-9a9b67725c20" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpContentHeaders.Allow">
      <topicdata group="api" />
      <apidata name="Allow" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Allow" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpContentHeaders" ref="true" />
      </containers>
      <file name="4b423bb8-04bd-009a-94ce-b0d229d585d5" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpContentHeaders.ContentDisposition">
      <topicdata group="api" />
      <apidata name="ContentDisposition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ContentDisposition" />
      <setter name="set_ContentDisposition" />
      <returns>
        <type api="T:System.Net.Http.Headers.ContentDispositionHeaderValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpContentHeaders" ref="true" />
      </containers>
      <file name="7743cd0c-47cf-d845-2cc9-61bd181f77ff" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpContentHeaders.ContentEncoding">
      <topicdata group="api" />
      <apidata name="ContentEncoding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ContentEncoding" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpContentHeaders" ref="true" />
      </containers>
      <file name="a5d5d99d-81fc-29a5-84ea-a270e6e8999d" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpContentHeaders.ContentLanguage">
      <topicdata group="api" />
      <apidata name="ContentLanguage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ContentLanguage" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpContentHeaders" ref="true" />
      </containers>
      <file name="b59522af-c9f2-29ca-bb89-1af5cc0bac7e" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpContentHeaders.ContentLength">
      <topicdata group="api" />
      <apidata name="ContentLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ContentLength" />
      <setter name="set_ContentLength" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpContentHeaders" ref="true" />
      </containers>
      <file name="b2dbc18d-e726-77da-c6e6-54a088194472" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpContentHeaders.ContentLocation">
      <topicdata group="api" />
      <apidata name="ContentLocation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ContentLocation" />
      <setter name="set_ContentLocation" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpContentHeaders" ref="true" />
      </containers>
      <file name="a9a63e9b-36f4-43c2-5993-832a84d90103" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpContentHeaders.ContentMD5">
      <topicdata group="api" />
      <apidata name="ContentMD5" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ContentMD5" />
      <setter name="set_ContentMD5" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpContentHeaders" ref="true" />
      </containers>
      <file name="99945a26-d4e5-c2f5-36b5-a990ad086743" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpContentHeaders.ContentRange">
      <topicdata group="api" />
      <apidata name="ContentRange" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ContentRange" />
      <setter name="set_ContentRange" />
      <returns>
        <type api="T:System.Net.Http.Headers.ContentRangeHeaderValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpContentHeaders" ref="true" />
      </containers>
      <file name="0b8536d9-5cc1-2f08-78de-c6215a79d605" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpContentHeaders.ContentType">
      <topicdata group="api" />
      <apidata name="ContentType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ContentType" />
      <setter name="set_ContentType" />
      <returns>
        <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpContentHeaders" ref="true" />
      </containers>
      <file name="74ce9032-63d0-a17f-24a1-c7973842c0ac" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpContentHeaders.Expires">
      <topicdata group="api" />
      <apidata name="Expires" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Expires" />
      <setter name="set_Expires" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTimeOffset" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpContentHeaders" ref="true" />
      </containers>
      <file name="130fa571-5e6b-705e-53df-f431367a085f" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpContentHeaders.LastModified">
      <topicdata group="api" />
      <apidata name="LastModified" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LastModified" />
      <setter name="set_LastModified" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTimeOffset" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpContentHeaders" ref="true" />
      </containers>
      <file name="80a3636a-900a-5db6-276a-234b99b931d0" />
    </api>
    <api id="T:System.Net.Http.Headers.HttpHeaders">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.HttpHeaders" />
      <apidata name="HttpHeaders" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Net.Http.Headers.HttpContentHeaders" ref="true" />
          <type api="T:System.Net.Http.Headers.HttpRequestHeaders" ref="true" />
          <type api="T:System.Net.Http.Headers.HttpResponseHeaders" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
      </containers>
      <file name="e4650956-67f8-2b29-99e1-7691569fcf0e" />
    </api>
    <api id="AllMembers.T:System.Net.Http.Headers.HttpHeaders">
      <topicdata name="HttpHeaders" group="list" subgroup="members" typeTopicId="T:System.Net.Http.Headers.HttpHeaders" />
      <apidata name="HttpHeaders" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                          <specialization>
                            <type api="T:System.String" ref="true" />
                          </specialization>
                        </type>
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                          <specialization>
                            <type api="T:System.String" ref="true" />
                          </specialization>
                        </type>
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                            <specialization>
                              <type api="T:System.String" ref="true" />
                            </specialization>
                          </type>
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                            <specialization>
                              <type api="T:System.String" ref="true" />
                            </specialization>
                          </type>
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Net.Http.Headers.HttpHeaders.#ctor" />
        <element api="Overload:System.Net.Http.Headers.HttpHeaders.Add">
          <element api="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable{System.String})" />
          <element api="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)" />
        </element>
        <element api="M:System.Net.Http.Headers.HttpHeaders.Clear" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.Contains(System.String)" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.GetEnumerator" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.GetValues(System.String)" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.Remove(System.String)" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.ToString" />
        <element api="Overload:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation">
          <element api="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})" />
          <element api="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.String)" />
        </element>
        <element api="M:System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpHeaders" />
      </containers>
      <file name="240c58e2-eb79-65a2-4b0c-f990c18079e2" />
    </api>
    <api id="Methods.T:System.Net.Http.Headers.HttpHeaders">
      <topicdata name="HttpHeaders" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.Headers.HttpHeaders" />
      <apidata name="HttpHeaders" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                          <specialization>
                            <type api="T:System.String" ref="true" />
                          </specialization>
                        </type>
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                          <specialization>
                            <type api="T:System.String" ref="true" />
                          </specialization>
                        </type>
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                            <specialization>
                              <type api="T:System.String" ref="true" />
                            </specialization>
                          </type>
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                            <specialization>
                              <type api="T:System.String" ref="true" />
                            </specialization>
                          </type>
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.Net.Http.Headers.HttpHeaders.Add">
          <element api="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable{System.String})" />
          <element api="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)" />
        </element>
        <element api="M:System.Net.Http.Headers.HttpHeaders.Clear" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.Contains(System.String)" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.GetEnumerator" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.GetValues(System.String)" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.Remove(System.String)" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.ToString" />
        <element api="Overload:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation">
          <element api="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})" />
          <element api="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.String)" />
        </element>
        <element api="M:System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpHeaders" />
      </containers>
      <file name="7283e77f-3f60-ddc6-dd92-f1ca93657734" />
    </api>
    <api id="Overload:System.Net.Http.Headers.HttpHeaders.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.HttpHeaders" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable{System.String})" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpHeaders" ref="true" />
      </containers>
      <file name="de0e62ca-92ee-b14f-9137-41474445e0e6" />
    </api>
    <api id="Overload:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation">
      <topicdata name="TryAddWithoutValidation" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.HttpHeaders" />
      <apidata name="TryAddWithoutValidation" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpHeaders" ref="true" />
      </containers>
      <file name="3b7d3170-2d9a-f5a3-874c-fc98f5c290b3" />
    </api>
    <api id="M:System.Net.Http.Headers.HttpHeaders.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpHeaders" ref="true" />
      </containers>
      <file name="2df48421-e139-6197-2e05-9b967d066150" />
    </api>
    <api id="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.Headers.HttpHeaders.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="values">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpHeaders" ref="true" />
      </containers>
      <file name="c0875d2e-daf5-21ab-0168-bbd253b90e81" />
    </api>
    <api id="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.Headers.HttpHeaders.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpHeaders" ref="true" />
      </containers>
      <file name="6684d91b-f2f4-e6ac-8f00-a2e2124ca8b9" />
    </api>
    <api id="M:System.Net.Http.Headers.HttpHeaders.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpHeaders" ref="true" />
      </containers>
      <file name="e1815c1a-9460-bc61-7bd1-bac4fc45def7" />
    </api>
    <api id="M:System.Net.Http.Headers.HttpHeaders.Contains(System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpHeaders" ref="true" />
      </containers>
      <file name="451fa6ec-e9cb-7907-6e9e-a0142a269705" />
    </api>
    <api id="M:System.Net.Http.Headers.HttpHeaders.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpHeaders" ref="true" />
      </containers>
      <file name="1b15d481-3187-3a05-dcad-e37bdb95aecd" />
    </api>
    <api id="M:System.Net.Http.Headers.HttpHeaders.GetValues(System.String)">
      <topicdata group="api" />
      <apidata name="GetValues" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpHeaders" ref="true" />
      </containers>
      <file name="f9541b47-87e1-c733-2060-7d94460cb7fb" />
    </api>
    <api id="M:System.Net.Http.Headers.HttpHeaders.Remove(System.String)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpHeaders" ref="true" />
      </containers>
      <file name="d2efed72-aaac-0885-18d0-5ff5f72887e4" />
    </api>
    <api id="M:System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpHeaders" ref="true" />
      </containers>
      <file name="fa9d86f8-a67b-0be6-3540-5d5c0f846401" />
    </api>
    <api id="M:System.Net.Http.Headers.HttpHeaders.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpHeaders" ref="true" />
      </containers>
      <file name="cafec614-160e-8456-aa12-880874ab39c6" />
    </api>
    <api id="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <topicdata group="api" />
      <apidata name="TryAddWithoutValidation" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="values">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpHeaders" ref="true" />
      </containers>
      <file name="c40f6b35-c2f1-f425-87c8-e00ec66a4800" />
    </api>
    <api id="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="TryAddWithoutValidation" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpHeaders" ref="true" />
      </containers>
      <file name="2797abe7-234f-0288-de29-688bd11f8e0d" />
    </api>
    <api id="M:System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)">
      <topicdata group="api" />
      <apidata name="TryGetValues" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="values" out="true">
          <referenceTo>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpHeaders" ref="true" />
      </containers>
      <file name="0a91d363-8d73-c253-e08b-6f62302f2a87" />
    </api>
    <api id="T:System.Net.Http.Headers.HttpHeaderValueCollection`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
      <apidata name="HttpHeaderValueCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
      </containers>
      <file name="a5bbd96e-19d4-c658-14fc-1d767c9213df" />
    </api>
    <api id="AllMembers.T:System.Net.Http.Headers.HttpHeaderValueCollection`1">
      <topicdata name="HttpHeaderValueCollection" group="list" subgroup="members" typeTopicId="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
      <apidata name="HttpHeaderValueCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Add(`0)" />
        <element api="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Clear" />
        <element api="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Contains(`0)" />
        <element api="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.CopyTo(`0[],System.Int32)" />
        <element api="P:System.Net.Http.Headers.HttpHeaderValueCollection`1.Count" />
        <element api="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.GetEnumerator" />
        <element api="P:System.Net.Http.Headers.HttpHeaderValueCollection`1.IsReadOnly" />
        <element api="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.ParseAdd(System.String)" />
        <element api="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Remove(`0)" />
        <element api="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.ToString" />
        <element api="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.TryParseAdd(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
      </containers>
      <file name="ca51d126-3319-f3d1-d879-7e0b57f91aaf" />
    </api>
    <api id="Methods.T:System.Net.Http.Headers.HttpHeaderValueCollection`1">
      <topicdata name="HttpHeaderValueCollection" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
      <apidata name="HttpHeaderValueCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Add(`0)" />
        <element api="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Clear" />
        <element api="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Contains(`0)" />
        <element api="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.GetEnumerator" />
        <element api="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.ParseAdd(System.String)" />
        <element api="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Remove(`0)" />
        <element api="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.ToString" />
        <element api="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.TryParseAdd(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
      </containers>
      <file name="ec0b3db6-6e3b-1b51-fdff-fc2628d77c3a" />
    </api>
    <api id="Properties.T:System.Net.Http.Headers.HttpHeaderValueCollection`1">
      <topicdata name="HttpHeaderValueCollection" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
      <apidata name="HttpHeaderValueCollection" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <elements>
        <element api="P:System.Net.Http.Headers.HttpHeaderValueCollection`1.Count" />
        <element api="P:System.Net.Http.Headers.HttpHeaderValueCollection`1.IsReadOnly" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
      </containers>
      <file name="ef5ef3a2-c86d-bb84-760f-060c5093f7ec" />
    </api>
    <api id="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Add(`0)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Add(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true" />
      </containers>
      <file name="b506c0fa-09a7-483a-67f1-e22577cbda99" />
    </api>
    <api id="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Clear">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true" />
      </containers>
      <file name="194c2438-7466-e44f-fc02-347ea20ad45e" />
    </api>
    <api id="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Contains(`0)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Contains(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true" />
      </containers>
      <file name="b8d7daf0-78d6-703d-d358-46dc3f5386e1" />
    </api>
    <api id="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.CopyTo(`0[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </arrayOf>
        </parameter>
        <parameter name="arrayIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true" />
      </containers>
      <file name="352df6dd-4194-1979-52a4-6427422dfb29" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpHeaderValueCollection`1.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.Count">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true" />
      </containers>
      <file name="b19564e3-635d-c969-f658-54d7abdf1375" />
    </api>
    <api id="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true" />
      </containers>
      <file name="04ac4bd1-e5a8-d05a-d25b-1dd92439c66a" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpHeaderValueCollection`1.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.IsReadOnly">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true" />
      </containers>
      <file name="b95cad45-09c7-16db-bf1b-c0ffd597e6b4" />
    </api>
    <api id="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.ParseAdd(System.String)">
      <topicdata group="api" />
      <apidata name="ParseAdd" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true" />
      </containers>
      <file name="77e1e221-fa12-6a4a-3562-838bd6518a45" />
    </api>
    <api id="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.Remove(`0)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Remove(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true" />
      </containers>
      <file name="1034acd3-42a9-f488-1174-246ca28a24df" />
    </api>
    <api id="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true" />
      </containers>
      <file name="3790a934-dde6-d5ab-9e60-443abda5a079" />
    </api>
    <api id="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true" />
      </containers>
      <file name="7edffb8a-3bb3-0709-04c6-2cf14c9e0edc" />
    </api>
    <api id="M:System.Net.Http.Headers.HttpHeaderValueCollection`1.TryParseAdd(System.String)">
      <topicdata group="api" />
      <apidata name="TryParseAdd" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true" />
      </containers>
      <file name="99809408-78a6-ac9b-d402-1740d275ebe3" />
    </api>
    <api id="T:System.Net.Http.Headers.HttpRequestHeaders">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.HttpRequestHeaders" />
      <apidata name="HttpRequestHeaders" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Net.Http.Headers.HttpHeaders" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
      </containers>
      <file name="4f655668-e2d8-5902-a24e-945a4e2a03dd" />
    </api>
    <api id="AllMembers.T:System.Net.Http.Headers.HttpRequestHeaders">
      <topicdata name="HttpRequestHeaders" group="list" subgroup="members" typeTopicId="T:System.Net.Http.Headers.HttpRequestHeaders" />
      <apidata name="HttpRequestHeaders" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Net.Http.Headers.HttpRequestHeaders.Add">
          <element api="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable{System.String})" />
          <element api="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)" />
        </element>
        <element api="M:System.Net.Http.Headers.HttpHeaders.Clear" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.Contains(System.String)" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.GetEnumerator" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.GetValues(System.String)" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.Remove(System.String)" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.ToString" />
        <element api="Overload:System.Net.Http.Headers.HttpRequestHeaders.TryAddWithoutValidation">
          <element api="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})" />
          <element api="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.String)" />
        </element>
        <element api="M:System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.Accept" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptCharset" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptEncoding" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptLanguage" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.Authorization" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.CacheControl" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.Connection" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.ConnectionClose" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.Date" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.Expect" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.ExpectContinue" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.From" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.Host" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.IfMatch" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.IfModifiedSince" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.IfNoneMatch" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.IfRange" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.IfUnmodifiedSince" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.MaxForwards" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.Pragma" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.ProxyAuthorization" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.Range" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.Referrer" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.TE" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.Trailer" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncoding" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncodingChunked" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.Upgrade" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.UserAgent" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.Via" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.Warning" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpRequestHeaders" />
      </containers>
      <file name="5d2a5525-f7f0-79f6-cfab-7588d750a413" />
    </api>
    <api id="Methods.T:System.Net.Http.Headers.HttpRequestHeaders">
      <topicdata name="HttpRequestHeaders" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.Headers.HttpRequestHeaders" />
      <apidata name="HttpRequestHeaders" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Net.Http.Headers.HttpRequestHeaders.Add">
          <element api="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable{System.String})" />
          <element api="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)" />
        </element>
        <element api="M:System.Net.Http.Headers.HttpHeaders.Clear" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.Contains(System.String)" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.GetEnumerator" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.GetValues(System.String)" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.Remove(System.String)" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.ToString" />
        <element api="Overload:System.Net.Http.Headers.HttpRequestHeaders.TryAddWithoutValidation">
          <element api="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})" />
          <element api="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.String)" />
        </element>
        <element api="M:System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpRequestHeaders" />
      </containers>
      <file name="1e1e9983-6399-46ce-f824-3b1d3552bc2e" />
    </api>
    <api id="Properties.T:System.Net.Http.Headers.HttpRequestHeaders">
      <topicdata name="HttpRequestHeaders" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.Headers.HttpRequestHeaders" />
      <apidata name="HttpRequestHeaders" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.Accept" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptCharset" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptEncoding" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptLanguage" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.Authorization" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.CacheControl" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.Connection" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.ConnectionClose" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.Date" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.Expect" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.ExpectContinue" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.From" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.Host" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.IfMatch" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.IfModifiedSince" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.IfNoneMatch" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.IfRange" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.IfUnmodifiedSince" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.MaxForwards" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.Pragma" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.ProxyAuthorization" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.Range" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.Referrer" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.TE" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.Trailer" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncoding" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncodingChunked" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.Upgrade" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.UserAgent" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.Via" />
        <element api="P:System.Net.Http.Headers.HttpRequestHeaders.Warning" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpRequestHeaders" />
      </containers>
      <file name="ada013ed-1719-d0ce-8c12-ae1a26cb1d36" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpRequestHeaders.Accept">
      <topicdata group="api" />
      <apidata name="Accept" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Accept" />
      <returns>
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpRequestHeaders" ref="true" />
      </containers>
      <file name="e96ea228-7d7a-d50c-2130-bb7bdd39c5d8" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptCharset">
      <topicdata group="api" />
      <apidata name="AcceptCharset" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AcceptCharset" />
      <returns>
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.Headers.StringWithQualityHeaderValue" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpRequestHeaders" ref="true" />
      </containers>
      <file name="7c36c533-f342-2705-105f-72d3bb1ec169" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptEncoding">
      <topicdata group="api" />
      <apidata name="AcceptEncoding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AcceptEncoding" />
      <returns>
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.Headers.StringWithQualityHeaderValue" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpRequestHeaders" ref="true" />
      </containers>
      <file name="d329d92a-8688-86da-0c39-144fa30efb74" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpRequestHeaders.AcceptLanguage">
      <topicdata group="api" />
      <apidata name="AcceptLanguage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AcceptLanguage" />
      <returns>
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.Headers.StringWithQualityHeaderValue" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpRequestHeaders" ref="true" />
      </containers>
      <file name="490201ce-5733-de83-3aab-406c8a630b00" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpRequestHeaders.Authorization">
      <topicdata group="api" />
      <apidata name="Authorization" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Authorization" />
      <setter name="set_Authorization" />
      <returns>
        <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpRequestHeaders" ref="true" />
      </containers>
      <file name="a2a46c43-9c7b-98f2-b974-3af6351a8c38" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpRequestHeaders.CacheControl">
      <topicdata group="api" />
      <apidata name="CacheControl" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CacheControl" />
      <setter name="set_CacheControl" />
      <returns>
        <type api="T:System.Net.Http.Headers.CacheControlHeaderValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpRequestHeaders" ref="true" />
      </containers>
      <file name="0c70940a-0253-e1b9-823d-244b216c296d" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpRequestHeaders.Connection">
      <topicdata group="api" />
      <apidata name="Connection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Connection" />
      <returns>
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpRequestHeaders" ref="true" />
      </containers>
      <file name="fa38b3ad-f056-e3a7-4419-2a3ca11391ce" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpRequestHeaders.ConnectionClose">
      <topicdata group="api" />
      <apidata name="ConnectionClose" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ConnectionClose" />
      <setter name="set_ConnectionClose" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpRequestHeaders" ref="true" />
      </containers>
      <file name="79446a25-9ea0-1983-5438-bfd6d102d6e0" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpRequestHeaders.Date">
      <topicdata group="api" />
      <apidata name="Date" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Date" />
      <setter name="set_Date" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTimeOffset" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpRequestHeaders" ref="true" />
      </containers>
      <file name="7a35b087-982d-0676-a3a1-645be69a953f" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpRequestHeaders.Expect">
      <topicdata group="api" />
      <apidata name="Expect" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Expect" />
      <returns>
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpRequestHeaders" ref="true" />
      </containers>
      <file name="bfa5fd5a-4cd4-769e-af03-745b4eba314a" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpRequestHeaders.ExpectContinue">
      <topicdata group="api" />
      <apidata name="ExpectContinue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ExpectContinue" />
      <setter name="set_ExpectContinue" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpRequestHeaders" ref="true" />
      </containers>
      <file name="d91efb04-639e-9bde-143a-7da9117de25a" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpRequestHeaders.From">
      <topicdata group="api" />
      <apidata name="From" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_From" />
      <setter name="set_From" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpRequestHeaders" ref="true" />
      </containers>
      <file name="6de2248d-41d9-97c9-360e-da3b084e8587" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpRequestHeaders.Host">
      <topicdata group="api" />
      <apidata name="Host" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Host" />
      <setter name="set_Host" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpRequestHeaders" ref="true" />
      </containers>
      <file name="b309dd50-81de-acd5-e116-b340bf14f622" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpRequestHeaders.IfMatch">
      <topicdata group="api" />
      <apidata name="IfMatch" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IfMatch" />
      <returns>
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.Headers.EntityTagHeaderValue" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpRequestHeaders" ref="true" />
      </containers>
      <file name="d677378f-7da4-b3c2-4062-13bc6533fac9" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpRequestHeaders.IfModifiedSince">
      <topicdata group="api" />
      <apidata name="IfModifiedSince" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IfModifiedSince" />
      <setter name="set_IfModifiedSince" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTimeOffset" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpRequestHeaders" ref="true" />
      </containers>
      <file name="f5040a8b-2a60-2003-7062-35b018f70f45" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpRequestHeaders.IfNoneMatch">
      <topicdata group="api" />
      <apidata name="IfNoneMatch" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IfNoneMatch" />
      <returns>
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.Headers.EntityTagHeaderValue" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpRequestHeaders" ref="true" />
      </containers>
      <file name="ff7025ff-4b58-95d7-a064-a153d6e69596" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpRequestHeaders.IfRange">
      <topicdata group="api" />
      <apidata name="IfRange" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IfRange" />
      <setter name="set_IfRange" />
      <returns>
        <type api="T:System.Net.Http.Headers.RangeConditionHeaderValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpRequestHeaders" ref="true" />
      </containers>
      <file name="80fa3063-7077-8592-3e07-44b7be995b0f" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpRequestHeaders.IfUnmodifiedSince">
      <topicdata group="api" />
      <apidata name="IfUnmodifiedSince" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IfUnmodifiedSince" />
      <setter name="set_IfUnmodifiedSince" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTimeOffset" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpRequestHeaders" ref="true" />
      </containers>
      <file name="78a01e5e-b7a3-96c6-8938-0c9e26f763d1" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpRequestHeaders.MaxForwards">
      <topicdata group="api" />
      <apidata name="MaxForwards" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxForwards" />
      <setter name="set_MaxForwards" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpRequestHeaders" ref="true" />
      </containers>
      <file name="69faf764-5f07-7657-5044-c057368ff5ab" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpRequestHeaders.Pragma">
      <topicdata group="api" />
      <apidata name="Pragma" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Pragma" />
      <returns>
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.Headers.NameValueHeaderValue" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpRequestHeaders" ref="true" />
      </containers>
      <file name="ea7fb8dd-ef36-12b6-cb6b-a3b207d5cecf" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpRequestHeaders.ProxyAuthorization">
      <topicdata group="api" />
      <apidata name="ProxyAuthorization" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ProxyAuthorization" />
      <setter name="set_ProxyAuthorization" />
      <returns>
        <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpRequestHeaders" ref="true" />
      </containers>
      <file name="a7cac0d9-7336-2504-7204-f6886e2d1144" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpRequestHeaders.Range">
      <topicdata group="api" />
      <apidata name="Range" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Range" />
      <setter name="set_Range" />
      <returns>
        <type api="T:System.Net.Http.Headers.RangeHeaderValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpRequestHeaders" ref="true" />
      </containers>
      <file name="52d8fdde-a9a3-c80b-5d95-f1c010c3b95a" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpRequestHeaders.Referrer">
      <topicdata group="api" />
      <apidata name="Referrer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Referrer" />
      <setter name="set_Referrer" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpRequestHeaders" ref="true" />
      </containers>
      <file name="a593890f-1fbb-fc05-2377-88d5cb3e341d" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpRequestHeaders.TE">
      <topicdata group="api" />
      <apidata name="TE" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TE" />
      <returns>
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpRequestHeaders" ref="true" />
      </containers>
      <file name="7b01b7e3-ddf0-1c36-c545-7387ef5d177f" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpRequestHeaders.Trailer">
      <topicdata group="api" />
      <apidata name="Trailer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Trailer" />
      <returns>
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpRequestHeaders" ref="true" />
      </containers>
      <file name="df31e3a2-959e-63aa-493d-b204b6941c3a" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncoding">
      <topicdata group="api" />
      <apidata name="TransferEncoding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TransferEncoding" />
      <returns>
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.Headers.TransferCodingHeaderValue" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpRequestHeaders" ref="true" />
      </containers>
      <file name="d34ff654-70a4-355d-119d-89bf16d64e33" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpRequestHeaders.TransferEncodingChunked">
      <topicdata group="api" />
      <apidata name="TransferEncodingChunked" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TransferEncodingChunked" />
      <setter name="set_TransferEncodingChunked" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpRequestHeaders" ref="true" />
      </containers>
      <file name="11621eca-1f46-b510-b28a-5c1c4326fced" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpRequestHeaders.Upgrade">
      <topicdata group="api" />
      <apidata name="Upgrade" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Upgrade" />
      <returns>
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.Headers.ProductHeaderValue" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpRequestHeaders" ref="true" />
      </containers>
      <file name="dc78f2fd-ebe9-fdc4-aaac-0db0025ef918" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpRequestHeaders.UserAgent">
      <topicdata group="api" />
      <apidata name="UserAgent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UserAgent" />
      <returns>
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.Headers.ProductInfoHeaderValue" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpRequestHeaders" ref="true" />
      </containers>
      <file name="3c5dea44-f40d-ffa8-995b-cb49c388fe71" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpRequestHeaders.Via">
      <topicdata group="api" />
      <apidata name="Via" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Via" />
      <returns>
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.Headers.ViaHeaderValue" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpRequestHeaders" ref="true" />
      </containers>
      <file name="249a57f6-1fd7-d72a-69f1-33f6cf5ab970" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpRequestHeaders.Warning">
      <topicdata group="api" />
      <apidata name="Warning" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Warning" />
      <returns>
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.Headers.WarningHeaderValue" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpRequestHeaders" ref="true" />
      </containers>
      <file name="2916a6c4-0480-e645-72a3-ae00ef67e0d8" />
    </api>
    <api id="T:System.Net.Http.Headers.HttpResponseHeaders">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.HttpResponseHeaders" />
      <apidata name="HttpResponseHeaders" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Net.Http.Headers.HttpHeaders" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
      </containers>
      <file name="75e4f250-1431-0d47-0932-5c88985982a9" />
    </api>
    <api id="AllMembers.T:System.Net.Http.Headers.HttpResponseHeaders">
      <topicdata name="HttpResponseHeaders" group="list" subgroup="members" typeTopicId="T:System.Net.Http.Headers.HttpResponseHeaders" />
      <apidata name="HttpResponseHeaders" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Net.Http.Headers.HttpResponseHeaders.Add">
          <element api="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable{System.String})" />
          <element api="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)" />
        </element>
        <element api="M:System.Net.Http.Headers.HttpHeaders.Clear" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.Contains(System.String)" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.GetEnumerator" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.GetValues(System.String)" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.Remove(System.String)" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.ToString" />
        <element api="Overload:System.Net.Http.Headers.HttpResponseHeaders.TryAddWithoutValidation">
          <element api="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})" />
          <element api="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.String)" />
        </element>
        <element api="M:System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.AcceptRanges" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.Age" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.CacheControl" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.Connection" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.ConnectionClose" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.Date" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.ETag" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.Location" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.Pragma" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.ProxyAuthenticate" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.RetryAfter" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.Server" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.Trailer" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncoding" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncodingChunked" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.Upgrade" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.Vary" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.Via" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.Warning" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.WwwAuthenticate" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpResponseHeaders" />
      </containers>
      <file name="dd859d09-eeb9-d044-c21a-92eee3a75a0b" />
    </api>
    <api id="Methods.T:System.Net.Http.Headers.HttpResponseHeaders">
      <topicdata name="HttpResponseHeaders" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.Headers.HttpResponseHeaders" />
      <apidata name="HttpResponseHeaders" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="Overload:System.Net.Http.Headers.HttpResponseHeaders.Add">
          <element api="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.Collections.Generic.IEnumerable{System.String})" />
          <element api="M:System.Net.Http.Headers.HttpHeaders.Add(System.String,System.String)" />
        </element>
        <element api="M:System.Net.Http.Headers.HttpHeaders.Clear" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.Contains(System.String)" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.GetEnumerator" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.GetValues(System.String)" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.Remove(System.String)" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Net.Http.Headers.HttpHeaders.ToString" />
        <element api="Overload:System.Net.Http.Headers.HttpResponseHeaders.TryAddWithoutValidation">
          <element api="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.Collections.Generic.IEnumerable{System.String})" />
          <element api="M:System.Net.Http.Headers.HttpHeaders.TryAddWithoutValidation(System.String,System.String)" />
        </element>
        <element api="M:System.Net.Http.Headers.HttpHeaders.TryGetValues(System.String,System.Collections.Generic.IEnumerable{System.String}@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpResponseHeaders" />
      </containers>
      <file name="3fe013a0-8a7f-1ba2-e73d-203c374edda8" />
    </api>
    <api id="Properties.T:System.Net.Http.Headers.HttpResponseHeaders">
      <topicdata name="HttpResponseHeaders" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.Headers.HttpResponseHeaders" />
      <apidata name="HttpResponseHeaders" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.AcceptRanges" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.Age" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.CacheControl" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.Connection" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.ConnectionClose" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.Date" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.ETag" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.Location" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.Pragma" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.ProxyAuthenticate" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.RetryAfter" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.Server" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.Trailer" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncoding" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncodingChunked" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.Upgrade" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.Vary" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.Via" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.Warning" />
        <element api="P:System.Net.Http.Headers.HttpResponseHeaders.WwwAuthenticate" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpResponseHeaders" />
      </containers>
      <file name="e24de62c-fbdb-f754-294a-abde17113e37" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpResponseHeaders.AcceptRanges">
      <topicdata group="api" />
      <apidata name="AcceptRanges" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AcceptRanges" />
      <returns>
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpResponseHeaders" ref="true" />
      </containers>
      <file name="982a4c66-5838-48e2-f55f-25b0187a0d4e" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpResponseHeaders.Age">
      <topicdata group="api" />
      <apidata name="Age" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Age" />
      <setter name="set_Age" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.TimeSpan" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpResponseHeaders" ref="true" />
      </containers>
      <file name="a51612db-b1ab-2416-11be-df0c97df8d8d" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpResponseHeaders.CacheControl">
      <topicdata group="api" />
      <apidata name="CacheControl" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CacheControl" />
      <setter name="set_CacheControl" />
      <returns>
        <type api="T:System.Net.Http.Headers.CacheControlHeaderValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpResponseHeaders" ref="true" />
      </containers>
      <file name="bcccbe87-9fd3-ea57-f914-40e90d6b4743" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpResponseHeaders.Connection">
      <topicdata group="api" />
      <apidata name="Connection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Connection" />
      <returns>
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpResponseHeaders" ref="true" />
      </containers>
      <file name="51cb07ed-186a-894e-7066-afa77b8b9564" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpResponseHeaders.ConnectionClose">
      <topicdata group="api" />
      <apidata name="ConnectionClose" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ConnectionClose" />
      <setter name="set_ConnectionClose" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpResponseHeaders" ref="true" />
      </containers>
      <file name="6a0c7a0a-bf92-0ead-6d8e-62657480f1e1" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpResponseHeaders.Date">
      <topicdata group="api" />
      <apidata name="Date" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Date" />
      <setter name="set_Date" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTimeOffset" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpResponseHeaders" ref="true" />
      </containers>
      <file name="91bf41b9-d2ae-2020-5d6d-7ee2a974f147" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpResponseHeaders.ETag">
      <topicdata group="api" />
      <apidata name="ETag" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ETag" />
      <setter name="set_ETag" />
      <returns>
        <type api="T:System.Net.Http.Headers.EntityTagHeaderValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpResponseHeaders" ref="true" />
      </containers>
      <file name="47e0fbed-449a-d00e-f76e-18cb22f09bf9" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpResponseHeaders.Location">
      <topicdata group="api" />
      <apidata name="Location" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Location" />
      <setter name="set_Location" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpResponseHeaders" ref="true" />
      </containers>
      <file name="4a00e2fe-01b8-e87e-2fe4-a1d2f4808e67" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpResponseHeaders.Pragma">
      <topicdata group="api" />
      <apidata name="Pragma" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Pragma" />
      <returns>
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.Headers.NameValueHeaderValue" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpResponseHeaders" ref="true" />
      </containers>
      <file name="fc5b034e-6c96-8a4b-be37-4a50daef14bb" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpResponseHeaders.ProxyAuthenticate">
      <topicdata group="api" />
      <apidata name="ProxyAuthenticate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProxyAuthenticate" />
      <returns>
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpResponseHeaders" ref="true" />
      </containers>
      <file name="95d2ca01-66bc-dd17-ffd9-6288a4a2d9d1" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpResponseHeaders.RetryAfter">
      <topicdata group="api" />
      <apidata name="RetryAfter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RetryAfter" />
      <setter name="set_RetryAfter" />
      <returns>
        <type api="T:System.Net.Http.Headers.RetryConditionHeaderValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpResponseHeaders" ref="true" />
      </containers>
      <file name="043749bd-8481-0d67-5ebd-0fa9a12780b7" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpResponseHeaders.Server">
      <topicdata group="api" />
      <apidata name="Server" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Server" />
      <returns>
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.Headers.ProductInfoHeaderValue" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpResponseHeaders" ref="true" />
      </containers>
      <file name="7ddcc8a7-0c72-ff93-dd87-9f207a3c52f6" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpResponseHeaders.Trailer">
      <topicdata group="api" />
      <apidata name="Trailer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Trailer" />
      <returns>
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpResponseHeaders" ref="true" />
      </containers>
      <file name="476e740f-100d-bca4-3c71-2901b6247d6a" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncoding">
      <topicdata group="api" />
      <apidata name="TransferEncoding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TransferEncoding" />
      <returns>
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.Headers.TransferCodingHeaderValue" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpResponseHeaders" ref="true" />
      </containers>
      <file name="7fd946c1-bfb6-685f-bb0a-761d81d28f59" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpResponseHeaders.TransferEncodingChunked">
      <topicdata group="api" />
      <apidata name="TransferEncodingChunked" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TransferEncodingChunked" />
      <setter name="set_TransferEncodingChunked" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpResponseHeaders" ref="true" />
      </containers>
      <file name="9e1bff0d-b518-0085-eca0-88efc5e193ca" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpResponseHeaders.Upgrade">
      <topicdata group="api" />
      <apidata name="Upgrade" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Upgrade" />
      <returns>
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.Headers.ProductHeaderValue" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpResponseHeaders" ref="true" />
      </containers>
      <file name="c77ebe78-cd87-a496-9494-ef868de6c656" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpResponseHeaders.Vary">
      <topicdata group="api" />
      <apidata name="Vary" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Vary" />
      <returns>
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpResponseHeaders" ref="true" />
      </containers>
      <file name="e4bd75c4-3f1d-f7ba-2c6c-e6c8b8f76167" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpResponseHeaders.Via">
      <topicdata group="api" />
      <apidata name="Via" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Via" />
      <returns>
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.Headers.ViaHeaderValue" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpResponseHeaders" ref="true" />
      </containers>
      <file name="96e15fd3-9d46-b203-e0d4-0ed2de12dbaf" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpResponseHeaders.Warning">
      <topicdata group="api" />
      <apidata name="Warning" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Warning" />
      <returns>
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.Headers.WarningHeaderValue" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpResponseHeaders" ref="true" />
      </containers>
      <file name="f58dffb5-6db0-b0ee-d702-76ace7f941eb" />
    </api>
    <api id="P:System.Net.Http.Headers.HttpResponseHeaders.WwwAuthenticate">
      <topicdata group="api" />
      <apidata name="WwwAuthenticate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WwwAuthenticate" />
      <returns>
        <type api="T:System.Net.Http.Headers.HttpHeaderValueCollection`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.HttpResponseHeaders" ref="true" />
      </containers>
      <file name="df7c28ae-91d2-486c-c4b7-6a0fc3035160" />
    </api>
    <api id="T:System.Net.Http.Headers.MediaTypeHeaderValue">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.MediaTypeHeaderValue" />
      <apidata name="MediaTypeHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
      </containers>
      <file name="05dc5698-4520-60cf-5243-f50af02a9759" />
    </api>
    <api id="AllMembers.T:System.Net.Http.Headers.MediaTypeHeaderValue">
      <topicdata name="MediaTypeHeaderValue" group="list" subgroup="members" typeTopicId="T:System.Net.Http.Headers.MediaTypeHeaderValue" />
      <apidata name="MediaTypeHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor">
          <element api="M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)" />
          <element api="M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.String)" />
        </element>
        <element api="P:System.Net.Http.Headers.MediaTypeHeaderValue.CharSet" />
        <element api="M:System.Net.Http.Headers.MediaTypeHeaderValue.Equals(System.Object)" />
        <element api="M:System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode" />
        <element api="P:System.Net.Http.Headers.MediaTypeHeaderValue.MediaType" />
        <element api="P:System.Net.Http.Headers.MediaTypeHeaderValue.Parameters" />
        <element api="M:System.Net.Http.Headers.MediaTypeHeaderValue.Parse(System.String)" />
        <element api="M:System.Net.Http.Headers.MediaTypeHeaderValue.System#ICloneable#Clone" />
        <element api="M:System.Net.Http.Headers.MediaTypeHeaderValue.ToString" />
        <element api="M:System.Net.Http.Headers.MediaTypeHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeHeaderValue@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" />
      </containers>
      <file name="f9182081-21d7-819e-6177-2131b08ff2c9" />
    </api>
    <api id="Methods.T:System.Net.Http.Headers.MediaTypeHeaderValue">
      <topicdata name="MediaTypeHeaderValue" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.Headers.MediaTypeHeaderValue" />
      <apidata name="MediaTypeHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Net.Http.Headers.MediaTypeHeaderValue.Equals(System.Object)" />
        <element api="M:System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode" />
        <element api="M:System.Net.Http.Headers.MediaTypeHeaderValue.Parse(System.String)" />
        <element api="M:System.Net.Http.Headers.MediaTypeHeaderValue.System#ICloneable#Clone" />
        <element api="M:System.Net.Http.Headers.MediaTypeHeaderValue.ToString" />
        <element api="M:System.Net.Http.Headers.MediaTypeHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeHeaderValue@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" />
      </containers>
      <file name="1599e3d6-2313-e384-0964-c924e2b2f0c1" />
    </api>
    <api id="Properties.T:System.Net.Http.Headers.MediaTypeHeaderValue">
      <topicdata name="MediaTypeHeaderValue" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.Headers.MediaTypeHeaderValue" />
      <apidata name="MediaTypeHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Net.Http.Headers.MediaTypeHeaderValue.CharSet" />
        <element api="P:System.Net.Http.Headers.MediaTypeHeaderValue.MediaType" />
        <element api="P:System.Net.Http.Headers.MediaTypeHeaderValue.Parameters" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" />
      </containers>
      <file name="4c3ae760-8682-4835-cb5d-f51e81301500" />
    </api>
    <api id="Overload:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.MediaTypeHeaderValue" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)" />
        <element api="M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
      </containers>
      <file name="0a6be5f4-98ca-a5e9-ae6f-cc2696141c65" />
    </api>
    <api id="M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
      </containers>
      <file name="1c371354-c9bd-09b2-b7ce-3243294b1150" />
    </api>
    <api id="M:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.MediaTypeHeaderValue.#ctor" />
      <parameters>
        <parameter name="mediaType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
      </containers>
      <file name="706df793-dfd9-fd76-abdf-f1afb8c7abe4" />
    </api>
    <api id="P:System.Net.Http.Headers.MediaTypeHeaderValue.CharSet">
      <topicdata group="api" />
      <apidata name="CharSet" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CharSet" />
      <setter name="set_CharSet" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
      </containers>
      <file name="200b71dd-ba3a-8fa7-1d77-e30ac761162c" />
    </api>
    <api id="M:System.Net.Http.Headers.MediaTypeHeaderValue.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
      </containers>
      <file name="89827ba4-308f-e4b4-8899-32e3e8b040b3" />
    </api>
    <api id="M:System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
      </containers>
      <file name="f2f77829-de69-2cf8-578c-9fbec55dbfe3" />
    </api>
    <api id="P:System.Net.Http.Headers.MediaTypeHeaderValue.MediaType">
      <topicdata group="api" />
      <apidata name="MediaType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MediaType" />
      <setter name="set_MediaType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
      </containers>
      <file name="8abec407-ab8a-0500-740c-3e6626e6f8f4" />
    </api>
    <api id="P:System.Net.Http.Headers.MediaTypeHeaderValue.Parameters">
      <topicdata group="api" />
      <apidata name="Parameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parameters" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.Headers.NameValueHeaderValue" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
      </containers>
      <file name="3d214ace-3438-def3-cea0-0bdaf0301e74" />
    </api>
    <api id="M:System.Net.Http.Headers.MediaTypeHeaderValue.Parse(System.String)">
      <topicdata group="api" />
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
      </containers>
      <file name="1cae2a66-0487-d611-fac4-83d0c03307cb" />
    </api>
    <api id="M:System.Net.Http.Headers.MediaTypeHeaderValue.System#ICloneable#Clone">
      <topicdata group="api" eiiName="ICloneable.Clone" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICloneable.Clone">
          <type api="T:System.ICloneable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
      </containers>
      <file name="d405a17b-ed27-1e8c-3197-20cc3ef3cc91" />
    </api>
    <api id="M:System.Net.Http.Headers.MediaTypeHeaderValue.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
      </containers>
      <file name="6a87fbfe-f147-ad3d-5368-0133c7a7608c" />
    </api>
    <api id="M:System.Net.Http.Headers.MediaTypeHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeHeaderValue@)">
      <topicdata group="api" />
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parsedValue" out="true">
          <referenceTo>
            <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
      </containers>
      <file name="f3ca92f7-dafa-c1b0-a8f5-3ea634c17019" />
    </api>
    <api id="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />
      <apidata name="MediaTypeWithQualityHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
      </containers>
      <file name="a7888a5d-3e1b-08b4-5bc8-b83cc5e61e27" />
    </api>
    <api id="AllMembers.T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue">
      <topicdata name="MediaTypeWithQualityHeaderValue" group="list" subgroup="members" typeTopicId="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />
      <apidata name="MediaTypeWithQualityHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="P:System.Net.Http.Headers.MediaTypeHeaderValue.CharSet" />
        <element api="M:System.Net.Http.Headers.MediaTypeHeaderValue.Equals(System.Object)" />
        <element api="M:System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode" />
        <element api="P:System.Net.Http.Headers.MediaTypeHeaderValue.MediaType" />
        <element api="P:System.Net.Http.Headers.MediaTypeHeaderValue.Parameters" />
        <element api="M:System.Net.Http.Headers.MediaTypeHeaderValue.ToString" />
        <element api="Overload:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor">
          <element api="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String)" />
          <element api="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String,System.Double)" />
        </element>
        <element api="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse(System.String)" />
        <element api="P:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Quality" />
        <element api="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.System#ICloneable#Clone" />
        <element api="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeWithQualityHeaderValue@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />
      </containers>
      <file name="9148a10d-8464-62c1-eca0-a77c62eda22f" />
    </api>
    <api id="Methods.T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue">
      <topicdata name="MediaTypeWithQualityHeaderValue" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />
      <apidata name="MediaTypeWithQualityHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Net.Http.Headers.MediaTypeHeaderValue.Equals(System.Object)" />
        <element api="M:System.Net.Http.Headers.MediaTypeHeaderValue.GetHashCode" />
        <element api="M:System.Net.Http.Headers.MediaTypeHeaderValue.ToString" />
        <element api="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse(System.String)" />
        <element api="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.System#ICloneable#Clone" />
        <element api="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeWithQualityHeaderValue@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />
      </containers>
      <file name="33fb08e4-cfd6-1806-8245-baba837fbe59" />
    </api>
    <api id="Properties.T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue">
      <topicdata name="MediaTypeWithQualityHeaderValue" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />
      <apidata name="MediaTypeWithQualityHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Net.Http.Headers.MediaTypeHeaderValue.CharSet" />
        <element api="P:System.Net.Http.Headers.MediaTypeHeaderValue.MediaType" />
        <element api="P:System.Net.Http.Headers.MediaTypeHeaderValue.Parameters" />
        <element api="P:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Quality" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />
      </containers>
      <file name="bd767bd1-543a-eb6a-8afe-d65608d1bfd9" />
    </api>
    <api id="Overload:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String)" />
        <element api="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String,System.Double)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" ref="true" />
      </containers>
      <file name="4b60bec1-9a76-16df-47ae-83ed92ffc59a" />
    </api>
    <api id="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor" />
      <parameters>
        <parameter name="mediaType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" ref="true" />
      </containers>
      <file name="92516b6e-b144-f910-d8dc-61804259a034" />
    </api>
    <api id="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.#ctor" />
      <parameters>
        <parameter name="mediaType">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="quality">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" ref="true" />
      </containers>
      <file name="54223a5f-c259-8f7d-e810-43cbba4fb490" />
    </api>
    <api id="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Parse(System.String)">
      <topicdata group="api" />
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" ref="true" />
      </containers>
      <file name="30580fcf-a368-ca66-865d-54fad60bfdd9" />
    </api>
    <api id="P:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.Quality">
      <topicdata group="api" />
      <apidata name="Quality" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Quality" />
      <setter name="set_Quality" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" ref="true" />
      </containers>
      <file name="ec53a694-8541-52f0-8137-bf6c73bce4c3" />
    </api>
    <api id="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.System#ICloneable#Clone">
      <topicdata group="api" eiiName="ICloneable.Clone" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICloneable.Clone">
          <type api="T:System.ICloneable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" ref="true" />
      </containers>
      <file name="0c07e63f-5547-9db7-bc40-e7ec9fa15898" />
    </api>
    <api id="M:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.MediaTypeWithQualityHeaderValue@)">
      <topicdata group="api" />
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parsedValue" out="true">
          <referenceTo>
            <type api="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.MediaTypeWithQualityHeaderValue" ref="true" />
      </containers>
      <file name="ce13c9dd-0d65-bf71-15ed-82e551989b69" />
    </api>
    <api id="T:System.Net.Http.Headers.NameValueHeaderValue">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.NameValueHeaderValue" />
      <apidata name="NameValueHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
      </containers>
      <file name="68cae859-fc83-156e-ac35-38d226df812d" />
    </api>
    <api id="AllMembers.T:System.Net.Http.Headers.NameValueHeaderValue">
      <topicdata name="NameValueHeaderValue" group="list" subgroup="members" typeTopicId="T:System.Net.Http.Headers.NameValueHeaderValue" />
      <apidata name="NameValueHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.Http.Headers.NameValueHeaderValue.#ctor">
          <element api="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.Net.Http.Headers.NameValueHeaderValue)" />
          <element api="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String)" />
          <element api="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String,System.String)" />
        </element>
        <element api="M:System.Net.Http.Headers.NameValueHeaderValue.Equals(System.Object)" />
        <element api="M:System.Net.Http.Headers.NameValueHeaderValue.GetHashCode" />
        <element api="P:System.Net.Http.Headers.NameValueHeaderValue.Name" />
        <element api="M:System.Net.Http.Headers.NameValueHeaderValue.Parse(System.String)" />
        <element api="M:System.Net.Http.Headers.NameValueHeaderValue.System#ICloneable#Clone" />
        <element api="M:System.Net.Http.Headers.NameValueHeaderValue.ToString" />
        <element api="M:System.Net.Http.Headers.NameValueHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueHeaderValue@)" />
        <element api="P:System.Net.Http.Headers.NameValueHeaderValue.Value" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.NameValueHeaderValue" />
      </containers>
      <file name="cf905763-54ee-e9e7-0490-668c6fac75d4" />
    </api>
    <api id="Methods.T:System.Net.Http.Headers.NameValueHeaderValue">
      <topicdata name="NameValueHeaderValue" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.Headers.NameValueHeaderValue" />
      <apidata name="NameValueHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Net.Http.Headers.NameValueHeaderValue.Equals(System.Object)" />
        <element api="M:System.Net.Http.Headers.NameValueHeaderValue.GetHashCode" />
        <element api="M:System.Net.Http.Headers.NameValueHeaderValue.Parse(System.String)" />
        <element api="M:System.Net.Http.Headers.NameValueHeaderValue.System#ICloneable#Clone" />
        <element api="M:System.Net.Http.Headers.NameValueHeaderValue.ToString" />
        <element api="M:System.Net.Http.Headers.NameValueHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueHeaderValue@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.NameValueHeaderValue" />
      </containers>
      <file name="92c96154-4d00-cae4-10f4-6a5231b8cb1a" />
    </api>
    <api id="Properties.T:System.Net.Http.Headers.NameValueHeaderValue">
      <topicdata name="NameValueHeaderValue" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.Headers.NameValueHeaderValue" />
      <apidata name="NameValueHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Net.Http.Headers.NameValueHeaderValue.Name" />
        <element api="P:System.Net.Http.Headers.NameValueHeaderValue.Value" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.NameValueHeaderValue" />
      </containers>
      <file name="c8062367-bbb7-49ac-5539-08aeb52dca2f" />
    </api>
    <api id="Overload:System.Net.Http.Headers.NameValueHeaderValue.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.NameValueHeaderValue" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.Net.Http.Headers.NameValueHeaderValue)" />
        <element api="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String)" />
        <element api="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.NameValueHeaderValue" ref="true" />
      </containers>
      <file name="2cf2ab5d-de86-52fa-0de0-bd68e03b7234" />
    </api>
    <api id="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.Net.Http.Headers.NameValueHeaderValue)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Net.Http.Headers.NameValueHeaderValue.#ctor" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Net.Http.Headers.NameValueHeaderValue" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.NameValueHeaderValue" ref="true" />
      </containers>
      <file name="97580269-1f74-a950-eb3e-72a43f6afa37" />
    </api>
    <api id="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.NameValueHeaderValue.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.NameValueHeaderValue" ref="true" />
      </containers>
      <file name="425a5c0a-ccd5-9440-2e3f-28a5e0b5a041" />
    </api>
    <api id="M:System.Net.Http.Headers.NameValueHeaderValue.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.NameValueHeaderValue.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.NameValueHeaderValue" ref="true" />
      </containers>
      <file name="d0a59ca4-4eb0-b4e4-24d8-f56ece1c6541" />
    </api>
    <api id="M:System.Net.Http.Headers.NameValueHeaderValue.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.NameValueHeaderValue" ref="true" />
      </containers>
      <file name="7dfdaaba-7b49-6835-408a-01efcfcf5cc4" />
    </api>
    <api id="M:System.Net.Http.Headers.NameValueHeaderValue.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.NameValueHeaderValue" ref="true" />
      </containers>
      <file name="48d41dbc-bbdc-958e-d820-4a3e629433cd" />
    </api>
    <api id="P:System.Net.Http.Headers.NameValueHeaderValue.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.NameValueHeaderValue" ref="true" />
      </containers>
      <file name="37becbbb-6907-9ad1-3c51-3bb4cae442e0" />
    </api>
    <api id="M:System.Net.Http.Headers.NameValueHeaderValue.Parse(System.String)">
      <topicdata group="api" />
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.Headers.NameValueHeaderValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.NameValueHeaderValue" ref="true" />
      </containers>
      <file name="bf56e3cd-5817-e4de-ee1b-97f4a0a30c78" />
    </api>
    <api id="M:System.Net.Http.Headers.NameValueHeaderValue.System#ICloneable#Clone">
      <topicdata group="api" eiiName="ICloneable.Clone" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICloneable.Clone">
          <type api="T:System.ICloneable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.NameValueHeaderValue" ref="true" />
      </containers>
      <file name="fab70d4d-ec14-c5a4-c5bf-4bf07315bbf1" />
    </api>
    <api id="M:System.Net.Http.Headers.NameValueHeaderValue.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.NameValueHeaderValue" ref="true" />
      </containers>
      <file name="bfaaac24-b486-12db-245b-c9b33df6378a" />
    </api>
    <api id="M:System.Net.Http.Headers.NameValueHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueHeaderValue@)">
      <topicdata group="api" />
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parsedValue" out="true">
          <referenceTo>
            <type api="T:System.Net.Http.Headers.NameValueHeaderValue" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.NameValueHeaderValue" ref="true" />
      </containers>
      <file name="ca7f0d02-26e2-f8b8-6e58-42dbd161b377" />
    </api>
    <api id="P:System.Net.Http.Headers.NameValueHeaderValue.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.NameValueHeaderValue" ref="true" />
      </containers>
      <file name="4d316ebc-57e6-510a-ff92-73b233b3d81a" />
    </api>
    <api id="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />
      <apidata name="NameValueWithParametersHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Net.Http.Headers.NameValueHeaderValue" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
      </containers>
      <file name="d88a37de-b01f-b4f9-79f5-33a705c9e788" />
    </api>
    <api id="AllMembers.T:System.Net.Http.Headers.NameValueWithParametersHeaderValue">
      <topicdata name="NameValueWithParametersHeaderValue" group="list" subgroup="members" typeTopicId="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />
      <apidata name="NameValueWithParametersHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.Net.Http.Headers.NameValueHeaderValue.Name" />
        <element api="P:System.Net.Http.Headers.NameValueHeaderValue.Value" />
        <element api="Overload:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor">
          <element api="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.Net.Http.Headers.NameValueWithParametersHeaderValue)" />
          <element api="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String)" />
          <element api="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String,System.String)" />
        </element>
        <element api="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Equals(System.Object)" />
        <element api="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.GetHashCode" />
        <element api="P:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parameters" />
        <element api="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parse(System.String)" />
        <element api="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.System#ICloneable#Clone" />
        <element api="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.ToString" />
        <element api="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueWithParametersHeaderValue@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />
      </containers>
      <file name="fd578166-ef9b-2e20-2931-db0b00d9d7e5" />
    </api>
    <api id="Methods.T:System.Net.Http.Headers.NameValueWithParametersHeaderValue">
      <topicdata name="NameValueWithParametersHeaderValue" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />
      <apidata name="NameValueWithParametersHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Equals(System.Object)" />
        <element api="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.GetHashCode" />
        <element api="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parse(System.String)" />
        <element api="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.System#ICloneable#Clone" />
        <element api="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.ToString" />
        <element api="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueWithParametersHeaderValue@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />
      </containers>
      <file name="f0a2550c-f6f5-9178-6e28-18d0feba812b" />
    </api>
    <api id="Properties.T:System.Net.Http.Headers.NameValueWithParametersHeaderValue">
      <topicdata name="NameValueWithParametersHeaderValue" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />
      <apidata name="NameValueWithParametersHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Net.Http.Headers.NameValueHeaderValue.Name" />
        <element api="P:System.Net.Http.Headers.NameValueHeaderValue.Value" />
        <element api="P:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parameters" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />
      </containers>
      <file name="deb1d5fa-6ef2-8045-985e-af26983e1377" />
    </api>
    <api id="Overload:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.Net.Http.Headers.NameValueWithParametersHeaderValue)" />
        <element api="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String)" />
        <element api="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" ref="true" />
      </containers>
      <file name="84ad6a38-0bc4-de41-7e12-a8c317d60061" />
    </api>
    <api id="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.Net.Http.Headers.NameValueWithParametersHeaderValue)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" ref="true" />
      </containers>
      <file name="a2c4b597-41aa-b459-9562-4c58d3503627" />
    </api>
    <api id="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" ref="true" />
      </containers>
      <file name="4aec44ba-f89e-7a97-0c89-6352eb952974" />
    </api>
    <api id="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.NameValueWithParametersHeaderValue.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" ref="true" />
      </containers>
      <file name="61a19dce-4fdb-8795-a4d3-6dc681d7ed0c" />
    </api>
    <api id="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.Http.Headers.NameValueHeaderValue.Equals(System.Object)">
          <type api="T:System.Net.Http.Headers.NameValueHeaderValue" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" ref="true" />
      </containers>
      <file name="0a271c25-5aaa-dbec-2959-695d1cdfe2ee" />
    </api>
    <api id="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.Http.Headers.NameValueHeaderValue.GetHashCode">
          <type api="T:System.Net.Http.Headers.NameValueHeaderValue" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" ref="true" />
      </containers>
      <file name="314f8db0-64a4-408f-4dab-997e7cff4477" />
    </api>
    <api id="P:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parameters">
      <topicdata group="api" />
      <apidata name="Parameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parameters" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.Headers.NameValueHeaderValue" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" ref="true" />
      </containers>
      <file name="d4781fe5-5a8b-937c-66d7-6075e02a6b4a" />
    </api>
    <api id="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.Parse(System.String)">
      <topicdata group="api" />
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" ref="true" />
      </containers>
      <file name="2589a95d-7603-86f8-6ce4-97a4d46b2a4e" />
    </api>
    <api id="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.System#ICloneable#Clone">
      <topicdata group="api" eiiName="ICloneable.Clone" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICloneable.Clone">
          <type api="T:System.ICloneable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" ref="true" />
      </containers>
      <file name="458e7a3f-3028-8779-ff81-ed36159e2fa4" />
    </api>
    <api id="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.Http.Headers.NameValueHeaderValue.ToString">
          <type api="T:System.Net.Http.Headers.NameValueHeaderValue" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" ref="true" />
      </containers>
      <file name="381e5325-3620-835e-7a3c-ad1083dfc948" />
    </api>
    <api id="M:System.Net.Http.Headers.NameValueWithParametersHeaderValue.TryParse(System.String,System.Net.Http.Headers.NameValueWithParametersHeaderValue@)">
      <topicdata group="api" />
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parsedValue" out="true">
          <referenceTo>
            <type api="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.NameValueWithParametersHeaderValue" ref="true" />
      </containers>
      <file name="e39b328f-9b7f-be2b-7f87-4e3eaa10c6b9" />
    </api>
    <api id="T:System.Net.Http.Headers.ProductHeaderValue">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.ProductHeaderValue" />
      <apidata name="ProductHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
      </containers>
      <file name="a54f06aa-015f-904e-fcec-209f7a74c257" />
    </api>
    <api id="AllMembers.T:System.Net.Http.Headers.ProductHeaderValue">
      <topicdata name="ProductHeaderValue" group="list" subgroup="members" typeTopicId="T:System.Net.Http.Headers.ProductHeaderValue" />
      <apidata name="ProductHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.Http.Headers.ProductHeaderValue.#ctor">
          <element api="M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String)" />
          <element api="M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String,System.String)" />
        </element>
        <element api="M:System.Net.Http.Headers.ProductHeaderValue.Equals(System.Object)" />
        <element api="M:System.Net.Http.Headers.ProductHeaderValue.GetHashCode" />
        <element api="P:System.Net.Http.Headers.ProductHeaderValue.Name" />
        <element api="M:System.Net.Http.Headers.ProductHeaderValue.Parse(System.String)" />
        <element api="M:System.Net.Http.Headers.ProductHeaderValue.System#ICloneable#Clone" />
        <element api="M:System.Net.Http.Headers.ProductHeaderValue.ToString" />
        <element api="M:System.Net.Http.Headers.ProductHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductHeaderValue@)" />
        <element api="P:System.Net.Http.Headers.ProductHeaderValue.Version" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ProductHeaderValue" />
      </containers>
      <file name="6b59b0a2-f4f8-4460-8658-ac3419767559" />
    </api>
    <api id="Methods.T:System.Net.Http.Headers.ProductHeaderValue">
      <topicdata name="ProductHeaderValue" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.Headers.ProductHeaderValue" />
      <apidata name="ProductHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Net.Http.Headers.ProductHeaderValue.Equals(System.Object)" />
        <element api="M:System.Net.Http.Headers.ProductHeaderValue.GetHashCode" />
        <element api="M:System.Net.Http.Headers.ProductHeaderValue.Parse(System.String)" />
        <element api="M:System.Net.Http.Headers.ProductHeaderValue.System#ICloneable#Clone" />
        <element api="M:System.Net.Http.Headers.ProductHeaderValue.ToString" />
        <element api="M:System.Net.Http.Headers.ProductHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductHeaderValue@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ProductHeaderValue" />
      </containers>
      <file name="a36c86f6-dd74-0d58-c23e-ac07eea36a20" />
    </api>
    <api id="Properties.T:System.Net.Http.Headers.ProductHeaderValue">
      <topicdata name="ProductHeaderValue" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.Headers.ProductHeaderValue" />
      <apidata name="ProductHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Net.Http.Headers.ProductHeaderValue.Name" />
        <element api="P:System.Net.Http.Headers.ProductHeaderValue.Version" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ProductHeaderValue" />
      </containers>
      <file name="d4a4f9ab-4686-6ada-e59e-b929a0b2cc12" />
    </api>
    <api id="Overload:System.Net.Http.Headers.ProductHeaderValue.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.ProductHeaderValue" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String)" />
        <element api="M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ProductHeaderValue" ref="true" />
      </containers>
      <file name="63aa7b42-bac4-1625-4c13-b6b98ce2fa42" />
    </api>
    <api id="M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.ProductHeaderValue.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ProductHeaderValue" ref="true" />
      </containers>
      <file name="088c285f-162c-ba68-ffd7-f74e4c2da607" />
    </api>
    <api id="M:System.Net.Http.Headers.ProductHeaderValue.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.ProductHeaderValue.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="version">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ProductHeaderValue" ref="true" />
      </containers>
      <file name="6f221895-2175-ce29-1b42-f654f270d6c7" />
    </api>
    <api id="M:System.Net.Http.Headers.ProductHeaderValue.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ProductHeaderValue" ref="true" />
      </containers>
      <file name="3e4d325f-45eb-7316-0cf4-3b0607d42fbf" />
    </api>
    <api id="M:System.Net.Http.Headers.ProductHeaderValue.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ProductHeaderValue" ref="true" />
      </containers>
      <file name="2dd2fd76-a868-2741-43df-42a55208efea" />
    </api>
    <api id="P:System.Net.Http.Headers.ProductHeaderValue.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ProductHeaderValue" ref="true" />
      </containers>
      <file name="9d161903-6dcb-c42d-be20-0842ebd98803" />
    </api>
    <api id="M:System.Net.Http.Headers.ProductHeaderValue.Parse(System.String)">
      <topicdata group="api" />
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.Headers.ProductHeaderValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ProductHeaderValue" ref="true" />
      </containers>
      <file name="939ee05f-bb9d-4674-3592-35b0f31b6983" />
    </api>
    <api id="M:System.Net.Http.Headers.ProductHeaderValue.System#ICloneable#Clone">
      <topicdata group="api" eiiName="ICloneable.Clone" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICloneable.Clone">
          <type api="T:System.ICloneable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ProductHeaderValue" ref="true" />
      </containers>
      <file name="371f9eb5-f803-2946-2fa7-a0a8ecee886a" />
    </api>
    <api id="M:System.Net.Http.Headers.ProductHeaderValue.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ProductHeaderValue" ref="true" />
      </containers>
      <file name="ae8d4366-e0d0-e35d-99a5-74074304a0e3" />
    </api>
    <api id="M:System.Net.Http.Headers.ProductHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductHeaderValue@)">
      <topicdata group="api" />
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parsedValue" out="true">
          <referenceTo>
            <type api="T:System.Net.Http.Headers.ProductHeaderValue" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ProductHeaderValue" ref="true" />
      </containers>
      <file name="e581c108-988d-5c0c-34ca-311a0782a745" />
    </api>
    <api id="P:System.Net.Http.Headers.ProductHeaderValue.Version">
      <topicdata group="api" />
      <apidata name="Version" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Version" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ProductHeaderValue" ref="true" />
      </containers>
      <file name="362e0a72-e807-c2b7-6376-93f55ac74347" />
    </api>
    <api id="T:System.Net.Http.Headers.ProductInfoHeaderValue">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.ProductInfoHeaderValue" />
      <apidata name="ProductInfoHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
      </containers>
      <file name="a3a6225d-f954-0b40-bdc6-a5f0761208ec" />
    </api>
    <api id="AllMembers.T:System.Net.Http.Headers.ProductInfoHeaderValue">
      <topicdata name="ProductInfoHeaderValue" group="list" subgroup="members" typeTopicId="T:System.Net.Http.Headers.ProductInfoHeaderValue" />
      <apidata name="ProductInfoHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor">
          <element api="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.Net.Http.Headers.ProductHeaderValue)" />
          <element api="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String)" />
          <element api="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String,System.String)" />
        </element>
        <element api="P:System.Net.Http.Headers.ProductInfoHeaderValue.Comment" />
        <element api="M:System.Net.Http.Headers.ProductInfoHeaderValue.Equals(System.Object)" />
        <element api="M:System.Net.Http.Headers.ProductInfoHeaderValue.GetHashCode" />
        <element api="M:System.Net.Http.Headers.ProductInfoHeaderValue.Parse(System.String)" />
        <element api="P:System.Net.Http.Headers.ProductInfoHeaderValue.Product" />
        <element api="M:System.Net.Http.Headers.ProductInfoHeaderValue.System#ICloneable#Clone" />
        <element api="M:System.Net.Http.Headers.ProductInfoHeaderValue.ToString" />
        <element api="M:System.Net.Http.Headers.ProductInfoHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductInfoHeaderValue@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ProductInfoHeaderValue" />
      </containers>
      <file name="f1136feb-5de5-47db-952d-4b925094a496" />
    </api>
    <api id="Methods.T:System.Net.Http.Headers.ProductInfoHeaderValue">
      <topicdata name="ProductInfoHeaderValue" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.Headers.ProductInfoHeaderValue" />
      <apidata name="ProductInfoHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Net.Http.Headers.ProductInfoHeaderValue.Equals(System.Object)" />
        <element api="M:System.Net.Http.Headers.ProductInfoHeaderValue.GetHashCode" />
        <element api="M:System.Net.Http.Headers.ProductInfoHeaderValue.Parse(System.String)" />
        <element api="M:System.Net.Http.Headers.ProductInfoHeaderValue.System#ICloneable#Clone" />
        <element api="M:System.Net.Http.Headers.ProductInfoHeaderValue.ToString" />
        <element api="M:System.Net.Http.Headers.ProductInfoHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductInfoHeaderValue@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ProductInfoHeaderValue" />
      </containers>
      <file name="cfef0556-c6b5-35b5-0c69-e50c73bd09d8" />
    </api>
    <api id="Properties.T:System.Net.Http.Headers.ProductInfoHeaderValue">
      <topicdata name="ProductInfoHeaderValue" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.Headers.ProductInfoHeaderValue" />
      <apidata name="ProductInfoHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Net.Http.Headers.ProductInfoHeaderValue.Comment" />
        <element api="P:System.Net.Http.Headers.ProductInfoHeaderValue.Product" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ProductInfoHeaderValue" />
      </containers>
      <file name="bad11f4e-022f-aa18-5bd0-085ba6598a39" />
    </api>
    <api id="Overload:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.ProductInfoHeaderValue" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.Net.Http.Headers.ProductHeaderValue)" />
        <element api="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String)" />
        <element api="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ProductInfoHeaderValue" ref="true" />
      </containers>
      <file name="0f69d238-9f10-7e3f-4456-db2c5835d745" />
    </api>
    <api id="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.Net.Http.Headers.ProductHeaderValue)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor" />
      <parameters>
        <parameter name="product">
          <type api="T:System.Net.Http.Headers.ProductHeaderValue" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ProductInfoHeaderValue" ref="true" />
      </containers>
      <file name="7c366c57-655c-6314-885c-c60d08bf9d41" />
    </api>
    <api id="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor" />
      <parameters>
        <parameter name="comment">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ProductInfoHeaderValue" ref="true" />
      </containers>
      <file name="2535d8e2-8f2b-6c59-935b-707747f220d1" />
    </api>
    <api id="M:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.ProductInfoHeaderValue.#ctor" />
      <parameters>
        <parameter name="productName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="productVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ProductInfoHeaderValue" ref="true" />
      </containers>
      <file name="2b8c41c5-fc72-b179-0e63-3b0b3f57a28b" />
    </api>
    <api id="P:System.Net.Http.Headers.ProductInfoHeaderValue.Comment">
      <topicdata group="api" />
      <apidata name="Comment" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Comment" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ProductInfoHeaderValue" ref="true" />
      </containers>
      <file name="f7878940-1f40-bf70-b717-1170c2e71421" />
    </api>
    <api id="M:System.Net.Http.Headers.ProductInfoHeaderValue.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ProductInfoHeaderValue" ref="true" />
      </containers>
      <file name="7dd8f05b-10ab-5f0e-249a-232aeb0b3527" />
    </api>
    <api id="M:System.Net.Http.Headers.ProductInfoHeaderValue.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ProductInfoHeaderValue" ref="true" />
      </containers>
      <file name="e4d4cedb-bcaf-93d8-2a3d-faac9ebe3b98" />
    </api>
    <api id="M:System.Net.Http.Headers.ProductInfoHeaderValue.Parse(System.String)">
      <topicdata group="api" />
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.Headers.ProductInfoHeaderValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ProductInfoHeaderValue" ref="true" />
      </containers>
      <file name="89fca06b-20f7-262f-fe6c-0242bdc65864" />
    </api>
    <api id="P:System.Net.Http.Headers.ProductInfoHeaderValue.Product">
      <topicdata group="api" />
      <apidata name="Product" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Product" />
      <returns>
        <type api="T:System.Net.Http.Headers.ProductHeaderValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ProductInfoHeaderValue" ref="true" />
      </containers>
      <file name="7cdde9e8-a33c-3f89-e6d9-6a7341712b3c" />
    </api>
    <api id="M:System.Net.Http.Headers.ProductInfoHeaderValue.System#ICloneable#Clone">
      <topicdata group="api" eiiName="ICloneable.Clone" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICloneable.Clone">
          <type api="T:System.ICloneable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ProductInfoHeaderValue" ref="true" />
      </containers>
      <file name="b1cd605a-92b3-dcf3-fa46-b4f230d42a40" />
    </api>
    <api id="M:System.Net.Http.Headers.ProductInfoHeaderValue.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ProductInfoHeaderValue" ref="true" />
      </containers>
      <file name="be4e5967-5780-d0bf-0277-a906cd402957" />
    </api>
    <api id="M:System.Net.Http.Headers.ProductInfoHeaderValue.TryParse(System.String,System.Net.Http.Headers.ProductInfoHeaderValue@)">
      <topicdata group="api" />
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parsedValue" out="true">
          <referenceTo>
            <type api="T:System.Net.Http.Headers.ProductInfoHeaderValue" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ProductInfoHeaderValue" ref="true" />
      </containers>
      <file name="b3272c2f-d026-d5c4-6dee-41a9fc757a55" />
    </api>
    <api id="T:System.Net.Http.Headers.RangeConditionHeaderValue">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.RangeConditionHeaderValue" />
      <apidata name="RangeConditionHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
      </containers>
      <file name="8471dc63-80de-97ab-bd4c-39b7216887ad" />
    </api>
    <api id="AllMembers.T:System.Net.Http.Headers.RangeConditionHeaderValue">
      <topicdata name="RangeConditionHeaderValue" group="list" subgroup="members" typeTopicId="T:System.Net.Http.Headers.RangeConditionHeaderValue" />
      <apidata name="RangeConditionHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor">
          <element api="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.DateTimeOffset)" />
          <element api="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.Net.Http.Headers.EntityTagHeaderValue)" />
          <element api="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.String)" />
        </element>
        <element api="P:System.Net.Http.Headers.RangeConditionHeaderValue.Date" />
        <element api="P:System.Net.Http.Headers.RangeConditionHeaderValue.EntityTag" />
        <element api="M:System.Net.Http.Headers.RangeConditionHeaderValue.Equals(System.Object)" />
        <element api="M:System.Net.Http.Headers.RangeConditionHeaderValue.GetHashCode" />
        <element api="M:System.Net.Http.Headers.RangeConditionHeaderValue.Parse(System.String)" />
        <element api="M:System.Net.Http.Headers.RangeConditionHeaderValue.System#ICloneable#Clone" />
        <element api="M:System.Net.Http.Headers.RangeConditionHeaderValue.ToString" />
        <element api="M:System.Net.Http.Headers.RangeConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeConditionHeaderValue@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeConditionHeaderValue" />
      </containers>
      <file name="23fe8780-83ad-c959-aedf-af0299c31f07" />
    </api>
    <api id="Methods.T:System.Net.Http.Headers.RangeConditionHeaderValue">
      <topicdata name="RangeConditionHeaderValue" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.Headers.RangeConditionHeaderValue" />
      <apidata name="RangeConditionHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Net.Http.Headers.RangeConditionHeaderValue.Equals(System.Object)" />
        <element api="M:System.Net.Http.Headers.RangeConditionHeaderValue.GetHashCode" />
        <element api="M:System.Net.Http.Headers.RangeConditionHeaderValue.Parse(System.String)" />
        <element api="M:System.Net.Http.Headers.RangeConditionHeaderValue.System#ICloneable#Clone" />
        <element api="M:System.Net.Http.Headers.RangeConditionHeaderValue.ToString" />
        <element api="M:System.Net.Http.Headers.RangeConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeConditionHeaderValue@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeConditionHeaderValue" />
      </containers>
      <file name="02482613-1d4f-33ae-7c4b-372d674187fd" />
    </api>
    <api id="Properties.T:System.Net.Http.Headers.RangeConditionHeaderValue">
      <topicdata name="RangeConditionHeaderValue" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.Headers.RangeConditionHeaderValue" />
      <apidata name="RangeConditionHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Net.Http.Headers.RangeConditionHeaderValue.Date" />
        <element api="P:System.Net.Http.Headers.RangeConditionHeaderValue.EntityTag" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeConditionHeaderValue" />
      </containers>
      <file name="6dd12f2f-da9c-fd8c-83bc-59f6242568de" />
    </api>
    <api id="Overload:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.RangeConditionHeaderValue" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.DateTimeOffset)" />
        <element api="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.Net.Http.Headers.EntityTagHeaderValue)" />
        <element api="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeConditionHeaderValue" ref="true" />
      </containers>
      <file name="84283e86-5c62-7c1d-47b4-609e60699cc1" />
    </api>
    <api id="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.DateTimeOffset)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor" />
      <parameters>
        <parameter name="date">
          <type api="T:System.DateTimeOffset" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeConditionHeaderValue" ref="true" />
      </containers>
      <file name="ee33ae07-e18d-bd19-ae4d-92d214d1d31a" />
    </api>
    <api id="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.Net.Http.Headers.EntityTagHeaderValue)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor" />
      <parameters>
        <parameter name="entityTag">
          <type api="T:System.Net.Http.Headers.EntityTagHeaderValue" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeConditionHeaderValue" ref="true" />
      </containers>
      <file name="d1505613-f67b-54e8-3fdb-4c0c64509fcb" />
    </api>
    <api id="M:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.RangeConditionHeaderValue.#ctor" />
      <parameters>
        <parameter name="entityTag">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeConditionHeaderValue" ref="true" />
      </containers>
      <file name="373b6a1c-048f-dec1-d347-3a7ccf182df0" />
    </api>
    <api id="P:System.Net.Http.Headers.RangeConditionHeaderValue.Date">
      <topicdata group="api" />
      <apidata name="Date" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Date" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTimeOffset" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeConditionHeaderValue" ref="true" />
      </containers>
      <file name="90231666-342f-435c-f851-2055c154b332" />
    </api>
    <api id="P:System.Net.Http.Headers.RangeConditionHeaderValue.EntityTag">
      <topicdata group="api" />
      <apidata name="EntityTag" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EntityTag" />
      <returns>
        <type api="T:System.Net.Http.Headers.EntityTagHeaderValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeConditionHeaderValue" ref="true" />
      </containers>
      <file name="884e9254-e08e-2dd6-ead2-5e2a76a5a090" />
    </api>
    <api id="M:System.Net.Http.Headers.RangeConditionHeaderValue.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeConditionHeaderValue" ref="true" />
      </containers>
      <file name="a2699434-d032-5661-11c0-dba4afbe8495" />
    </api>
    <api id="M:System.Net.Http.Headers.RangeConditionHeaderValue.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeConditionHeaderValue" ref="true" />
      </containers>
      <file name="090e4b41-55ad-dbb1-1aed-fb7c053a8121" />
    </api>
    <api id="M:System.Net.Http.Headers.RangeConditionHeaderValue.Parse(System.String)">
      <topicdata group="api" />
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.Headers.RangeConditionHeaderValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeConditionHeaderValue" ref="true" />
      </containers>
      <file name="63a88333-38a0-b1d2-3c8f-19112c44ccbd" />
    </api>
    <api id="M:System.Net.Http.Headers.RangeConditionHeaderValue.System#ICloneable#Clone">
      <topicdata group="api" eiiName="ICloneable.Clone" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICloneable.Clone">
          <type api="T:System.ICloneable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeConditionHeaderValue" ref="true" />
      </containers>
      <file name="61f001cf-14bc-ef7b-eef8-47ba1f6ab0d2" />
    </api>
    <api id="M:System.Net.Http.Headers.RangeConditionHeaderValue.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeConditionHeaderValue" ref="true" />
      </containers>
      <file name="86b0142b-24e4-337e-c600-aec0ebb033b7" />
    </api>
    <api id="M:System.Net.Http.Headers.RangeConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeConditionHeaderValue@)">
      <topicdata group="api" />
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parsedValue" out="true">
          <referenceTo>
            <type api="T:System.Net.Http.Headers.RangeConditionHeaderValue" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeConditionHeaderValue" ref="true" />
      </containers>
      <file name="41bce53d-ba91-3ebf-48f4-9f674a9684e4" />
    </api>
    <api id="T:System.Net.Http.Headers.RangeHeaderValue">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.RangeHeaderValue" />
      <apidata name="RangeHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.Http.Headers.RangeHeaderValue.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
      </containers>
      <file name="dc10ce56-c0ef-5e49-be7a-c09c20617827" />
    </api>
    <api id="AllMembers.T:System.Net.Http.Headers.RangeHeaderValue">
      <topicdata name="RangeHeaderValue" group="list" subgroup="members" typeTopicId="T:System.Net.Http.Headers.RangeHeaderValue" />
      <apidata name="RangeHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.Http.Headers.RangeHeaderValue.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.Http.Headers.RangeHeaderValue.#ctor">
          <element api="M:System.Net.Http.Headers.RangeHeaderValue.#ctor" />
          <element api="M:System.Net.Http.Headers.RangeHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})" />
        </element>
        <element api="M:System.Net.Http.Headers.RangeHeaderValue.Equals(System.Object)" />
        <element api="M:System.Net.Http.Headers.RangeHeaderValue.GetHashCode" />
        <element api="M:System.Net.Http.Headers.RangeHeaderValue.Parse(System.String)" />
        <element api="P:System.Net.Http.Headers.RangeHeaderValue.Ranges" />
        <element api="M:System.Net.Http.Headers.RangeHeaderValue.System#ICloneable#Clone" />
        <element api="M:System.Net.Http.Headers.RangeHeaderValue.ToString" />
        <element api="M:System.Net.Http.Headers.RangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeHeaderValue@)" />
        <element api="P:System.Net.Http.Headers.RangeHeaderValue.Unit" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeHeaderValue" />
      </containers>
      <file name="a8518ef0-5be1-cee1-9d2f-6b5b68486c46" />
    </api>
    <api id="Methods.T:System.Net.Http.Headers.RangeHeaderValue">
      <topicdata name="RangeHeaderValue" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.Headers.RangeHeaderValue" />
      <apidata name="RangeHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.Http.Headers.RangeHeaderValue.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Net.Http.Headers.RangeHeaderValue.Equals(System.Object)" />
        <element api="M:System.Net.Http.Headers.RangeHeaderValue.GetHashCode" />
        <element api="M:System.Net.Http.Headers.RangeHeaderValue.Parse(System.String)" />
        <element api="M:System.Net.Http.Headers.RangeHeaderValue.System#ICloneable#Clone" />
        <element api="M:System.Net.Http.Headers.RangeHeaderValue.ToString" />
        <element api="M:System.Net.Http.Headers.RangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeHeaderValue@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeHeaderValue" />
      </containers>
      <file name="a4685dfb-e705-7aa0-cf29-9424bc7c9bcb" />
    </api>
    <api id="Properties.T:System.Net.Http.Headers.RangeHeaderValue">
      <topicdata name="RangeHeaderValue" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.Headers.RangeHeaderValue" />
      <apidata name="RangeHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.Http.Headers.RangeHeaderValue.#ctor" />
      <elements>
        <element api="P:System.Net.Http.Headers.RangeHeaderValue.Ranges" />
        <element api="P:System.Net.Http.Headers.RangeHeaderValue.Unit" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeHeaderValue" />
      </containers>
      <file name="45110507-69f8-dbe3-2c9c-a05d631d4ea0" />
    </api>
    <api id="Overload:System.Net.Http.Headers.RangeHeaderValue.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.RangeHeaderValue" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.Http.Headers.RangeHeaderValue.#ctor" />
        <element api="M:System.Net.Http.Headers.RangeHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeHeaderValue" ref="true" />
      </containers>
      <file name="3a8087eb-b5f4-abeb-849c-e4a0e625e2a3" />
    </api>
    <api id="M:System.Net.Http.Headers.RangeHeaderValue.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.RangeHeaderValue.#ctor" />
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeHeaderValue" ref="true" />
      </containers>
      <file name="3a7d243e-926d-9f29-66fd-4f6e1865f368" />
    </api>
    <api id="M:System.Net.Http.Headers.RangeHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.RangeHeaderValue.#ctor" />
      <parameters>
        <parameter name="from">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="to">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeHeaderValue" ref="true" />
      </containers>
      <file name="fc6fb941-4ff6-61a0-f2f4-fc0dcae3864c" />
    </api>
    <api id="M:System.Net.Http.Headers.RangeHeaderValue.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeHeaderValue" ref="true" />
      </containers>
      <file name="b5111f2f-89c4-761a-0123-2e98a54032cd" />
    </api>
    <api id="M:System.Net.Http.Headers.RangeHeaderValue.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeHeaderValue" ref="true" />
      </containers>
      <file name="35abc8dc-d6c1-702d-79ba-ab9b233b4d32" />
    </api>
    <api id="M:System.Net.Http.Headers.RangeHeaderValue.Parse(System.String)">
      <topicdata group="api" />
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.Headers.RangeHeaderValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeHeaderValue" ref="true" />
      </containers>
      <file name="094e74b9-e277-850c-0351-2dc817f4ccee" />
    </api>
    <api id="P:System.Net.Http.Headers.RangeHeaderValue.Ranges">
      <topicdata group="api" />
      <apidata name="Ranges" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Ranges" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.Headers.RangeItemHeaderValue" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeHeaderValue" ref="true" />
      </containers>
      <file name="fd9af0de-215e-b9f1-61ca-18a9bacd8817" />
    </api>
    <api id="M:System.Net.Http.Headers.RangeHeaderValue.System#ICloneable#Clone">
      <topicdata group="api" eiiName="ICloneable.Clone" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICloneable.Clone">
          <type api="T:System.ICloneable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeHeaderValue" ref="true" />
      </containers>
      <file name="b7af9b93-8e24-76fe-0672-ff8251343320" />
    </api>
    <api id="M:System.Net.Http.Headers.RangeHeaderValue.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeHeaderValue" ref="true" />
      </containers>
      <file name="376b13b6-6017-5d19-de89-952346314067" />
    </api>
    <api id="M:System.Net.Http.Headers.RangeHeaderValue.TryParse(System.String,System.Net.Http.Headers.RangeHeaderValue@)">
      <topicdata group="api" />
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parsedValue" out="true">
          <referenceTo>
            <type api="T:System.Net.Http.Headers.RangeHeaderValue" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeHeaderValue" ref="true" />
      </containers>
      <file name="e9054efd-33a5-b076-14cf-8b9ce4f65512" />
    </api>
    <api id="P:System.Net.Http.Headers.RangeHeaderValue.Unit">
      <topicdata group="api" />
      <apidata name="Unit" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Unit" />
      <setter name="set_Unit" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeHeaderValue" ref="true" />
      </containers>
      <file name="50a23dee-2da0-73c4-c0da-bb577c581b12" />
    </api>
    <api id="T:System.Net.Http.Headers.RangeItemHeaderValue">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.RangeItemHeaderValue" />
      <apidata name="RangeItemHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
      </containers>
      <file name="4a117588-60c5-2a60-cd33-89f7ef9c1721" />
    </api>
    <api id="AllMembers.T:System.Net.Http.Headers.RangeItemHeaderValue">
      <topicdata name="RangeItemHeaderValue" group="list" subgroup="members" typeTopicId="T:System.Net.Http.Headers.RangeItemHeaderValue" />
      <apidata name="RangeItemHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Net.Http.Headers.RangeItemHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})" />
        <element api="M:System.Net.Http.Headers.RangeItemHeaderValue.Equals(System.Object)" />
        <element api="P:System.Net.Http.Headers.RangeItemHeaderValue.From" />
        <element api="M:System.Net.Http.Headers.RangeItemHeaderValue.GetHashCode" />
        <element api="M:System.Net.Http.Headers.RangeItemHeaderValue.System#ICloneable#Clone" />
        <element api="P:System.Net.Http.Headers.RangeItemHeaderValue.To" />
        <element api="M:System.Net.Http.Headers.RangeItemHeaderValue.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeItemHeaderValue" />
      </containers>
      <file name="f9b6da64-920a-bb35-eb57-d26afedc3c9e" />
    </api>
    <api id="Methods.T:System.Net.Http.Headers.RangeItemHeaderValue">
      <topicdata name="RangeItemHeaderValue" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.Headers.RangeItemHeaderValue" />
      <apidata name="RangeItemHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Net.Http.Headers.RangeItemHeaderValue.Equals(System.Object)" />
        <element api="M:System.Net.Http.Headers.RangeItemHeaderValue.GetHashCode" />
        <element api="M:System.Net.Http.Headers.RangeItemHeaderValue.System#ICloneable#Clone" />
        <element api="M:System.Net.Http.Headers.RangeItemHeaderValue.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeItemHeaderValue" />
      </containers>
      <file name="e96efd3d-cb65-28f5-4481-8f68c90d9341" />
    </api>
    <api id="Properties.T:System.Net.Http.Headers.RangeItemHeaderValue">
      <topicdata name="RangeItemHeaderValue" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.Headers.RangeItemHeaderValue" />
      <apidata name="RangeItemHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Net.Http.Headers.RangeItemHeaderValue.From" />
        <element api="P:System.Net.Http.Headers.RangeItemHeaderValue.To" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeItemHeaderValue" />
      </containers>
      <file name="b4f326af-30c5-56c4-d9ca-a27dfcfee43c" />
    </api>
    <api id="M:System.Net.Http.Headers.RangeItemHeaderValue.#ctor(System.Nullable{System.Int64},System.Nullable{System.Int64})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="from">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="to">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeItemHeaderValue" ref="true" />
      </containers>
      <file name="f8d8290d-edd9-6be8-3d5b-6b7dfafb154e" />
    </api>
    <api id="M:System.Net.Http.Headers.RangeItemHeaderValue.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeItemHeaderValue" ref="true" />
      </containers>
      <file name="d7b8f65e-c72a-b355-e4f3-4467aa71ff5e" />
    </api>
    <api id="P:System.Net.Http.Headers.RangeItemHeaderValue.From">
      <topicdata group="api" />
      <apidata name="From" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_From" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeItemHeaderValue" ref="true" />
      </containers>
      <file name="6a1919e6-01a5-ff32-fc31-2b238c743cb1" />
    </api>
    <api id="M:System.Net.Http.Headers.RangeItemHeaderValue.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeItemHeaderValue" ref="true" />
      </containers>
      <file name="baf35614-894a-f979-afd8-ba5a8aa05d10" />
    </api>
    <api id="M:System.Net.Http.Headers.RangeItemHeaderValue.System#ICloneable#Clone">
      <topicdata group="api" eiiName="ICloneable.Clone" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICloneable.Clone">
          <type api="T:System.ICloneable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeItemHeaderValue" ref="true" />
      </containers>
      <file name="f50e1482-8ab3-779d-853e-c56f913ecd7c" />
    </api>
    <api id="P:System.Net.Http.Headers.RangeItemHeaderValue.To">
      <topicdata group="api" />
      <apidata name="To" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_To" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeItemHeaderValue" ref="true" />
      </containers>
      <file name="61278d10-b363-ffd9-1ba3-cdedc9979855" />
    </api>
    <api id="M:System.Net.Http.Headers.RangeItemHeaderValue.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RangeItemHeaderValue" ref="true" />
      </containers>
      <file name="409db469-eea4-79cf-5244-71e1c60c99a0" />
    </api>
    <api id="T:System.Net.Http.Headers.RetryConditionHeaderValue">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.RetryConditionHeaderValue" />
      <apidata name="RetryConditionHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
      </containers>
      <file name="f710561f-6c63-c98b-d5f6-2a85023005a3" />
    </api>
    <api id="AllMembers.T:System.Net.Http.Headers.RetryConditionHeaderValue">
      <topicdata name="RetryConditionHeaderValue" group="list" subgroup="members" typeTopicId="T:System.Net.Http.Headers.RetryConditionHeaderValue" />
      <apidata name="RetryConditionHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor">
          <element api="M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.DateTimeOffset)" />
          <element api="M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.TimeSpan)" />
        </element>
        <element api="P:System.Net.Http.Headers.RetryConditionHeaderValue.Date" />
        <element api="P:System.Net.Http.Headers.RetryConditionHeaderValue.Delta" />
        <element api="M:System.Net.Http.Headers.RetryConditionHeaderValue.Equals(System.Object)" />
        <element api="M:System.Net.Http.Headers.RetryConditionHeaderValue.GetHashCode" />
        <element api="M:System.Net.Http.Headers.RetryConditionHeaderValue.Parse(System.String)" />
        <element api="M:System.Net.Http.Headers.RetryConditionHeaderValue.System#ICloneable#Clone" />
        <element api="M:System.Net.Http.Headers.RetryConditionHeaderValue.ToString" />
        <element api="M:System.Net.Http.Headers.RetryConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RetryConditionHeaderValue@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RetryConditionHeaderValue" />
      </containers>
      <file name="5523163e-8c93-f89f-efab-88bef75286f2" />
    </api>
    <api id="Methods.T:System.Net.Http.Headers.RetryConditionHeaderValue">
      <topicdata name="RetryConditionHeaderValue" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.Headers.RetryConditionHeaderValue" />
      <apidata name="RetryConditionHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Net.Http.Headers.RetryConditionHeaderValue.Equals(System.Object)" />
        <element api="M:System.Net.Http.Headers.RetryConditionHeaderValue.GetHashCode" />
        <element api="M:System.Net.Http.Headers.RetryConditionHeaderValue.Parse(System.String)" />
        <element api="M:System.Net.Http.Headers.RetryConditionHeaderValue.System#ICloneable#Clone" />
        <element api="M:System.Net.Http.Headers.RetryConditionHeaderValue.ToString" />
        <element api="M:System.Net.Http.Headers.RetryConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RetryConditionHeaderValue@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RetryConditionHeaderValue" />
      </containers>
      <file name="92e9b251-1660-a0c1-651b-754b25311439" />
    </api>
    <api id="Properties.T:System.Net.Http.Headers.RetryConditionHeaderValue">
      <topicdata name="RetryConditionHeaderValue" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.Headers.RetryConditionHeaderValue" />
      <apidata name="RetryConditionHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Net.Http.Headers.RetryConditionHeaderValue.Date" />
        <element api="P:System.Net.Http.Headers.RetryConditionHeaderValue.Delta" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RetryConditionHeaderValue" />
      </containers>
      <file name="81b814ea-9c66-0bd1-2a65-5e4021f09843" />
    </api>
    <api id="Overload:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.RetryConditionHeaderValue" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.DateTimeOffset)" />
        <element api="M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RetryConditionHeaderValue" ref="true" />
      </containers>
      <file name="d94cfe93-1cea-d143-67c7-8ff9d6beee44" />
    </api>
    <api id="M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.DateTimeOffset)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor" />
      <parameters>
        <parameter name="date">
          <type api="T:System.DateTimeOffset" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RetryConditionHeaderValue" ref="true" />
      </containers>
      <file name="e7fa4dfd-38b2-90f9-70a9-b7665b8c6e9d" />
    </api>
    <api id="M:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.RetryConditionHeaderValue.#ctor" />
      <parameters>
        <parameter name="delta">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RetryConditionHeaderValue" ref="true" />
      </containers>
      <file name="91db8fc1-8c42-43eb-6547-8e1577909310" />
    </api>
    <api id="P:System.Net.Http.Headers.RetryConditionHeaderValue.Date">
      <topicdata group="api" />
      <apidata name="Date" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Date" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTimeOffset" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RetryConditionHeaderValue" ref="true" />
      </containers>
      <file name="dfb992fa-f403-0f60-00f1-b3903470e181" />
    </api>
    <api id="P:System.Net.Http.Headers.RetryConditionHeaderValue.Delta">
      <topicdata group="api" />
      <apidata name="Delta" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Delta" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.TimeSpan" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RetryConditionHeaderValue" ref="true" />
      </containers>
      <file name="175a1436-a509-21ef-8ed6-b18dff29ca26" />
    </api>
    <api id="M:System.Net.Http.Headers.RetryConditionHeaderValue.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RetryConditionHeaderValue" ref="true" />
      </containers>
      <file name="bdbb4cfc-9678-c1b0-e014-614e40178390" />
    </api>
    <api id="M:System.Net.Http.Headers.RetryConditionHeaderValue.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RetryConditionHeaderValue" ref="true" />
      </containers>
      <file name="933ee939-0d09-69d0-2aff-fa36a16bb37a" />
    </api>
    <api id="M:System.Net.Http.Headers.RetryConditionHeaderValue.Parse(System.String)">
      <topicdata group="api" />
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.Headers.RetryConditionHeaderValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RetryConditionHeaderValue" ref="true" />
      </containers>
      <file name="9272779e-3f03-e46e-3ffc-44cf54490a04" />
    </api>
    <api id="M:System.Net.Http.Headers.RetryConditionHeaderValue.System#ICloneable#Clone">
      <topicdata group="api" eiiName="ICloneable.Clone" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICloneable.Clone">
          <type api="T:System.ICloneable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RetryConditionHeaderValue" ref="true" />
      </containers>
      <file name="71ecb979-5c62-3ff7-563b-aef172a24ace" />
    </api>
    <api id="M:System.Net.Http.Headers.RetryConditionHeaderValue.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RetryConditionHeaderValue" ref="true" />
      </containers>
      <file name="c5211314-4ca3-3837-6157-f83dc3b8396d" />
    </api>
    <api id="M:System.Net.Http.Headers.RetryConditionHeaderValue.TryParse(System.String,System.Net.Http.Headers.RetryConditionHeaderValue@)">
      <topicdata group="api" />
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parsedValue" out="true">
          <referenceTo>
            <type api="T:System.Net.Http.Headers.RetryConditionHeaderValue" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.RetryConditionHeaderValue" ref="true" />
      </containers>
      <file name="92a0179c-b9b8-ceee-5ea6-ebfa7ff057d9" />
    </api>
    <api id="T:System.Net.Http.Headers.StringWithQualityHeaderValue">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.StringWithQualityHeaderValue" />
      <apidata name="StringWithQualityHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
      </containers>
      <file name="7f99225d-4bf6-db30-640d-75e5a94b5029" />
    </api>
    <api id="AllMembers.T:System.Net.Http.Headers.StringWithQualityHeaderValue">
      <topicdata name="StringWithQualityHeaderValue" group="list" subgroup="members" typeTopicId="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />
      <apidata name="StringWithQualityHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor">
          <element api="M:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String)" />
          <element api="M:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String,System.Double)" />
        </element>
        <element api="M:System.Net.Http.Headers.StringWithQualityHeaderValue.Equals(System.Object)" />
        <element api="M:System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode" />
        <element api="M:System.Net.Http.Headers.StringWithQualityHeaderValue.Parse(System.String)" />
        <element api="P:System.Net.Http.Headers.StringWithQualityHeaderValue.Quality" />
        <element api="M:System.Net.Http.Headers.StringWithQualityHeaderValue.System#ICloneable#Clone" />
        <element api="M:System.Net.Http.Headers.StringWithQualityHeaderValue.ToString" />
        <element api="M:System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.StringWithQualityHeaderValue@)" />
        <element api="P:System.Net.Http.Headers.StringWithQualityHeaderValue.Value" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />
      </containers>
      <file name="3efcf973-f69f-4264-d383-6ae750dfba7d" />
    </api>
    <api id="Methods.T:System.Net.Http.Headers.StringWithQualityHeaderValue">
      <topicdata name="StringWithQualityHeaderValue" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />
      <apidata name="StringWithQualityHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Net.Http.Headers.StringWithQualityHeaderValue.Equals(System.Object)" />
        <element api="M:System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode" />
        <element api="M:System.Net.Http.Headers.StringWithQualityHeaderValue.Parse(System.String)" />
        <element api="M:System.Net.Http.Headers.StringWithQualityHeaderValue.System#ICloneable#Clone" />
        <element api="M:System.Net.Http.Headers.StringWithQualityHeaderValue.ToString" />
        <element api="M:System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.StringWithQualityHeaderValue@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />
      </containers>
      <file name="47ce3cde-aea8-bb54-9761-f700ba1ff723" />
    </api>
    <api id="Properties.T:System.Net.Http.Headers.StringWithQualityHeaderValue">
      <topicdata name="StringWithQualityHeaderValue" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />
      <apidata name="StringWithQualityHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Net.Http.Headers.StringWithQualityHeaderValue.Quality" />
        <element api="P:System.Net.Http.Headers.StringWithQualityHeaderValue.Value" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.StringWithQualityHeaderValue" />
      </containers>
      <file name="5ee44e1f-4a91-430a-799c-1ada0ff00db3" />
    </api>
    <api id="Overload:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.StringWithQualityHeaderValue" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String)" />
        <element api="M:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String,System.Double)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.StringWithQualityHeaderValue" ref="true" />
      </containers>
      <file name="e68dd3cc-93a6-0542-1892-fbeb978c9898" />
    </api>
    <api id="M:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.StringWithQualityHeaderValue" ref="true" />
      </containers>
      <file name="e52000b9-d885-9198-b129-b09d9f839e87" />
    </api>
    <api id="M:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.StringWithQualityHeaderValue.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="quality">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.StringWithQualityHeaderValue" ref="true" />
      </containers>
      <file name="a15447b6-934a-de12-9360-298e9337ffd1" />
    </api>
    <api id="M:System.Net.Http.Headers.StringWithQualityHeaderValue.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.StringWithQualityHeaderValue" ref="true" />
      </containers>
      <file name="dafb0e7a-b755-0270-50f5-dc46dd8f5405" />
    </api>
    <api id="M:System.Net.Http.Headers.StringWithQualityHeaderValue.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.StringWithQualityHeaderValue" ref="true" />
      </containers>
      <file name="b043fd9a-ebbe-cc1f-7008-ba2793325530" />
    </api>
    <api id="M:System.Net.Http.Headers.StringWithQualityHeaderValue.Parse(System.String)">
      <topicdata group="api" />
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.Headers.StringWithQualityHeaderValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.StringWithQualityHeaderValue" ref="true" />
      </containers>
      <file name="95111cf8-b335-6d23-91f1-031b8e0039f4" />
    </api>
    <api id="P:System.Net.Http.Headers.StringWithQualityHeaderValue.Quality">
      <topicdata group="api" />
      <apidata name="Quality" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Quality" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.StringWithQualityHeaderValue" ref="true" />
      </containers>
      <file name="f4c1918a-f7ae-11cc-2946-a7da996e630a" />
    </api>
    <api id="M:System.Net.Http.Headers.StringWithQualityHeaderValue.System#ICloneable#Clone">
      <topicdata group="api" eiiName="ICloneable.Clone" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICloneable.Clone">
          <type api="T:System.ICloneable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.StringWithQualityHeaderValue" ref="true" />
      </containers>
      <file name="f5527879-6d2b-9f06-f7eb-e9702fb3808e" />
    </api>
    <api id="M:System.Net.Http.Headers.StringWithQualityHeaderValue.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.StringWithQualityHeaderValue" ref="true" />
      </containers>
      <file name="bad198c2-33be-e363-011b-7b34b9a11491" />
    </api>
    <api id="M:System.Net.Http.Headers.StringWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.StringWithQualityHeaderValue@)">
      <topicdata group="api" />
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parsedValue" out="true">
          <referenceTo>
            <type api="T:System.Net.Http.Headers.StringWithQualityHeaderValue" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.StringWithQualityHeaderValue" ref="true" />
      </containers>
      <file name="13f56153-93d7-80fc-4655-02acc8b920ed" />
    </api>
    <api id="P:System.Net.Http.Headers.StringWithQualityHeaderValue.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Value" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.StringWithQualityHeaderValue" ref="true" />
      </containers>
      <file name="96997df6-9ab4-330e-e34b-2442557c9dac" />
    </api>
    <api id="T:System.Net.Http.Headers.TransferCodingHeaderValue">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.TransferCodingHeaderValue" />
      <apidata name="TransferCodingHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
      </containers>
      <file name="e41a0dc7-b18e-dee2-0fc3-2b710eec6512" />
    </api>
    <api id="AllMembers.T:System.Net.Http.Headers.TransferCodingHeaderValue">
      <topicdata name="TransferCodingHeaderValue" group="list" subgroup="members" typeTopicId="T:System.Net.Http.Headers.TransferCodingHeaderValue" />
      <apidata name="TransferCodingHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor">
          <element api="M:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor(System.String)" />
          <element api="M:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor(System.Net.Http.Headers.TransferCodingHeaderValue)" />
        </element>
        <element api="M:System.Net.Http.Headers.TransferCodingHeaderValue.Equals(System.Object)" />
        <element api="M:System.Net.Http.Headers.TransferCodingHeaderValue.GetHashCode" />
        <element api="P:System.Net.Http.Headers.TransferCodingHeaderValue.Parameters" />
        <element api="M:System.Net.Http.Headers.TransferCodingHeaderValue.Parse(System.String)" />
        <element api="M:System.Net.Http.Headers.TransferCodingHeaderValue.System#ICloneable#Clone" />
        <element api="M:System.Net.Http.Headers.TransferCodingHeaderValue.ToString" />
        <element api="M:System.Net.Http.Headers.TransferCodingHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingHeaderValue@)" />
        <element api="P:System.Net.Http.Headers.TransferCodingHeaderValue.Value" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.TransferCodingHeaderValue" />
      </containers>
      <file name="3aed783b-6fd5-07f5-83a5-08988a719a18" />
    </api>
    <api id="Methods.T:System.Net.Http.Headers.TransferCodingHeaderValue">
      <topicdata name="TransferCodingHeaderValue" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.Headers.TransferCodingHeaderValue" />
      <apidata name="TransferCodingHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Net.Http.Headers.TransferCodingHeaderValue.Equals(System.Object)" />
        <element api="M:System.Net.Http.Headers.TransferCodingHeaderValue.GetHashCode" />
        <element api="M:System.Net.Http.Headers.TransferCodingHeaderValue.Parse(System.String)" />
        <element api="M:System.Net.Http.Headers.TransferCodingHeaderValue.System#ICloneable#Clone" />
        <element api="M:System.Net.Http.Headers.TransferCodingHeaderValue.ToString" />
        <element api="M:System.Net.Http.Headers.TransferCodingHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingHeaderValue@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.TransferCodingHeaderValue" />
      </containers>
      <file name="89b1a111-7dd1-275a-db39-e9e2567a324f" />
    </api>
    <api id="Properties.T:System.Net.Http.Headers.TransferCodingHeaderValue">
      <topicdata name="TransferCodingHeaderValue" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.Headers.TransferCodingHeaderValue" />
      <apidata name="TransferCodingHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Net.Http.Headers.TransferCodingHeaderValue.Parameters" />
        <element api="P:System.Net.Http.Headers.TransferCodingHeaderValue.Value" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.TransferCodingHeaderValue" />
      </containers>
      <file name="c6a1a4d2-484d-6666-5d45-beeb6273c0d3" />
    </api>
    <api id="Overload:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.TransferCodingHeaderValue" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor(System.String)" />
        <element api="M:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor(System.Net.Http.Headers.TransferCodingHeaderValue)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.TransferCodingHeaderValue" ref="true" />
      </containers>
      <file name="64877db4-42cf-a4ed-f10d-6fdffb013d51" />
    </api>
    <api id="M:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor(System.Net.Http.Headers.TransferCodingHeaderValue)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Net.Http.Headers.TransferCodingHeaderValue" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.TransferCodingHeaderValue" ref="true" />
      </containers>
      <file name="0930f8c4-f110-bc52-d527-44dffc7899c1" />
    </api>
    <api id="M:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.TransferCodingHeaderValue.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.TransferCodingHeaderValue" ref="true" />
      </containers>
      <file name="0e9b399f-4a34-6684-eb87-005da917b6f0" />
    </api>
    <api id="M:System.Net.Http.Headers.TransferCodingHeaderValue.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.TransferCodingHeaderValue" ref="true" />
      </containers>
      <file name="c79505da-47c8-9aa8-6717-3802e2e7bf35" />
    </api>
    <api id="M:System.Net.Http.Headers.TransferCodingHeaderValue.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.TransferCodingHeaderValue" ref="true" />
      </containers>
      <file name="6b601d97-2a89-6241-9a88-2dfdd68cfcaf" />
    </api>
    <api id="P:System.Net.Http.Headers.TransferCodingHeaderValue.Parameters">
      <topicdata group="api" />
      <apidata name="Parameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parameters" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.Headers.NameValueHeaderValue" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.TransferCodingHeaderValue" ref="true" />
      </containers>
      <file name="17ab2bfe-f596-c482-4709-eb7fda143df9" />
    </api>
    <api id="M:System.Net.Http.Headers.TransferCodingHeaderValue.Parse(System.String)">
      <topicdata group="api" />
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.Headers.TransferCodingHeaderValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.TransferCodingHeaderValue" ref="true" />
      </containers>
      <file name="50aae412-72b3-7022-dea3-f931b622dd55" />
    </api>
    <api id="M:System.Net.Http.Headers.TransferCodingHeaderValue.System#ICloneable#Clone">
      <topicdata group="api" eiiName="ICloneable.Clone" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICloneable.Clone">
          <type api="T:System.ICloneable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.TransferCodingHeaderValue" ref="true" />
      </containers>
      <file name="107e5aae-a810-4a0e-56c3-30ab91e61c09" />
    </api>
    <api id="M:System.Net.Http.Headers.TransferCodingHeaderValue.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.TransferCodingHeaderValue" ref="true" />
      </containers>
      <file name="5481c4a0-b5ce-c64d-cf69-e2f8374101c3" />
    </api>
    <api id="M:System.Net.Http.Headers.TransferCodingHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingHeaderValue@)">
      <topicdata group="api" />
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parsedValue" out="true">
          <referenceTo>
            <type api="T:System.Net.Http.Headers.TransferCodingHeaderValue" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.TransferCodingHeaderValue" ref="true" />
      </containers>
      <file name="f8861518-8dde-940b-cb8c-42e1079d8ff0" />
    </api>
    <api id="P:System.Net.Http.Headers.TransferCodingHeaderValue.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Value" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.TransferCodingHeaderValue" ref="true" />
      </containers>
      <file name="c52d8493-087b-9a78-73a1-06b6d9060e6d" />
    </api>
    <api id="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />
      <apidata name="TransferCodingWithQualityHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Net.Http.Headers.TransferCodingHeaderValue" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
      </containers>
      <file name="e5f52926-85f3-240b-8601-41830169b549" />
    </api>
    <api id="AllMembers.T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue">
      <topicdata name="TransferCodingWithQualityHeaderValue" group="list" subgroup="members" typeTopicId="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />
      <apidata name="TransferCodingWithQualityHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Net.Http.Headers.TransferCodingHeaderValue.Equals(System.Object)" />
        <element api="M:System.Net.Http.Headers.TransferCodingHeaderValue.GetHashCode" />
        <element api="P:System.Net.Http.Headers.TransferCodingHeaderValue.Parameters" />
        <element api="M:System.Net.Http.Headers.TransferCodingHeaderValue.ToString" />
        <element api="P:System.Net.Http.Headers.TransferCodingHeaderValue.Value" />
        <element api="Overload:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor">
          <element api="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String)" />
          <element api="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String,System.Double)" />
        </element>
        <element api="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Parse(System.String)" />
        <element api="P:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Quality" />
        <element api="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.System#ICloneable#Clone" />
        <element api="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingWithQualityHeaderValue@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />
      </containers>
      <file name="01df4d70-a8bf-5433-6192-be88b80334cc" />
    </api>
    <api id="Methods.T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue">
      <topicdata name="TransferCodingWithQualityHeaderValue" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />
      <apidata name="TransferCodingWithQualityHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Net.Http.Headers.TransferCodingHeaderValue.Equals(System.Object)" />
        <element api="M:System.Net.Http.Headers.TransferCodingHeaderValue.GetHashCode" />
        <element api="M:System.Net.Http.Headers.TransferCodingHeaderValue.ToString" />
        <element api="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Parse(System.String)" />
        <element api="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.System#ICloneable#Clone" />
        <element api="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingWithQualityHeaderValue@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />
      </containers>
      <file name="cb947a1d-3852-2939-032d-12da4b926117" />
    </api>
    <api id="Properties.T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue">
      <topicdata name="TransferCodingWithQualityHeaderValue" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />
      <apidata name="TransferCodingWithQualityHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Net.Http.Headers.TransferCodingHeaderValue.Parameters" />
        <element api="P:System.Net.Http.Headers.TransferCodingHeaderValue.Value" />
        <element api="P:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Quality" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />
      </containers>
      <file name="504316dd-fd8b-eba3-27d9-c1635ded6af6" />
    </api>
    <api id="Overload:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String)" />
        <element api="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String,System.Double)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" ref="true" />
      </containers>
      <file name="94637592-62d1-a883-d8b8-3a998a6e5851" />
    </api>
    <api id="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" ref="true" />
      </containers>
      <file name="bb680e5d-e249-6399-8569-761973587fd2" />
    </api>
    <api id="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor(System.String,System.Double)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="quality">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" ref="true" />
      </containers>
      <file name="60be21a9-ad93-9e38-f958-8fa4b7a99e84" />
    </api>
    <api id="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Parse(System.String)">
      <topicdata group="api" />
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" ref="true" />
      </containers>
      <file name="9d432a7a-cd2d-207e-38a9-b5ddf56d19e5" />
    </api>
    <api id="P:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.Quality">
      <topicdata group="api" />
      <apidata name="Quality" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Quality" />
      <setter name="set_Quality" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" ref="true" />
      </containers>
      <file name="6bdf22b0-b68f-840e-6032-48737af699e5" />
    </api>
    <api id="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.System#ICloneable#Clone">
      <topicdata group="api" eiiName="ICloneable.Clone" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICloneable.Clone">
          <type api="T:System.ICloneable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" ref="true" />
      </containers>
      <file name="ba9f5596-9d10-83fd-8ddc-e1b1f694d6ef" />
    </api>
    <api id="M:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue.TryParse(System.String,System.Net.Http.Headers.TransferCodingWithQualityHeaderValue@)">
      <topicdata group="api" />
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parsedValue" out="true">
          <referenceTo>
            <type api="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.TransferCodingWithQualityHeaderValue" ref="true" />
      </containers>
      <file name="2c7e8112-b753-1c4a-236d-50d728dcf856" />
    </api>
    <api id="T:System.Net.Http.Headers.ViaHeaderValue">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.ViaHeaderValue" />
      <apidata name="ViaHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
      </containers>
      <file name="f4389a39-9e11-a236-7099-405b2152aab4" />
    </api>
    <api id="AllMembers.T:System.Net.Http.Headers.ViaHeaderValue">
      <topicdata name="ViaHeaderValue" group="list" subgroup="members" typeTopicId="T:System.Net.Http.Headers.ViaHeaderValue" />
      <apidata name="ViaHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.Http.Headers.ViaHeaderValue.#ctor">
          <element api="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String)" />
          <element api="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String)" />
          <element api="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String,System.String)" />
        </element>
        <element api="P:System.Net.Http.Headers.ViaHeaderValue.Comment" />
        <element api="M:System.Net.Http.Headers.ViaHeaderValue.Equals(System.Object)" />
        <element api="M:System.Net.Http.Headers.ViaHeaderValue.GetHashCode" />
        <element api="M:System.Net.Http.Headers.ViaHeaderValue.Parse(System.String)" />
        <element api="P:System.Net.Http.Headers.ViaHeaderValue.ProtocolName" />
        <element api="P:System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion" />
        <element api="P:System.Net.Http.Headers.ViaHeaderValue.ReceivedBy" />
        <element api="M:System.Net.Http.Headers.ViaHeaderValue.System#ICloneable#Clone" />
        <element api="M:System.Net.Http.Headers.ViaHeaderValue.ToString" />
        <element api="M:System.Net.Http.Headers.ViaHeaderValue.TryParse(System.String,System.Net.Http.Headers.ViaHeaderValue@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ViaHeaderValue" />
      </containers>
      <file name="e3c40562-f10a-01df-a980-8c6b15cbe264" />
    </api>
    <api id="Methods.T:System.Net.Http.Headers.ViaHeaderValue">
      <topicdata name="ViaHeaderValue" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.Headers.ViaHeaderValue" />
      <apidata name="ViaHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Net.Http.Headers.ViaHeaderValue.Equals(System.Object)" />
        <element api="M:System.Net.Http.Headers.ViaHeaderValue.GetHashCode" />
        <element api="M:System.Net.Http.Headers.ViaHeaderValue.Parse(System.String)" />
        <element api="M:System.Net.Http.Headers.ViaHeaderValue.System#ICloneable#Clone" />
        <element api="M:System.Net.Http.Headers.ViaHeaderValue.ToString" />
        <element api="M:System.Net.Http.Headers.ViaHeaderValue.TryParse(System.String,System.Net.Http.Headers.ViaHeaderValue@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ViaHeaderValue" />
      </containers>
      <file name="474cd3b1-f0ef-5074-940a-e897a5778b06" />
    </api>
    <api id="Properties.T:System.Net.Http.Headers.ViaHeaderValue">
      <topicdata name="ViaHeaderValue" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.Headers.ViaHeaderValue" />
      <apidata name="ViaHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Net.Http.Headers.ViaHeaderValue.Comment" />
        <element api="P:System.Net.Http.Headers.ViaHeaderValue.ProtocolName" />
        <element api="P:System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion" />
        <element api="P:System.Net.Http.Headers.ViaHeaderValue.ReceivedBy" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ViaHeaderValue" />
      </containers>
      <file name="3e4e988f-01e5-06ba-45ff-7b4d9c538776" />
    </api>
    <api id="Overload:System.Net.Http.Headers.ViaHeaderValue.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.ViaHeaderValue" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String)" />
        <element api="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String)" />
        <element api="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ViaHeaderValue" ref="true" />
      </containers>
      <file name="82d07052-349b-f504-c2c8-366974a8ada6" />
    </api>
    <api id="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.ViaHeaderValue.#ctor" />
      <parameters>
        <parameter name="protocolVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="receivedBy">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ViaHeaderValue" ref="true" />
      </containers>
      <file name="18a90fce-67f2-e377-5bc1-7184465f78ca" />
    </api>
    <api id="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.ViaHeaderValue.#ctor" />
      <parameters>
        <parameter name="protocolVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="receivedBy">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="protocolName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ViaHeaderValue" ref="true" />
      </containers>
      <file name="6c442060-c314-d4c5-6381-660cb9bd432e" />
    </api>
    <api id="M:System.Net.Http.Headers.ViaHeaderValue.#ctor(System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.ViaHeaderValue.#ctor" />
      <parameters>
        <parameter name="protocolVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="receivedBy">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="protocolName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="comment">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ViaHeaderValue" ref="true" />
      </containers>
      <file name="1c845166-1c53-2878-e916-aaa0d0a2cca1" />
    </api>
    <api id="P:System.Net.Http.Headers.ViaHeaderValue.Comment">
      <topicdata group="api" />
      <apidata name="Comment" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Comment" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ViaHeaderValue" ref="true" />
      </containers>
      <file name="ddb28340-a640-3e36-acee-156b375647c5" />
    </api>
    <api id="M:System.Net.Http.Headers.ViaHeaderValue.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ViaHeaderValue" ref="true" />
      </containers>
      <file name="b938bbc3-9675-e3f2-ee9a-d9f39dbd7b0f" />
    </api>
    <api id="M:System.Net.Http.Headers.ViaHeaderValue.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ViaHeaderValue" ref="true" />
      </containers>
      <file name="195f350b-2cfd-e045-6a82-06c35c409db6" />
    </api>
    <api id="M:System.Net.Http.Headers.ViaHeaderValue.Parse(System.String)">
      <topicdata group="api" />
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.Headers.ViaHeaderValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ViaHeaderValue" ref="true" />
      </containers>
      <file name="882a5888-d2d3-a914-ec1e-30ef6e09c44b" />
    </api>
    <api id="P:System.Net.Http.Headers.ViaHeaderValue.ProtocolName">
      <topicdata group="api" />
      <apidata name="ProtocolName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProtocolName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ViaHeaderValue" ref="true" />
      </containers>
      <file name="b5632c20-ff65-b0c4-5328-9ada8cfd5eef" />
    </api>
    <api id="P:System.Net.Http.Headers.ViaHeaderValue.ProtocolVersion">
      <topicdata group="api" />
      <apidata name="ProtocolVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProtocolVersion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ViaHeaderValue" ref="true" />
      </containers>
      <file name="60e9bfa8-44d8-0706-1a8b-07860005e166" />
    </api>
    <api id="P:System.Net.Http.Headers.ViaHeaderValue.ReceivedBy">
      <topicdata group="api" />
      <apidata name="ReceivedBy" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ReceivedBy" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ViaHeaderValue" ref="true" />
      </containers>
      <file name="5cb30bba-be9c-c19a-a9e5-3a5dad245e6b" />
    </api>
    <api id="M:System.Net.Http.Headers.ViaHeaderValue.System#ICloneable#Clone">
      <topicdata group="api" eiiName="ICloneable.Clone" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICloneable.Clone">
          <type api="T:System.ICloneable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ViaHeaderValue" ref="true" />
      </containers>
      <file name="4fba9186-537a-0689-5681-a3920a828fe5" />
    </api>
    <api id="M:System.Net.Http.Headers.ViaHeaderValue.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ViaHeaderValue" ref="true" />
      </containers>
      <file name="cd2fe454-c9f5-d1a9-8edf-e71b161aa8a1" />
    </api>
    <api id="M:System.Net.Http.Headers.ViaHeaderValue.TryParse(System.String,System.Net.Http.Headers.ViaHeaderValue@)">
      <topicdata group="api" />
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parsedValue" out="true">
          <referenceTo>
            <type api="T:System.Net.Http.Headers.ViaHeaderValue" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.ViaHeaderValue" ref="true" />
      </containers>
      <file name="8bf03871-914d-21a3-8541-267c1f42b016" />
    </api>
    <api id="T:System.Net.Http.Headers.WarningHeaderValue">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.WarningHeaderValue" />
      <apidata name="WarningHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
      </containers>
      <file name="f14848e1-39e5-8f6a-2b91-cb40965e2437" />
    </api>
    <api id="AllMembers.T:System.Net.Http.Headers.WarningHeaderValue">
      <topicdata name="WarningHeaderValue" group="list" subgroup="members" typeTopicId="T:System.Net.Http.Headers.WarningHeaderValue" />
      <apidata name="WarningHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.Http.Headers.WarningHeaderValue.#ctor">
          <element api="M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String)" />
          <element api="M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String,System.DateTimeOffset)" />
        </element>
        <element api="P:System.Net.Http.Headers.WarningHeaderValue.Agent" />
        <element api="P:System.Net.Http.Headers.WarningHeaderValue.Code" />
        <element api="P:System.Net.Http.Headers.WarningHeaderValue.Date" />
        <element api="M:System.Net.Http.Headers.WarningHeaderValue.Equals(System.Object)" />
        <element api="M:System.Net.Http.Headers.WarningHeaderValue.GetHashCode" />
        <element api="M:System.Net.Http.Headers.WarningHeaderValue.Parse(System.String)" />
        <element api="M:System.Net.Http.Headers.WarningHeaderValue.System#ICloneable#Clone" />
        <element api="P:System.Net.Http.Headers.WarningHeaderValue.Text" />
        <element api="M:System.Net.Http.Headers.WarningHeaderValue.ToString" />
        <element api="M:System.Net.Http.Headers.WarningHeaderValue.TryParse(System.String,System.Net.Http.Headers.WarningHeaderValue@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.WarningHeaderValue" />
      </containers>
      <file name="514abbda-234d-7245-068a-e4c424dfad9f" />
    </api>
    <api id="Methods.T:System.Net.Http.Headers.WarningHeaderValue">
      <topicdata name="WarningHeaderValue" group="list" subgroup="Methods" typeTopicId="T:System.Net.Http.Headers.WarningHeaderValue" />
      <apidata name="WarningHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Net.Http.Headers.WarningHeaderValue.Equals(System.Object)" />
        <element api="M:System.Net.Http.Headers.WarningHeaderValue.GetHashCode" />
        <element api="M:System.Net.Http.Headers.WarningHeaderValue.Parse(System.String)" />
        <element api="M:System.Net.Http.Headers.WarningHeaderValue.System#ICloneable#Clone" />
        <element api="M:System.Net.Http.Headers.WarningHeaderValue.ToString" />
        <element api="M:System.Net.Http.Headers.WarningHeaderValue.TryParse(System.String,System.Net.Http.Headers.WarningHeaderValue@)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.WarningHeaderValue" />
      </containers>
      <file name="c6072202-a659-643f-c00e-0dfd1489359a" />
    </api>
    <api id="Properties.T:System.Net.Http.Headers.WarningHeaderValue">
      <topicdata name="WarningHeaderValue" group="list" subgroup="Properties" typeTopicId="T:System.Net.Http.Headers.WarningHeaderValue" />
      <apidata name="WarningHeaderValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Net.Http.Headers.WarningHeaderValue.Agent" />
        <element api="P:System.Net.Http.Headers.WarningHeaderValue.Code" />
        <element api="P:System.Net.Http.Headers.WarningHeaderValue.Date" />
        <element api="P:System.Net.Http.Headers.WarningHeaderValue.Text" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.WarningHeaderValue" />
      </containers>
      <file name="5d078f11-f16c-371b-85c9-04195dc61f56" />
    </api>
    <api id="Overload:System.Net.Http.Headers.WarningHeaderValue.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.Http.Headers.WarningHeaderValue" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String)" />
        <element api="M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String,System.DateTimeOffset)" />
      </elements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.WarningHeaderValue" ref="true" />
      </containers>
      <file name="c304cee0-2608-3ab2-091a-81448705721d" />
    </api>
    <api id="M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.WarningHeaderValue.#ctor" />
      <parameters>
        <parameter name="code">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="agent">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.WarningHeaderValue" ref="true" />
      </containers>
      <file name="0e186215-081d-f744-869c-3cee5105250b" />
    </api>
    <api id="M:System.Net.Http.Headers.WarningHeaderValue.#ctor(System.Int32,System.String,System.String,System.DateTimeOffset)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.Http.Headers.WarningHeaderValue.#ctor" />
      <parameters>
        <parameter name="code">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="agent">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="date">
          <type api="T:System.DateTimeOffset" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.WarningHeaderValue" ref="true" />
      </containers>
      <file name="08ba5d5a-7b19-e725-8eef-c96bcb9d3bfa" />
    </api>
    <api id="P:System.Net.Http.Headers.WarningHeaderValue.Agent">
      <topicdata group="api" />
      <apidata name="Agent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Agent" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.WarningHeaderValue" ref="true" />
      </containers>
      <file name="796870b5-56cd-43f5-2ad9-440de7c478c5" />
    </api>
    <api id="P:System.Net.Http.Headers.WarningHeaderValue.Code">
      <topicdata group="api" />
      <apidata name="Code" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Code" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.WarningHeaderValue" ref="true" />
      </containers>
      <file name="210c8345-3767-f1cd-ac83-7d5d7c209289" />
    </api>
    <api id="P:System.Net.Http.Headers.WarningHeaderValue.Date">
      <topicdata group="api" />
      <apidata name="Date" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Date" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTimeOffset" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.WarningHeaderValue" ref="true" />
      </containers>
      <file name="d5f09961-3148-2e22-c02d-9e550655dd10" />
    </api>
    <api id="M:System.Net.Http.Headers.WarningHeaderValue.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.WarningHeaderValue" ref="true" />
      </containers>
      <file name="d79a999f-252f-d3cc-7aec-d361c2a76815" />
    </api>
    <api id="M:System.Net.Http.Headers.WarningHeaderValue.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.WarningHeaderValue" ref="true" />
      </containers>
      <file name="2f4a2c93-b907-c163-f9b1-5bf3e246e8df" />
    </api>
    <api id="M:System.Net.Http.Headers.WarningHeaderValue.Parse(System.String)">
      <topicdata group="api" />
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.Headers.WarningHeaderValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.WarningHeaderValue" ref="true" />
      </containers>
      <file name="9b7b8ebd-9ebb-86c4-da55-2131f490ffc7" />
    </api>
    <api id="M:System.Net.Http.Headers.WarningHeaderValue.System#ICloneable#Clone">
      <topicdata group="api" eiiName="ICloneable.Clone" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ICloneable.Clone">
          <type api="T:System.ICloneable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.WarningHeaderValue" ref="true" />
      </containers>
      <file name="aaed598e-e2fd-c56b-0f08-2fd7ed8f79fd" />
    </api>
    <api id="P:System.Net.Http.Headers.WarningHeaderValue.Text">
      <topicdata group="api" />
      <apidata name="Text" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Text" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.WarningHeaderValue" ref="true" />
      </containers>
      <file name="83758147-fae2-3bc5-308c-8adfde52a59c" />
    </api>
    <api id="M:System.Net.Http.Headers.WarningHeaderValue.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.WarningHeaderValue" ref="true" />
      </containers>
      <file name="8cd480a8-0d5c-cfad-c2bb-b113dadc262c" />
    </api>
    <api id="M:System.Net.Http.Headers.WarningHeaderValue.TryParse(System.String,System.Net.Http.Headers.WarningHeaderValue@)">
      <topicdata group="api" />
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parsedValue" out="true">
          <referenceTo>
            <type api="T:System.Net.Http.Headers.WarningHeaderValue" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.Http.Headers" />
        <type api="T:System.Net.Http.Headers.WarningHeaderValue" ref="true" />
      </containers>
      <file name="0000ced7-4600-7f4d-acda-5cb937594dac" />
    </api>
  </apis>
</reflection>