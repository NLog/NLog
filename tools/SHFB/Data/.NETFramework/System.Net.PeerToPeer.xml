<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.Net">
      <assemblydata version="4.0.0.0" culture="" key="002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Net.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Net.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Net.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\FinalPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.Net.PeerToPeer">
      <topicdata group="api" />
      <apidata name="System.Net.PeerToPeer" group="namespace" />
      <elements>
        <element api="T:System.Net.PeerToPeer.Cloud" />
        <element api="T:System.Net.PeerToPeer.CloudCollection" />
        <element api="T:System.Net.PeerToPeer.PeerName" />
        <element api="T:System.Net.PeerToPeer.PeerNameRecord" />
        <element api="T:System.Net.PeerToPeer.PeerNameRecordCollection" />
        <element api="T:System.Net.PeerToPeer.PeerNameRegistration" />
        <element api="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />
        <element api="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" />
        <element api="T:System.Net.PeerToPeer.PeerNameResolver" />
        <element api="T:System.Net.PeerToPeer.PeerNameType" />
        <element api="T:System.Net.PeerToPeer.PeerToPeerException" />
        <element api="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
        <element api="T:System.Net.PeerToPeer.PnrpPermission" />
        <element api="T:System.Net.PeerToPeer.PnrpScope" />
      </elements>
      <file name="4daba89c-aef5-004f-deed-686d92761e63" />
    </api>
    <api id="T:System.Net.PeerToPeer.Cloud">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Cloud" />
      <apidata name="Cloud" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="7aa930a3-164c-2a90-d00a-85d9cd12b92d" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.Cloud">
      <topicdata name="Cloud" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.Cloud" />
      <apidata name="Cloud" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Net.PeerToPeer.Cloud.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="F:System.Net.PeerToPeer.Cloud.AllLinkLocal" />
        <element api="F:System.Net.PeerToPeer.Cloud.Available" />
        <element api="Overload:System.Net.PeerToPeer.Cloud.Equals">
          <element api="M:System.Net.PeerToPeer.Cloud.Equals(System.Net.PeerToPeer.Cloud)" />
          <element api="M:System.Net.PeerToPeer.Cloud.Equals(System.Object)" />
        </element>
        <element api="M:System.Net.PeerToPeer.Cloud.GetAvailableClouds" />
        <element api="M:System.Net.PeerToPeer.Cloud.GetCloudByName(System.String)" />
        <element api="M:System.Net.PeerToPeer.Cloud.GetHashCode" />
        <element api="M:System.Net.PeerToPeer.Cloud.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.Net.PeerToPeer.Cloud.Global" />
        <element api="P:System.Net.PeerToPeer.Cloud.Name" />
        <element api="P:System.Net.PeerToPeer.Cloud.Scope" />
        <element api="P:System.Net.PeerToPeer.Cloud.ScopeId" />
        <element api="M:System.Net.PeerToPeer.Cloud.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.Cloud.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.Cloud" />
      </containers>
      <file name="8536b252-57b1-c297-57d0-1583ff254583" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.Cloud">
      <topicdata name="Cloud" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.Cloud" />
      <apidata name="Cloud" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.PeerToPeer.Cloud.Equals">
          <element api="M:System.Net.PeerToPeer.Cloud.Equals(System.Net.PeerToPeer.Cloud)" />
          <element api="M:System.Net.PeerToPeer.Cloud.Equals(System.Object)" />
        </element>
        <element api="M:System.Net.PeerToPeer.Cloud.GetAvailableClouds" />
        <element api="M:System.Net.PeerToPeer.Cloud.GetCloudByName(System.String)" />
        <element api="M:System.Net.PeerToPeer.Cloud.GetHashCode" />
        <element api="M:System.Net.PeerToPeer.Cloud.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.Cloud.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.Cloud.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.Cloud" />
      </containers>
      <file name="b4638028-44ed-0fa1-e965-0ad4edf4e4ef" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.Cloud">
      <topicdata name="Cloud" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.Cloud" />
      <apidata name="Cloud" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Net.PeerToPeer.Cloud.Global" />
        <element api="P:System.Net.PeerToPeer.Cloud.Name" />
        <element api="P:System.Net.PeerToPeer.Cloud.Scope" />
        <element api="P:System.Net.PeerToPeer.Cloud.ScopeId" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.Cloud" />
      </containers>
      <file name="2e04281a-dc1a-eda6-0cb4-cccf9004a398" />
    </api>
    <api id="Fields.T:System.Net.PeerToPeer.Cloud">
      <topicdata name="Cloud" group="list" subgroup="Fields" typeTopicId="T:System.Net.PeerToPeer.Cloud" />
      <apidata name="Cloud" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="F:System.Net.PeerToPeer.Cloud.AllLinkLocal" />
        <element api="F:System.Net.PeerToPeer.Cloud.Available" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.Cloud" />
      </containers>
      <file name="3c4168ef-5788-969d-8204-09fde902b1fc" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.Cloud.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.Cloud" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.PeerToPeer.Cloud.Equals(System.Net.PeerToPeer.Cloud)" />
        <element api="M:System.Net.PeerToPeer.Cloud.Equals(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </containers>
      <file name="9cb83a1f-ae5e-7a58-803e-7db8c9524c76" />
    </api>
    <api id="M:System.Net.PeerToPeer.Cloud.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </containers>
      <file name="461de499-e9cd-e983-d56b-6309f2b4d948" />
    </api>
    <api id="F:System.Net.PeerToPeer.Cloud.AllLinkLocal">
      <topicdata group="api" />
      <apidata name="AllLinkLocal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </containers>
      <file name="87ea4741-e498-999d-f008-e7e42f0b9fd6" />
    </api>
    <api id="F:System.Net.PeerToPeer.Cloud.Available">
      <topicdata group="api" />
      <apidata name="Available" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </containers>
      <file name="28d89157-16cf-e905-144a-ef07bc5a127a" />
    </api>
    <api id="M:System.Net.PeerToPeer.Cloud.Equals(System.Net.PeerToPeer.Cloud)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Cloud.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </containers>
      <file name="18a732c2-c44d-bdff-7143-b3ea1444e8f4" />
    </api>
    <api id="M:System.Net.PeerToPeer.Cloud.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.Cloud.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </containers>
      <file name="1b5a2ed7-27f2-edbc-f301-27217b59d4aa" />
    </api>
    <api id="M:System.Net.PeerToPeer.Cloud.GetAvailableClouds">
      <topicdata group="api" />
      <apidata name="GetAvailableClouds" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Net.PeerToPeer.CloudCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </containers>
      <file name="fb6b7390-3bdc-1516-57f9-44b6e5086141" />
    </api>
    <api id="M:System.Net.PeerToPeer.Cloud.GetCloudByName(System.String)">
      <topicdata group="api" />
      <apidata name="GetCloudByName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cloudName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </containers>
      <file name="294042ae-dabf-caf3-4cdc-8824567b174a" />
    </api>
    <api id="M:System.Net.PeerToPeer.Cloud.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </containers>
      <file name="cea6dacc-b604-3944-4638-84a897758974" />
    </api>
    <api id="M:System.Net.PeerToPeer.Cloud.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </containers>
      <file name="e0d25c83-5ca8-3316-42a0-f6349ae7b799" />
    </api>
    <api id="P:System.Net.PeerToPeer.Cloud.Global">
      <topicdata group="api" />
      <apidata name="Global" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Global" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </containers>
      <file name="caf49dd0-7779-9af7-98f4-2f4299461cf5" />
    </api>
    <api id="P:System.Net.PeerToPeer.Cloud.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </containers>
      <file name="fc5c4365-d042-e0dd-6eee-03c6bd7cb17e" />
    </api>
    <api id="P:System.Net.PeerToPeer.Cloud.Scope">
      <topicdata group="api" />
      <apidata name="Scope" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Scope" />
      <returns>
        <type api="T:System.Net.PeerToPeer.PnrpScope" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </containers>
      <file name="ccbc60b8-1885-c105-e08d-78318aa9b67c" />
    </api>
    <api id="P:System.Net.PeerToPeer.Cloud.ScopeId">
      <topicdata group="api" />
      <apidata name="ScopeId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ScopeId" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </containers>
      <file name="2c2f2606-e2f1-19c8-ea07-005ec337849c" />
    </api>
    <api id="M:System.Net.PeerToPeer.Cloud.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" eiiName="ISerializable.GetObjectData" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="97d47883-0a38-1c42-4819-c6ccbe3fcc96" />
    </api>
    <api id="M:System.Net.PeerToPeer.Cloud.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </containers>
      <file name="eedc2233-f44a-65a9-761d-44813e8b257a" />
    </api>
    <api id="T:System.Net.PeerToPeer.CloudCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.CloudCollection" />
      <apidata name="CloudCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.PeerToPeer.CloudCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="ea1286fa-ebc9-ecb6-14b9-9cdafa53bc2a" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.CloudCollection">
      <topicdata name="CloudCollection" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.CloudCollection" />
      <apidata name="CloudCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.PeerToPeer.CloudCollection.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element api="M:System.Collections.ObjectModel.Collection`1.ClearItems" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Count" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Items" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Net.PeerToPeer.CloudCollection.#ctor" />
        <element api="M:System.Net.PeerToPeer.CloudCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Cloud)" />
        <element api="M:System.Net.PeerToPeer.CloudCollection.SetItem(System.Int32,System.Net.PeerToPeer.Cloud)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.CloudCollection" />
      </containers>
      <file name="712dae81-3b5f-1ed9-ae0a-a9fe9a67ddda" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.CloudCollection">
      <topicdata name="CloudCollection" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.CloudCollection" />
      <apidata name="CloudCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.PeerToPeer.CloudCollection.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element api="M:System.Collections.ObjectModel.Collection`1.ClearItems" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Net.PeerToPeer.CloudCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Cloud)" />
        <element api="M:System.Net.PeerToPeer.CloudCollection.SetItem(System.Int32,System.Net.PeerToPeer.Cloud)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.CloudCollection" />
      </containers>
      <file name="41d31c3f-b261-f173-d732-7183b83f70d7" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.CloudCollection">
      <topicdata name="CloudCollection" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.CloudCollection" />
      <apidata name="CloudCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.PeerToPeer.CloudCollection.#ctor" />
      <elements>
        <element api="P:System.Collections.ObjectModel.Collection`1.Count" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Items" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.CloudCollection" />
      </containers>
      <file name="5b1e8357-69f0-ab5a-8893-226cc85ef8be" />
    </api>
    <api id="M:System.Net.PeerToPeer.CloudCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.CloudCollection" ref="true" />
      </containers>
      <file name="57c473b0-dce8-a0ab-c1af-1d404b1b130f" />
    </api>
    <api id="M:System.Net.PeerToPeer.CloudCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Cloud)">
      <topicdata group="api" />
      <apidata name="InsertItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.CloudCollection" ref="true" />
      </containers>
      <file name="6f929deb-cbb1-59f2-3cb9-ec958105e2d0" />
    </api>
    <api id="M:System.Net.PeerToPeer.CloudCollection.SetItem(System.Int32,System.Net.PeerToPeer.Cloud)">
      <topicdata group="api" />
      <apidata name="SetItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.CloudCollection" ref="true" />
      </containers>
      <file name="2cee81e9-fd8c-2d7a-7d3c-d567bc864a2e" />
    </api>
    <api id="T:System.Net.PeerToPeer.PeerName">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.PeerName" />
      <apidata name="PeerName" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="00a11014-1da4-c4c6-a14d-2fbd0fb8e7d9" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.PeerName">
      <topicdata name="PeerName" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.PeerName" />
      <apidata name="PeerName" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.PeerToPeer.PeerName.#ctor">
          <element api="M:System.Net.PeerToPeer.PeerName.#ctor(System.String)" />
          <element api="M:System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)" />
        </element>
        <element api="P:System.Net.PeerToPeer.PeerName.Authority" />
        <element api="P:System.Net.PeerToPeer.PeerName.Classifier" />
        <element api="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
        <element api="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
        <element api="Overload:System.Net.PeerToPeer.PeerName.Equals">
          <element api="M:System.Net.PeerToPeer.PeerName.Equals(System.Object)" />
          <element api="M:System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)" />
        </element>
        <element api="M:System.Net.PeerToPeer.PeerName.GetHashCode" />
        <element api="M:System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.Net.PeerToPeer.PeerName.IsSecured" />
        <element api="P:System.Net.PeerToPeer.PeerName.PeerHostName" />
        <element api="M:System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.PeerName.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" />
      </containers>
      <file name="3203d9c6-1679-c4b5-be0b-3f315a197bd8" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.PeerName">
      <topicdata name="PeerName" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.PeerName" />
      <apidata name="PeerName" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)" />
        <element api="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)" />
        <element api="Overload:System.Net.PeerToPeer.PeerName.Equals">
          <element api="M:System.Net.PeerToPeer.PeerName.Equals(System.Object)" />
          <element api="M:System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)" />
        </element>
        <element api="M:System.Net.PeerToPeer.PeerName.GetHashCode" />
        <element api="M:System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.PeerName.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" />
      </containers>
      <file name="cf70cc0f-0c61-0a61-739e-8e12da00d68a" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.PeerName">
      <topicdata name="PeerName" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.PeerName" />
      <apidata name="PeerName" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Net.PeerToPeer.PeerName.Authority" />
        <element api="P:System.Net.PeerToPeer.PeerName.Classifier" />
        <element api="P:System.Net.PeerToPeer.PeerName.IsSecured" />
        <element api="P:System.Net.PeerToPeer.PeerName.PeerHostName" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" />
      </containers>
      <file name="b28c6640-798f-b122-055f-4cac8bf1c90c" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.PeerName.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.PeerName" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.PeerToPeer.PeerName.#ctor(System.String)" />
        <element api="M:System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </containers>
      <file name="bebbb7ae-8c84-7d53-2870-8a340606d052" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.PeerName.Equals">
      <topicdata name="Equals" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.PeerName" />
      <apidata name="Equals" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.PeerToPeer.PeerName.Equals(System.Object)" />
        <element api="M:System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </containers>
      <file name="1f2e65a8-3a56-1666-3ae9-a925e67f276b" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerName.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Net.PeerToPeer.PeerName.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </containers>
      <file name="4ee504f3-2039-da3b-7446-bac62ce05102" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerName.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.PeerToPeer.PeerName.#ctor" />
      <parameters>
        <parameter name="remotePeerName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </containers>
      <file name="4554e0cf-d96b-f7eb-0884-6913eabc4151" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerName.#ctor(System.String,System.Net.PeerToPeer.PeerNameType)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.PeerToPeer.PeerName.#ctor" />
      <parameters>
        <parameter name="classifier">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="peerNameType">
          <type api="T:System.Net.PeerToPeer.PeerNameType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="cdecbeab-c8ef-7aa4-3c74-90d2881181cf" />
    </api>
    <api id="P:System.Net.PeerToPeer.PeerName.Authority">
      <topicdata group="api" />
      <apidata name="Authority" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Authority" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </containers>
      <file name="e77f8593-8246-ab85-697a-3a16d3b38467" />
    </api>
    <api id="P:System.Net.PeerToPeer.PeerName.Classifier">
      <topicdata group="api" />
      <apidata name="Classifier" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Classifier" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </containers>
      <file name="643c1208-103a-b9d6-0562-223a2788d60b" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerName.CreateFromPeerHostName(System.String)">
      <topicdata group="api" />
      <apidata name="CreateFromPeerHostName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerHostName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="2f178d94-7655-26f8-2ec0-c2458e210fcc" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerName.CreateRelativePeerName(System.Net.PeerToPeer.PeerName,System.String)">
      <topicdata group="api" />
      <apidata name="CreateRelativePeerName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerName">
          <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
        </parameter>
        <parameter name="classifier">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="294eda45-ee72-8fa9-96da-1b91d5c85ed3" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerName.Equals(System.Net.PeerToPeer.PeerName)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.PeerName.Equals" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </containers>
      <file name="b42b9524-d426-3828-cfd7-851a2a26728d" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerName.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.PeerName.Equals" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </containers>
      <file name="62d5c73a-28f3-6a3f-d1f4-7a1e82115403" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerName.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </containers>
      <file name="6f09f88e-ce06-f4c1-959c-17670b4ba1a3" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </containers>
      <file name="713d9ad2-49c5-718f-ad5f-afcc23ba8750" />
    </api>
    <api id="P:System.Net.PeerToPeer.PeerName.IsSecured">
      <topicdata group="api" />
      <apidata name="IsSecured" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsSecured" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </containers>
      <file name="4b9c5caa-378e-df0e-a736-a1bcbe6c939a" />
    </api>
    <api id="P:System.Net.PeerToPeer.PeerName.PeerHostName">
      <topicdata group="api" />
      <apidata name="PeerHostName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PeerHostName">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </containers>
      <file name="cda6a401-d7ce-4632-6eda-fcd48f5d781e" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerName.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" eiiName="ISerializable.GetObjectData" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="abe94987-ea93-db77-78fa-37d6ef15ad0c" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerName.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </containers>
      <file name="b94120f7-f508-0645-d693-d4a6dbc69ce4" />
    </api>
    <api id="T:System.Net.PeerToPeer.PeerNameRecord">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.PeerNameRecord" />
      <apidata name="PeerNameRecord" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.PeerToPeer.PeerNameRecord.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="830aaf8a-b5a8-e950-4098-e5f013d96bf8" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.PeerNameRecord">
      <topicdata name="PeerNameRecord" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.PeerNameRecord" />
      <apidata name="PeerNameRecord" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.PeerToPeer.PeerNameRecord.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Net.PeerToPeer.PeerNameRecord.#ctor">
          <element api="M:System.Net.PeerToPeer.PeerNameRecord.#ctor" />
          <element api="M:System.Net.PeerToPeer.PeerNameRecord.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        </element>
        <element api="P:System.Net.PeerToPeer.PeerNameRecord.Comment" />
        <element api="P:System.Net.PeerToPeer.PeerNameRecord.Data" />
        <element api="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" />
        <element api="M:System.Net.PeerToPeer.PeerNameRecord.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" />
        <element api="M:System.Net.PeerToPeer.PeerNameRecord.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRecord" />
      </containers>
      <file name="7b84bcf7-4bcc-9762-b13d-3d64fae16a3f" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.PeerNameRecord">
      <topicdata name="PeerNameRecord" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.PeerNameRecord" />
      <apidata name="PeerNameRecord" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.PeerToPeer.PeerNameRecord.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Net.PeerToPeer.PeerNameRecord.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.PeerNameRecord.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRecord" />
      </containers>
      <file name="abbb77d8-79d9-3c86-af8c-5664c15018ff" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.PeerNameRecord">
      <topicdata name="PeerNameRecord" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.PeerNameRecord" />
      <apidata name="PeerNameRecord" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.PeerToPeer.PeerNameRecord.#ctor" />
      <elements>
        <element api="P:System.Net.PeerToPeer.PeerNameRecord.Comment" />
        <element api="P:System.Net.PeerToPeer.PeerNameRecord.Data" />
        <element api="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection" />
        <element api="P:System.Net.PeerToPeer.PeerNameRecord.PeerName" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRecord" />
      </containers>
      <file name="83ae2609-9938-6481-91ff-f7fad7bcc816" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.PeerNameRecord.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.PeerNameRecord" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.PeerToPeer.PeerNameRecord.#ctor" />
        <element api="M:System.Net.PeerToPeer.PeerNameRecord.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRecord" ref="true" />
      </containers>
      <file name="b9a2719e-dc33-a519-e500-beecf5eaedc3" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRecord.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.PeerToPeer.PeerNameRecord.#ctor" />
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRecord" ref="true" />
      </containers>
      <file name="7a492905-5b56-00e0-405e-ff5384cf663e" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRecord.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Net.PeerToPeer.PeerNameRecord.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRecord" ref="true" />
      </containers>
      <file name="a4ae3946-f278-b5e8-8674-12af6469f481" />
    </api>
    <api id="P:System.Net.PeerToPeer.PeerNameRecord.Comment">
      <topicdata group="api" />
      <apidata name="Comment" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Comment" />
      <setter name="set_Comment" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRecord" ref="true" />
      </containers>
      <file name="e423d3fd-bb78-3796-614e-bcbccebaaa0e" />
    </api>
    <api id="P:System.Net.PeerToPeer.PeerNameRecord.Data">
      <topicdata group="api" />
      <apidata name="Data" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Data" />
      <setter name="set_Data" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRecord" ref="true" />
      </containers>
      <file name="0bcbdc49-10c0-a206-567f-36011c6f81b6" />
    </api>
    <api id="P:System.Net.PeerToPeer.PeerNameRecord.EndPointCollection">
      <topicdata group="api" />
      <apidata name="EndPointCollection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EndPointCollection" />
      <returns>
        <type api="T:System.Net.IPEndPointCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRecord" ref="true" />
      </containers>
      <file name="c768165d-7b2d-932a-5757-0368987b3000" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRecord.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRecord" ref="true" />
      </containers>
      <file name="7b347db0-9efa-3e40-d220-d7801022b97f" />
    </api>
    <api id="P:System.Net.PeerToPeer.PeerNameRecord.PeerName">
      <topicdata group="api" />
      <apidata name="PeerName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PeerName" />
      <setter name="set_PeerName" />
      <returns>
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRecord" ref="true" />
      </containers>
      <file name="7db09a3a-4718-c0e0-b845-6636023ce289" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRecord.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" eiiName="ISerializable.GetObjectData" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRecord" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="e1c39626-7a3b-158e-a764-ea06fea96654" />
    </api>
    <api id="T:System.Net.PeerToPeer.PeerNameRecordCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.PeerNameRecordCollection" />
      <apidata name="PeerNameRecordCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.PeerToPeer.PeerNameRecordCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.PeerNameRecord" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="a85bcbcc-d49e-f1c5-9fb8-3f2877ba33d1" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.PeerNameRecordCollection">
      <topicdata name="PeerNameRecordCollection" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.PeerNameRecordCollection" />
      <apidata name="PeerNameRecordCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.PeerToPeer.PeerNameRecordCollection.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element api="M:System.Collections.ObjectModel.Collection`1.ClearItems" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Count" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Items" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Net.PeerToPeer.PeerNameRecordCollection.#ctor" />
        <element api="M:System.Net.PeerToPeer.PeerNameRecordCollection.InsertItem(System.Int32,System.Net.PeerToPeer.PeerNameRecord)" />
        <element api="M:System.Net.PeerToPeer.PeerNameRecordCollection.SetItem(System.Int32,System.Net.PeerToPeer.PeerNameRecord)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRecordCollection" />
      </containers>
      <file name="911a556b-f757-f8c1-8c06-c849f1fa3711" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.PeerNameRecordCollection">
      <topicdata name="PeerNameRecordCollection" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.PeerNameRecordCollection" />
      <apidata name="PeerNameRecordCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.PeerToPeer.PeerNameRecordCollection.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element api="M:System.Collections.ObjectModel.Collection`1.ClearItems" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Net.PeerToPeer.PeerNameRecordCollection.InsertItem(System.Int32,System.Net.PeerToPeer.PeerNameRecord)" />
        <element api="M:System.Net.PeerToPeer.PeerNameRecordCollection.SetItem(System.Int32,System.Net.PeerToPeer.PeerNameRecord)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRecordCollection" />
      </containers>
      <file name="18544388-9ef0-e082-4bfc-7ef88d4bce27" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.PeerNameRecordCollection">
      <topicdata name="PeerNameRecordCollection" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.PeerNameRecordCollection" />
      <apidata name="PeerNameRecordCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.PeerToPeer.PeerNameRecordCollection.#ctor" />
      <elements>
        <element api="P:System.Collections.ObjectModel.Collection`1.Count" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Items" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRecordCollection" />
      </containers>
      <file name="39c0edec-5ca9-8d16-59d6-e95388db68b9" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRecordCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRecordCollection" ref="true" />
      </containers>
      <file name="2a8aa0d9-8837-fa12-57cf-46b6389473c6" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRecordCollection.InsertItem(System.Int32,System.Net.PeerToPeer.PeerNameRecord)">
      <topicdata group="api" />
      <apidata name="InsertItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.PeerNameRecord" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Net.PeerToPeer.PeerNameRecord" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRecordCollection" ref="true" />
      </containers>
      <file name="8880a62f-2b63-f509-c6e8-df21e0f97f26" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRecordCollection.SetItem(System.Int32,System.Net.PeerToPeer.PeerNameRecord)">
      <topicdata group="api" />
      <apidata name="SetItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Net.PeerToPeer.PeerNameRecord" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Net.PeerToPeer.PeerNameRecord" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRecordCollection" ref="true" />
      </containers>
      <file name="084414b4-6e96-6878-d27c-ec57a3beb444" />
    </api>
    <api id="T:System.Net.PeerToPeer.PeerNameRegistration">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.PeerNameRegistration" />
      <apidata name="PeerNameRegistration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="ee9e15c2-1e10-c867-a134-5add2345bdf1" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.PeerNameRegistration">
      <topicdata name="PeerNameRegistration" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.PeerNameRegistration" />
      <apidata name="PeerNameRegistration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Net.PeerToPeer.PeerNameRegistration.#ctor">
          <element api="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor" />
          <element api="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)" />
          <element api="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)" />
        </element>
        <element api="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
        <element api="P:System.Net.PeerToPeer.PeerNameRegistration.Comment" />
        <element api="P:System.Net.PeerToPeer.PeerNameRegistration.Data" />
        <element api="Overload:System.Net.PeerToPeer.PeerNameRegistration.Dispose">
          <element api="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose" />
          <element api="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
        <element api="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered" />
        <element api="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
        <element api="P:System.Net.PeerToPeer.PeerNameRegistration.Port" />
        <element api="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />
        <element api="M:System.Net.PeerToPeer.PeerNameRegistration.Stop" />
        <element api="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
        <element api="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" />
      </containers>
      <file name="103136ae-92ec-3c0e-9f51-670ea3f89d1e" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.PeerNameRegistration">
      <topicdata name="PeerNameRegistration" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.PeerNameRegistration" />
      <apidata name="PeerNameRegistration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Net.PeerToPeer.PeerNameRegistration.Dispose">
          <element api="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose" />
          <element api="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)" />
        </element>
        <element api="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered" />
        <element api="M:System.Net.PeerToPeer.PeerNameRegistration.Start" />
        <element api="M:System.Net.PeerToPeer.PeerNameRegistration.Stop" />
        <element api="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.PeerNameRegistration.Update" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" />
      </containers>
      <file name="56206558-b143-67ac-0568-a9062ea6491d" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.PeerNameRegistration">
      <topicdata name="PeerNameRegistration" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.PeerNameRegistration" />
      <apidata name="PeerNameRegistration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor" />
      <elements>
        <element api="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud" />
        <element api="P:System.Net.PeerToPeer.PeerNameRegistration.Comment" />
        <element api="P:System.Net.PeerToPeer.PeerNameRegistration.Data" />
        <element api="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection" />
        <element api="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName" />
        <element api="P:System.Net.PeerToPeer.PeerNameRegistration.Port" />
        <element api="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" />
      </containers>
      <file name="e0f6c104-51e7-fccc-307a-b567dd916fcd" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.PeerNameRegistration.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.PeerNameRegistration" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor" />
        <element api="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)" />
        <element api="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <file name="0b8004f7-4d2a-6d9c-a22b-f498d3933bfb" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.PeerNameRegistration.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.PeerNameRegistration" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose" />
        <element api="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <file name="70b24521-7b38-1ae3-e1ce-eb880f40dd64" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.PeerToPeer.PeerNameRegistration.#ctor" />
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <file name="59a2382d-fb22-a2cc-0fd7-d5d9219c0ed7" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.PeerToPeer.PeerNameRegistration.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <file name="c307b5ce-7196-ab4c-8d23-01a504dd87b4" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Net.PeerToPeer.PeerName,System.Int32,System.Net.PeerToPeer.Cloud)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.PeerToPeer.PeerNameRegistration.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="cloud">
          <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <file name="d8f06eb9-a2f2-afb1-48a3-b7ac1bb8a3d7" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRegistration.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Net.PeerToPeer.PeerNameRegistration.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <file name="86875d96-7530-966d-ed22-58b2616a2acc" />
    </api>
    <api id="P:System.Net.PeerToPeer.PeerNameRegistration.Cloud">
      <topicdata group="api" />
      <apidata name="Cloud" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Cloud" />
      <setter name="set_Cloud" />
      <returns>
        <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <file name="67e0016e-ffe2-35c0-daf2-4d6987bd322f" />
    </api>
    <api id="P:System.Net.PeerToPeer.PeerNameRegistration.Comment">
      <topicdata group="api" />
      <apidata name="Comment" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Comment" />
      <setter name="set_Comment" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <file name="25f91834-4e0b-4604-e5fb-2931fd9d8c66" />
    </api>
    <api id="P:System.Net.PeerToPeer.PeerNameRegistration.Data">
      <topicdata group="api" />
      <apidata name="Data" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Data" />
      <setter name="set_Data" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <file name="06bcfd77-7f3b-0a85-b1ac-65c677e1f993" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.PeerNameRegistration.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <file name="ed9c7f0e-12c1-8089-91c5-7bc5834e3683" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRegistration.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Net.PeerToPeer.PeerNameRegistration.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <file name="9a406af1-e427-7a3c-1f55-d22a90af242e" />
    </api>
    <api id="P:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection">
      <topicdata group="api" />
      <apidata name="EndPointCollection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EndPointCollection" />
      <returns>
        <type api="T:System.Net.IPEndPointCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <file name="374abf5d-78bf-cb1c-6c95-fc84aa149be4" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRegistration.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <file name="e7190414-2365-e228-b2fc-a6c6905af65e" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRegistration.IsRegistered">
      <topicdata group="api" />
      <apidata name="IsRegistered" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <file name="e047e754-d61d-72c0-f490-a3f156ea1630" />
    </api>
    <api id="P:System.Net.PeerToPeer.PeerNameRegistration.PeerName">
      <topicdata group="api" />
      <apidata name="PeerName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PeerName" />
      <setter name="set_PeerName" />
      <returns>
        <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <file name="3cadf26c-f56a-ac84-a09d-ae60f5407ae2" />
    </api>
    <api id="P:System.Net.PeerToPeer.PeerNameRegistration.Port">
      <topicdata group="api" />
      <apidata name="Port" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Port" />
      <setter name="set_Port" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <file name="17e3b1d0-7107-02c6-4acb-62d340199118" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRegistration.Start">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="615bbeb6-5184-5fe7-d2b5-44de5f3f0b01" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRegistration.Stop">
      <topicdata group="api" />
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="e473bc33-fa1a-03c4-61ec-6451f4375d35" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRegistration.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" eiiName="ISerializable.GetObjectData" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="9011d148-7852-ee26-e29c-4c3e9ae20966" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameRegistration.Update">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="cd084931-9f05-5c48-7048-08d1625febf4" />
    </api>
    <api id="P:System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection">
      <topicdata group="api" />
      <apidata name="UseAutoEndPointSelection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UseAutoEndPointSelection" />
      <setter name="set_UseAutoEndPointSelection" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameRegistration" ref="true" />
      </containers>
      <file name="7a800309-c8da-2f18-651c-749e32462598" />
    </api>
    <api id="T:System.Net.PeerToPeer.PeerNameResolver">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.PeerNameResolver" />
      <apidata name="PeerNameResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.PeerToPeer.PeerNameResolver.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="5e47813a-f6af-66b4-82ce-7de1cdfdd44a" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.PeerNameResolver">
      <topicdata name="PeerNameResolver" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.PeerNameResolver" />
      <apidata name="PeerNameResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.PeerToPeer.PeerNameResolver.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Net.PeerToPeer.PeerNameResolver.#ctor" />
        <element api="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)" />
        <element api="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" />
        <element api="Overload:System.Net.PeerToPeer.PeerNameResolver.Resolve">
          <element api="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)" />
          <element api="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)" />
          <element api="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)" />
          <element api="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)" />
        </element>
        <element api="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync">
          <element api="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)" />
          <element api="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)" />
          <element api="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)" />
          <element api="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)" />
        </element>
        <element api="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)" />
        <element api="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />
        <element api="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameResolver" />
      </containers>
      <file name="a7b0862c-e39d-1475-1ad5-e95dfb649ed7" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.PeerNameResolver">
      <topicdata name="PeerNameResolver" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.PeerNameResolver" />
      <apidata name="PeerNameResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.PeerToPeer.PeerNameResolver.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)" />
        <element api="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)" />
        <element api="Overload:System.Net.PeerToPeer.PeerNameResolver.Resolve">
          <element api="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)" />
          <element api="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)" />
          <element api="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)" />
          <element api="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)" />
        </element>
        <element api="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync">
          <element api="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)" />
          <element api="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)" />
          <element api="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)" />
          <element api="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)" />
        </element>
        <element api="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameResolver" />
      </containers>
      <file name="37efe549-ec9a-a802-f53a-4cf051fc7105" />
    </api>
    <api id="Events.T:System.Net.PeerToPeer.PeerNameResolver">
      <topicdata name="PeerNameResolver" group="list" subgroup="Events" typeTopicId="T:System.Net.PeerToPeer.PeerNameResolver" />
      <apidata name="PeerNameResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Net.PeerToPeer.PeerNameResolver.#ctor" />
      <elements>
        <element api="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted" />
        <element api="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameResolver" />
      </containers>
      <file name="3e8b7153-0ba9-89f0-afc3-f5ce9feb727f" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.PeerNameResolver.Resolve">
      <topicdata name="Resolve" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.PeerNameResolver" />
      <apidata name="Resolve" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)" />
        <element api="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)" />
        <element api="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)" />
        <element api="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameResolver" ref="true" />
      </containers>
      <file name="d8d1bebd-b615-1389-52c4-f538d1b268a3" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync">
      <topicdata name="ResolveAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.PeerNameResolver" />
      <apidata name="ResolveAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)" />
        <element api="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)" />
        <element api="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)" />
        <element api="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameResolver" ref="true" />
      </containers>
      <file name="f9b7bb1e-5e9c-3a68-5a27-1c15385b431f" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameResolver.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameResolver" ref="true" />
      </containers>
      <file name="5b88ea1f-3ed8-aa6c-fa9f-cea0fec7b5f4" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnResolveCompleted" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameResolver" ref="true" />
      </containers>
      <file name="3f24e996-0754-6234-8142-688438166b09" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)">
      <topicdata group="api" />
      <apidata name="OnResolveProgressChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="e">
          <type api="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameResolver" ref="true" />
      </containers>
      <file name="14a6b629-fd87-d984-2375-6377a0b40d01" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)">
      <topicdata group="api" />
      <apidata name="Resolve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.PeerNameResolver.Resolve" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerName">
          <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.PeerToPeer.PeerNameRecordCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameResolver" ref="true" />
      </containers>
      <file name="e83d1988-8fa9-ea19-c85a-bea8d097f497" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)">
      <topicdata group="api" />
      <apidata name="Resolve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.PeerNameResolver.Resolve" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerName">
          <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
        </parameter>
        <parameter name="maxRecords">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.PeerToPeer.PeerNameRecordCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameResolver" ref="true" />
      </containers>
      <file name="1bf5c160-918c-d2e2-7ecd-37ae4a7637d7" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)">
      <topicdata group="api" />
      <apidata name="Resolve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.PeerNameResolver.Resolve" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerName">
          <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
        </parameter>
        <parameter name="cloud">
          <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.PeerToPeer.PeerNameRecordCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameResolver" ref="true" />
      </containers>
      <file name="d360240d-a36b-b122-f8f5-da9a5228831c" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)">
      <topicdata group="api" />
      <apidata name="Resolve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.PeerNameResolver.Resolve" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerName">
          <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
        </parameter>
        <parameter name="cloud">
          <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
        </parameter>
        <parameter name="maxRecords">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.PeerToPeer.PeerNameRecordCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameResolver" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="08ebe443-2674-c037-2666-3c467075f2da" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="ResolveAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerName">
          <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
        </parameter>
        <parameter name="maxRecords">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameResolver" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="4d5c7027-03ff-943d-9ff5-16811d302bff" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="ResolveAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerName">
          <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
        </parameter>
        <parameter name="cloud">
          <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
        </parameter>
        <parameter name="maxRecords">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameResolver" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="aa2ec5fd-7532-e582-ae48-87229aa714ae" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)">
      <topicdata group="api" />
      <apidata name="ResolveAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerName">
          <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
        </parameter>
        <parameter name="cloud">
          <type api="T:System.Net.PeerToPeer.Cloud" ref="true" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameResolver" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="76109c53-3023-ec20-9b37-7a141ccef4b6" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)">
      <topicdata group="api" />
      <apidata name="ResolveAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="peerName">
          <type api="T:System.Net.PeerToPeer.PeerName" ref="true" />
        </parameter>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameResolver" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="19e5ce04-81a4-c47c-9711-b50993c1c4e5" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)">
      <topicdata group="api" />
      <apidata name="ResolveAsyncCancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="userState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameResolver" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="d79983b3-59fc-de5f-a808-a3bdbca456ce" />
    </api>
    <api id="E:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted">
      <topicdata group="api" />
      <apidata name="ResolveCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ResolveCompleted" />
      <remover name="remove_ResolveCompleted" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameResolver" ref="true" />
      </containers>
      <file name="3552f7e4-e51c-f866-1b92-01b5b248985a" />
    </api>
    <api id="E:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged">
      <topicdata group="api" />
      <apidata name="ResolveProgressChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ResolveProgressChanged" />
      <remover name="remove_ResolveProgressChanged" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameResolver" ref="true" />
      </containers>
      <file name="f99f769f-4541-6e7a-574f-f70918c8c4d0" />
    </api>
    <api id="T:System.Net.PeerToPeer.PeerNameType">
      <topicdata group="api" />
      <apidata name="PeerNameType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Net.PeerToPeer.PeerNameType.Secured" />
        <element api="F:System.Net.PeerToPeer.PeerNameType.Unsecured" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="91760771-0ace-f3b1-e86a-6d2c145fcacd" />
    </api>
    <api id="F:System.Net.PeerToPeer.PeerNameType.Secured">
      <topicdata group="api" notopic="" />
      <apidata name="Secured" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.PeerNameType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameType" ref="false" />
      </containers>
      <file name="16fc6586-e605-e32c-1d5b-f485122517c4" />
    </api>
    <api id="F:System.Net.PeerToPeer.PeerNameType.Unsecured">
      <topicdata group="api" notopic="" />
      <apidata name="Unsecured" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.PeerNameType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerNameType" ref="false" />
      </containers>
      <file name="b9b76e13-7480-33b9-f2fa-af69baf1b0f0" />
    </api>
    <api id="T:System.Net.PeerToPeer.PeerToPeerException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.PeerToPeerException" />
      <apidata name="PeerToPeerException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.PeerToPeer.PeerToPeerException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="15162f64-208c-5641-70f0-bf0bcc14e1f0" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.PeerToPeerException">
      <topicdata name="PeerToPeerException" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.PeerToPeerException" />
      <apidata name="PeerToPeerException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.PeerToPeer.PeerToPeerException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Net.PeerToPeer.PeerToPeerException.#ctor">
          <element api="M:System.Net.PeerToPeer.PeerToPeerException.#ctor" />
          <element api="M:System.Net.PeerToPeer.PeerToPeerException.#ctor(System.String)" />
          <element api="M:System.Net.PeerToPeer.PeerToPeerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Net.PeerToPeer.PeerToPeerException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Net.PeerToPeer.PeerToPeerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.PeerToPeerException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerToPeerException" />
      </containers>
      <file name="27951af6-bafc-73c4-9eb6-fbe1c1e2fc05" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.PeerToPeerException">
      <topicdata name="PeerToPeerException" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.PeerToPeerException" />
      <apidata name="PeerToPeerException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.PeerToPeer.PeerToPeerException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Net.PeerToPeer.PeerToPeerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.PeerToPeerException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerToPeerException" />
      </containers>
      <file name="8aea43e2-973d-0c55-efa2-eccd43146b76" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.PeerToPeerException">
      <topicdata name="PeerToPeerException" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.PeerToPeerException" />
      <apidata name="PeerToPeerException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.PeerToPeer.PeerToPeerException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerToPeerException" />
      </containers>
      <file name="89689064-f6ed-0202-12c2-adb792f8e1a0" />
    </api>
    <api id="Events.T:System.Net.PeerToPeer.PeerToPeerException">
      <topicdata name="PeerToPeerException" group="list" subgroup="Events" typeTopicId="T:System.Net.PeerToPeer.PeerToPeerException" />
      <apidata name="PeerToPeerException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Net.PeerToPeer.PeerToPeerException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerToPeerException" />
      </containers>
      <file name="e30b73a1-a6fe-f8ac-5ae6-66ad09a32752" />
    </api>
    <api id="Overload:System.Net.PeerToPeer.PeerToPeerException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.PeerToPeerException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Net.PeerToPeer.PeerToPeerException.#ctor" />
        <element api="M:System.Net.PeerToPeer.PeerToPeerException.#ctor(System.String)" />
        <element api="M:System.Net.PeerToPeer.PeerToPeerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Net.PeerToPeer.PeerToPeerException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerToPeerException" ref="true" />
      </containers>
      <file name="af698c97-4deb-3936-d867-2dcbd48e2a46" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerToPeerException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.PeerToPeer.PeerToPeerException.#ctor" />
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerToPeerException" ref="true" />
      </containers>
      <file name="610c312c-81cd-1df4-d334-47535090ed4c" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerToPeerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Net.PeerToPeer.PeerToPeerException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerToPeerException" ref="true" />
      </containers>
      <file name="14a33258-484f-f26f-1989-560079029402" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerToPeerException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.PeerToPeer.PeerToPeerException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerToPeerException" ref="true" />
      </containers>
      <file name="0a03794c-bc97-77d1-1989-99df9caf1e75" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerToPeerException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Net.PeerToPeer.PeerToPeerException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerToPeerException" ref="true" />
      </containers>
      <file name="40377925-11ff-3e7a-39dc-47d4e8aa5268" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerToPeerException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerToPeerException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="b1dc83b5-4ce6-de2b-1f27-85409f7bb19a" />
    </api>
    <api id="M:System.Net.PeerToPeer.PeerToPeerException.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" eiiName="ISerializable.GetObjectData" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PeerToPeerException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="80bd8ff3-d1a0-5024-cbe0-12ba0caa597e" />
    </api>
    <api id="T:System.Net.PeerToPeer.PnrpPermission">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.PnrpPermission" />
      <apidata name="PnrpPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Security.Permissions.IUnrestrictedPermission" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="11d1efd3-d0e7-849a-efae-24aea65531e7" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.PnrpPermission">
      <topicdata name="PnrpPermission" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.PnrpPermission" />
      <apidata name="PnrpPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)" />
        <element api="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <element api="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
        <element api="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
        <element api="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
        <element api="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
        <element api="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <element api="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
        <element api="M:System.Security.CodeAccessPermission.Assert" />
        <element api="M:System.Security.CodeAccessPermission.Demand" />
        <element api="M:System.Security.CodeAccessPermission.Deny" />
        <element api="M:System.Security.CodeAccessPermission.Equals(System.Object)" />
        <element api="M:System.Security.CodeAccessPermission.GetHashCode" />
        <element api="M:System.Security.CodeAccessPermission.PermitOnly" />
        <element api="M:System.Security.CodeAccessPermission.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PnrpPermission" />
      </containers>
      <file name="f2b7ef1b-97f4-7702-b4e4-c9b081496d1b" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.PnrpPermission">
      <topicdata name="PnrpPermission" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.PnrpPermission" />
      <apidata name="PnrpPermission" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Net.PeerToPeer.PnrpPermission.Copy" />
        <element api="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)" />
        <element api="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)" />
        <element api="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)" />
        <element api="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
        <element api="M:System.Net.PeerToPeer.PnrpPermission.ToXml" />
        <element api="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)" />
        <element api="M:System.Security.CodeAccessPermission.Assert" />
        <element api="M:System.Security.CodeAccessPermission.Demand" />
        <element api="M:System.Security.CodeAccessPermission.Deny" />
        <element api="M:System.Security.CodeAccessPermission.Equals(System.Object)" />
        <element api="M:System.Security.CodeAccessPermission.GetHashCode" />
        <element api="M:System.Security.CodeAccessPermission.PermitOnly" />
        <element api="M:System.Security.CodeAccessPermission.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PnrpPermission" />
      </containers>
      <file name="6041c20b-4886-c255-34e9-28688d42e70c" />
    </api>
    <api id="M:System.Net.PeerToPeer.PnrpPermission.#ctor(System.Security.Permissions.PermissionState)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="state">
          <type api="T:System.Security.Permissions.PermissionState" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PnrpPermission" ref="true" />
      </containers>
      <file name="b6af82ad-646b-3fe1-71e7-9a14bad6bab5" />
    </api>
    <api id="M:System.Net.PeerToPeer.PnrpPermission.Copy">
      <topicdata group="api" />
      <apidata name="Copy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.Copy">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Security.IPermission.Copy">
          <type api="T:System.Security.IPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PnrpPermission" ref="true" />
      </containers>
      <file name="b986a4ac-f405-ff10-8f0a-92f6289143d0" />
    </api>
    <api id="M:System.Net.PeerToPeer.PnrpPermission.FromXml(System.Security.SecurityElement)">
      <topicdata group="api" />
      <apidata name="FromXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.FromXml(System.Security.SecurityElement)">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:System.Security.SecurityElement" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Security.ISecurityEncodable.FromXml(System.Security.SecurityElement)">
          <type api="T:System.Security.ISecurityEncodable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PnrpPermission" ref="true" />
      </containers>
      <file name="476f026a-572a-b8a4-49cb-526e3fe9e9d7" />
    </api>
    <api id="M:System.Net.PeerToPeer.PnrpPermission.Intersect(System.Security.IPermission)">
      <topicdata group="api" />
      <apidata name="Intersect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.Intersect(System.Security.IPermission)">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="target">
          <type api="T:System.Security.IPermission" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Security.IPermission.Intersect(System.Security.IPermission)">
          <type api="T:System.Security.IPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PnrpPermission" ref="true" />
      </containers>
      <file name="bb337156-67d3-2019-a404-07d319309317" />
    </api>
    <api id="M:System.Net.PeerToPeer.PnrpPermission.IsSubsetOf(System.Security.IPermission)">
      <topicdata group="api" />
      <apidata name="IsSubsetOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.IsSubsetOf(System.Security.IPermission)">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="target">
          <type api="T:System.Security.IPermission" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Security.IPermission.IsSubsetOf(System.Security.IPermission)">
          <type api="T:System.Security.IPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PnrpPermission" ref="true" />
      </containers>
      <file name="5694a755-ca66-4b37-397c-255b83135986" />
    </api>
    <api id="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted">
      <topicdata group="api" />
      <apidata name="IsUnrestricted" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Security.Permissions.IUnrestrictedPermission.IsUnrestricted">
          <type api="T:System.Security.Permissions.IUnrestrictedPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PnrpPermission" ref="true" />
      </containers>
      <file name="02cc62d7-ad4c-395c-4a9d-3b5cfcf299e3" />
    </api>
    <api id="M:System.Net.PeerToPeer.PnrpPermission.ToXml">
      <topicdata group="api" />
      <apidata name="ToXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.ToXml">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Security.SecurityElement" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Security.ISecurityEncodable.ToXml">
          <type api="T:System.Security.ISecurityEncodable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PnrpPermission" ref="true" />
      </containers>
      <file name="12202efa-2604-135e-0729-0985705a141d" />
    </api>
    <api id="M:System.Net.PeerToPeer.PnrpPermission.Union(System.Security.IPermission)">
      <topicdata group="api" />
      <apidata name="Union" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.CodeAccessPermission.Union(System.Security.IPermission)">
          <type api="T:System.Security.CodeAccessPermission" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="target">
          <type api="T:System.Security.IPermission" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Security.IPermission.Union(System.Security.IPermission)">
          <type api="T:System.Security.IPermission" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PnrpPermission" ref="true" />
      </containers>
      <file name="3a301e54-1a96-3bc9-221b-7260ab7fed7a" />
    </api>
    <api id="T:System.Net.PeerToPeer.PnrpPermissionAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
      <apidata name="PnrpPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Security.Permissions.CodeAccessSecurityAttribute" ref="true" />
          <type api="T:System.Security.Permissions.SecurityAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Assembly" />
              <field name="Class" />
              <field name="Struct" />
              <field name="Constructor" />
              <field name="Method" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Inherited">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="047e366f-ec25-2321-c795-8b62e8a85e53" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.PnrpPermissionAttribute">
      <topicdata name="PnrpPermissionAttribute" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
      <apidata name="PnrpPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Net.PeerToPeer.PnrpPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)" />
        <element api="M:System.Net.PeerToPeer.PnrpPermissionAttribute.CreatePermission" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Action" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Unrestricted" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
      </containers>
      <file name="2a3564a0-6ec7-9d67-e75f-b5021f8ae86e" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.PnrpPermissionAttribute">
      <topicdata name="PnrpPermissionAttribute" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
      <apidata name="PnrpPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Net.PeerToPeer.PnrpPermissionAttribute.CreatePermission" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
      </containers>
      <file name="22e642b1-1235-91a3-b4b1-56f54aa21a88" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.PnrpPermissionAttribute">
      <topicdata name="PnrpPermissionAttribute" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
      <apidata name="PnrpPermissionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Action" />
        <element api="P:System.Security.Permissions.SecurityAttribute.Unrestricted" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PnrpPermissionAttribute" />
      </containers>
      <file name="ef4b6bb8-9989-058f-21fd-dced65a4d1eb" />
    </api>
    <api id="M:System.Net.PeerToPeer.PnrpPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PnrpPermissionAttribute" ref="true" />
      </containers>
      <file name="5fa2d0e9-2860-8c10-94b5-a63ce4bb6e1c" />
    </api>
    <api id="M:System.Net.PeerToPeer.PnrpPermissionAttribute.CreatePermission">
      <topicdata group="api" />
      <apidata name="CreatePermission" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Permissions.SecurityAttribute.CreatePermission">
          <type api="T:System.Security.Permissions.SecurityAttribute" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Security.IPermission" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PnrpPermissionAttribute" ref="true" />
      </containers>
      <file name="1394fd39-7b90-7f7c-bc04-d944f9d4827a" />
    </api>
    <api id="T:System.Net.PeerToPeer.PnrpScope">
      <topicdata group="api" />
      <apidata name="PnrpScope" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Net.PeerToPeer.PnrpScope.All" />
        <element api="F:System.Net.PeerToPeer.PnrpScope.Global" />
        <element api="F:System.Net.PeerToPeer.PnrpScope.SiteLocal" />
        <element api="F:System.Net.PeerToPeer.PnrpScope.LinkLocal" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="f909e42a-7ace-89dc-69e7-5bb5201e4fc5" />
    </api>
    <api id="F:System.Net.PeerToPeer.PnrpScope.All">
      <topicdata group="api" notopic="" />
      <apidata name="All" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.PnrpScope" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PnrpScope" ref="false" />
      </containers>
      <file name="30fca21f-8b08-ed73-c66f-c64f4a8eb09a" />
    </api>
    <api id="F:System.Net.PeerToPeer.PnrpScope.Global">
      <topicdata group="api" notopic="" />
      <apidata name="Global" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.PnrpScope" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PnrpScope" ref="false" />
      </containers>
      <file name="24c3b25d-b7ce-1a78-a70c-39e7719f5b37" />
    </api>
    <api id="F:System.Net.PeerToPeer.PnrpScope.LinkLocal">
      <topicdata group="api" notopic="" />
      <apidata name="LinkLocal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.PnrpScope" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PnrpScope" ref="false" />
      </containers>
      <file name="0917b0be-2553-5db3-4fdb-142f5964db36" />
    </api>
    <api id="F:System.Net.PeerToPeer.PnrpScope.SiteLocal">
      <topicdata group="api" notopic="" />
      <apidata name="SiteLocal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Net.PeerToPeer.PnrpScope" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.PnrpScope" ref="false" />
      </containers>
      <file name="45b313bf-6cdf-e85a-2409-e7bbba875070" />
    </api>
    <api id="T:System.Net.PeerToPeer.ResolveCompletedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.ResolveCompletedEventArgs" />
      <apidata name="ResolveCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="69aa21a8-8c41-21bb-c069-58e49c02ad50" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.ResolveCompletedEventArgs">
      <topicdata name="ResolveCompletedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" />
      <apidata name="ResolveCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="M:System.Net.PeerToPeer.ResolveCompletedEventArgs.#ctor(System.Net.PeerToPeer.PeerNameRecordCollection,System.Exception,System.Boolean,System.Object)" />
        <element api="P:System.Net.PeerToPeer.ResolveCompletedEventArgs.PeerNameRecordCollection" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" />
      </containers>
      <file name="bd9ad4f6-271c-d567-96b6-062c69f853e3" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.ResolveCompletedEventArgs">
      <topicdata name="ResolveCompletedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" />
      <apidata name="ResolveCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" />
      </containers>
      <file name="0547f04a-225e-76b0-0efe-97589be35390" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.ResolveCompletedEventArgs">
      <topicdata name="ResolveCompletedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" />
      <apidata name="ResolveCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Net.PeerToPeer.ResolveCompletedEventArgs.PeerNameRecordCollection" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" />
      </containers>
      <file name="3a66df0a-4259-4a45-8b30-ebb63fef664a" />
    </api>
    <api id="M:System.Net.PeerToPeer.ResolveCompletedEventArgs.#ctor(System.Net.PeerToPeer.PeerNameRecordCollection,System.Exception,System.Boolean,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="peerNameRecordCollection">
          <type api="T:System.Net.PeerToPeer.PeerNameRecordCollection" ref="true" />
        </parameter>
        <parameter name="error">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="canceled">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="userToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" ref="true" />
      </containers>
      <file name="96815236-bc3c-061b-25de-230ac24385b6" />
    </api>
    <api id="P:System.Net.PeerToPeer.ResolveCompletedEventArgs.PeerNameRecordCollection">
      <topicdata group="api" />
      <apidata name="PeerNameRecordCollection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PeerNameRecordCollection" />
      <returns>
        <type api="T:System.Net.PeerToPeer.PeerNameRecordCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.ResolveCompletedEventArgs" ref="true" />
      </containers>
      <file name="0b2a9631-6c11-ab3c-548c-754c92ae6d98" />
    </api>
    <api id="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />
      <apidata name="ResolveProgressChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.ProgressChangedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
      </containers>
      <file name="1f11a1ba-1430-594a-dffe-9b31767d8d70" />
    </api>
    <api id="AllMembers.T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs">
      <topicdata name="ResolveProgressChangedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />
      <apidata name="ResolveProgressChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.ProgressChangedEventArgs.ProgressPercentage" />
        <element api="P:System.ComponentModel.ProgressChangedEventArgs.UserState" />
        <element api="M:System.Net.PeerToPeer.ResolveProgressChangedEventArgs.#ctor(System.Net.PeerToPeer.PeerNameRecord,System.Object)" />
        <element api="P:System.Net.PeerToPeer.ResolveProgressChangedEventArgs.PeerNameRecord" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />
      </containers>
      <file name="ef0d9aec-728d-2427-a1d0-5c7f8a8f4e9b" />
    </api>
    <api id="Methods.T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs">
      <topicdata name="ResolveProgressChangedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />
      <apidata name="ResolveProgressChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />
      </containers>
      <file name="71855c5f-551f-f6a0-5d04-b85a73b90c24" />
    </api>
    <api id="Properties.T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs">
      <topicdata name="ResolveProgressChangedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />
      <apidata name="ResolveProgressChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.ProgressChangedEventArgs.ProgressPercentage" />
        <element api="P:System.ComponentModel.ProgressChangedEventArgs.UserState" />
        <element api="P:System.Net.PeerToPeer.ResolveProgressChangedEventArgs.PeerNameRecord" />
      </elements>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" />
      </containers>
      <file name="31282e86-f6a2-e06b-35c7-b17a9b3a67fc" />
    </api>
    <api id="M:System.Net.PeerToPeer.ResolveProgressChangedEventArgs.#ctor(System.Net.PeerToPeer.PeerNameRecord,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="peerNameRecord">
          <type api="T:System.Net.PeerToPeer.PeerNameRecord" ref="true" />
        </parameter>
        <parameter name="userToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" ref="true" />
      </containers>
      <file name="764099fa-24e3-aff3-084f-cb58f921cde2" />
    </api>
    <api id="P:System.Net.PeerToPeer.ResolveProgressChangedEventArgs.PeerNameRecord">
      <topicdata group="api" />
      <apidata name="PeerNameRecord" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PeerNameRecord" />
      <returns>
        <type api="T:System.Net.PeerToPeer.PeerNameRecord" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Net" module="System.Net" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Net.PeerToPeer" />
        <type api="T:System.Net.PeerToPeer.ResolveProgressChangedEventArgs" ref="true" />
      </containers>
      <file name="6c6e07a5-b05b-05bf-6042-35569db8061c" />
    </api>
  </apis>
</reflection>