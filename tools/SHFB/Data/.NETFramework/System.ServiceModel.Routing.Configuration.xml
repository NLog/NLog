<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.ServiceModel.Routing">
      <assemblydata version="4.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Routing.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Routing.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Routing.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\35MSSharedLib1024.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c80000014010000060200000024000052534131000800000100010085aad0bef0688d1b994a0d78e1fd29fc24ac34ed3d3ac3fb9b3d0c48386ba834aa880035060a8848b2d8adf58e670ed20914be3681a891c9c8c01eef2ab22872547c39be00af0e6c72485d7cfd1a51df8947d36ceba9989106b58abe79e6a3e71a01ed6bdc867012883e0b1a4d35b1b5eeed6df21e401bb0c22f2246ccb69979dc9e61eef262832ed0f2064853725a75485fa8a3efb7e027319c86dec03dc3b1bca2b5081bab52a627b9917450dfad534799e1c7af58683bdfa135f1518ff1ea60e90d7b993a6c87fd3dd93408e35d1296f9a7f9a97c5db56c0f3cc25ad11e9777f94d138b3cea53b9a8331c2e6dcb8d2ea94e18bf1163ff112a22dbd92d429a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>8913ef869646d14971df222c210018ab394cfe63f8eb9b4d894c0dda7368cfb69df15d049b347f8a8b9205cdcc3d6bd6690f0bd24b3da3179feb8c03f410703027c7844ff654997e38015dfc97222c15061af2a1d3fe91775b9dd4b8ede64d3d59816270a9520e393c8e60619b80d40fc1dc4f12b5aa0c2df20d02ea32960851</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.ServiceModel.Routing.Configuration">
      <topicdata group="api" />
      <apidata name="System.ServiceModel.Routing.Configuration" group="namespace" />
      <elements>
        <element api="T:System.ServiceModel.Routing.Configuration.FilterType" />
        <element api="T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement" />
        <element api="T:System.ServiceModel.Routing.Configuration.RoutingSection" />
        <element api="T:System.ServiceModel.Routing.Configuration.FilterTableCollection" />
        <element api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" />
        <element api="T:System.ServiceModel.Routing.Configuration.BackupListCollection" />
        <element api="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" />
        <element api="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" />
        <element api="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" />
        <element api="T:System.ServiceModel.Routing.Configuration.FilterElement" />
        <element api="T:System.ServiceModel.Routing.Configuration.NamespaceElement" />
        <element api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement" />
        <element api="T:System.ServiceModel.Routing.Configuration.BackupEndpointElement" />
        <element api="T:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement" />
      </elements>
      <file name="e7213ce7-04c7-5d44-cec2-e23d4d2f4367" />
    </api>
    <api id="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" />
      <apidata name="BackupEndpointCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationCollectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointElement" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
      <file name="d225ef35-46b7-dd6c-482e-a8caf3720b82" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection">
      <topicdata name="BackupEndpointCollection" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" />
      <apidata name="BackupEndpointCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="P:System.Configuration.ConfigurationElementCollection.AddElementName" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.BaseAdd">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseClear" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.BaseGet">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ClearElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.CreateNewElement">
          <element api="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.CreateNewElement" />
          <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElementCollection.ElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="P:System.Configuration.ConfigurationElementCollection.RemoveElementName" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SetReadOnly" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.#ctor" />
        <element api="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Add(System.ServiceModel.Routing.Configuration.BackupEndpointElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Clear" />
        <element api="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
        <element api="P:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Name" />
        <element api="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Remove(System.ServiceModel.Routing.Configuration.BackupEndpointElement)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" />
      </containers>
      <file name="cf76bdd2-7311-edca-7dec-5bc1eb5d4151" />
    </api>
    <api id="Methods.T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection">
      <topicdata name="BackupEndpointCollection" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" />
      <apidata name="BackupEndpointCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.BaseAdd">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseClear" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.BaseGet">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.CreateNewElement">
          <element api="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.CreateNewElement" />
          <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Add(System.ServiceModel.Routing.Configuration.BackupEndpointElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Clear" />
        <element api="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Remove(System.ServiceModel.Routing.Configuration.BackupEndpointElement)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" />
      </containers>
      <file name="5f0ab034-7262-312a-4421-33f3310586bf" />
    </api>
    <api id="Properties.T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection">
      <topicdata name="BackupEndpointCollection" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" />
      <apidata name="BackupEndpointCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.Configuration.ConfigurationElementCollection.AddElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ClearElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.RemoveElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate" />
        <element api="P:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Name" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" />
      </containers>
      <file name="b9b7cc87-04e1-c7c6-d41b-64a229402762" />
    </api>
    <api id="Overload:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.CreateNewElement">
      <topicdata name="CreateNewElement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" />
      <apidata name="CreateNewElement" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.CreateNewElement" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" ref="true" />
      </containers>
      <file name="b83feefb-059b-8307-8547-b7765db7c573" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" ref="true" />
      </containers>
      <file name="40cb487d-2ac6-3c98-d1e2-45e4762d1394" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Add(System.ServiceModel.Routing.Configuration.BackupEndpointElement)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" ref="true" />
      </containers>
      <file name="99f817a2-a446-d289-0c79-154046d3e0cb" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" ref="true" />
      </containers>
      <file name="1f754d8f-01ca-5882-f010-0807117f63b8" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.CreateNewElement">
      <topicdata group="api" />
      <apidata name="CreateNewElement" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.CreateNewElement" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement">
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" ref="true" />
      </containers>
      <file name="bb998484-92d9-7ee4-1bdb-d84f4fa4e9f2" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <topicdata group="api" />
      <apidata name="GetElementKey" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="element">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" ref="true" />
      </containers>
      <file name="a9956e54-c697-685e-95ab-a4482cda0970" />
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>name</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <nullValue />
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="None" />
              <field name="IsRequired" />
              <field name="IsKey" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
      <file name="5f2e2776-75bd-9e2c-18e1-d197ca648a55" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.BackupEndpointCollection.Remove(System.ServiceModel.Routing.Configuration.BackupEndpointElement)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" ref="true" />
      </containers>
      <file name="fa11537e-7c0a-dee4-22ed-2d2d809bdc64" />
    </api>
    <api id="T:System.ServiceModel.Routing.Configuration.BackupEndpointElement">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Routing.Configuration.BackupEndpointElement" />
      <apidata name="BackupEndpointElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.BackupEndpointElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
      </containers>
      <file name="24942c8b-24b1-1f6a-2743-2b269d7b1918" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Routing.Configuration.BackupEndpointElement">
      <topicdata name="BackupEndpointElement" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Routing.Configuration.BackupEndpointElement" />
      <apidata name="BackupEndpointElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.BackupEndpointElement.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.BackupEndpointElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.ServiceModel.Routing.Configuration.BackupEndpointElement.#ctor" />
        <element api="P:System.ServiceModel.Routing.Configuration.BackupEndpointElement.EndpointName" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointElement" />
      </containers>
      <file name="1b2348a2-917f-f06f-97dd-c6dded650939" />
    </api>
    <api id="Methods.T:System.ServiceModel.Routing.Configuration.BackupEndpointElement">
      <topicdata name="BackupEndpointElement" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Routing.Configuration.BackupEndpointElement" />
      <apidata name="BackupEndpointElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.BackupEndpointElement.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointElement" />
      </containers>
      <file name="2d113ea5-f49f-7e54-680d-8c46e35fb003" />
    </api>
    <api id="Properties.T:System.ServiceModel.Routing.Configuration.BackupEndpointElement">
      <topicdata name="BackupEndpointElement" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Routing.Configuration.BackupEndpointElement" />
      <apidata name="BackupEndpointElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.BackupEndpointElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.BackupEndpointElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.ServiceModel.Routing.Configuration.BackupEndpointElement.EndpointName" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointElement" />
      </containers>
      <file name="e0088c18-4653-3663-b076-d42443023093" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.BackupEndpointElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointElement" ref="true" />
      </containers>
      <file name="875650fa-aba3-ecf0-0e65-bc6528eeffa6" />
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.BackupEndpointElement.EndpointName">
      <topicdata group="api" />
      <apidata name="EndpointName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EndpointName" />
      <setter name="set_EndpointName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>endpointName</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <nullValue />
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="IsRequired" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
      <file name="7c92707c-3aab-813a-92d5-0fd31e9a64b9" />
    </api>
    <api id="T:System.ServiceModel.Routing.Configuration.BackupListCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Routing.Configuration.BackupListCollection" />
      <apidata name="BackupListCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.BackupListCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationCollectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" ref="true" />
            </typeValue>
          </argument>
          <assignment name="AddItemName">
            <type api="T:System.String" ref="true" />
            <value>backupList</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="a81f1cc1-507c-147b-756a-20fe9f82aa66" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Routing.Configuration.BackupListCollection">
      <topicdata name="BackupListCollection" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Routing.Configuration.BackupListCollection" />
      <apidata name="BackupListCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.BackupListCollection.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.BackupListCollection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.ServiceModel.Routing.Configuration.BackupListCollection.Item(System.String)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="P:System.Configuration.ConfigurationElementCollection.AddElementName" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.BackupListCollection.BaseAdd">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseClear" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.BackupListCollection.BaseGet">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ClearElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.BackupListCollection.CreateNewElement">
          <element api="M:System.ServiceModel.Routing.Configuration.BackupListCollection.CreateNewElement" />
          <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElementCollection.ElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="P:System.Configuration.ConfigurationElementCollection.RemoveElementName" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SetReadOnly" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.ServiceModel.Routing.Configuration.BackupListCollection.#ctor" />
        <element api="M:System.ServiceModel.Routing.Configuration.BackupListCollection.Add(System.ServiceModel.Routing.Configuration.BackupEndpointCollection)" />
        <element api="M:System.ServiceModel.Routing.Configuration.BackupListCollection.Clear" />
        <element api="M:System.ServiceModel.Routing.Configuration.BackupListCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.BackupListCollection.Remove(System.ServiceModel.Routing.Configuration.BackupEndpointCollection)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupListCollection" />
      </containers>
      <file name="d3c983b7-576f-e041-825e-fd07941687d0" />
    </api>
    <api id="Methods.T:System.ServiceModel.Routing.Configuration.BackupListCollection">
      <topicdata name="BackupListCollection" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Routing.Configuration.BackupListCollection" />
      <apidata name="BackupListCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.BackupListCollection.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.BackupListCollection.BaseAdd">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseClear" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.BackupListCollection.BaseGet">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.BackupListCollection.CreateNewElement">
          <element api="M:System.ServiceModel.Routing.Configuration.BackupListCollection.CreateNewElement" />
          <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.ServiceModel.Routing.Configuration.BackupListCollection.Add(System.ServiceModel.Routing.Configuration.BackupEndpointCollection)" />
        <element api="M:System.ServiceModel.Routing.Configuration.BackupListCollection.Clear" />
        <element api="M:System.ServiceModel.Routing.Configuration.BackupListCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.BackupListCollection.Remove(System.ServiceModel.Routing.Configuration.BackupEndpointCollection)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupListCollection" />
      </containers>
      <file name="e59ed8fa-07ed-9916-8948-0e56dbcc5a99" />
    </api>
    <api id="Properties.T:System.ServiceModel.Routing.Configuration.BackupListCollection">
      <topicdata name="BackupListCollection" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Routing.Configuration.BackupListCollection" />
      <apidata name="BackupListCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.BackupListCollection.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.BackupListCollection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.ServiceModel.Routing.Configuration.BackupListCollection.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.Configuration.ConfigurationElementCollection.AddElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ClearElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.RemoveElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupListCollection" />
      </containers>
      <file name="d6cbb8d5-fa5a-2bdc-abf0-89cbf96c540e" />
    </api>
    <api id="Overload:System.ServiceModel.Routing.Configuration.BackupListCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Routing.Configuration.BackupListCollection" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
        <element api="P:System.ServiceModel.Routing.Configuration.BackupListCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupListCollection" ref="true" />
      </containers>
      <file name="bc1c268f-ed4f-e23d-5ea5-af5d80079db0" />
    </api>
    <api id="Overload:System.ServiceModel.Routing.Configuration.BackupListCollection.CreateNewElement">
      <topicdata name="CreateNewElement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Routing.Configuration.BackupListCollection" />
      <apidata name="CreateNewElement" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Routing.Configuration.BackupListCollection.CreateNewElement" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupListCollection" ref="true" />
      </containers>
      <file name="aeeac08a-0d6e-3566-a052-bb6ce247b2f4" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.BackupListCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupListCollection" ref="true" />
      </containers>
      <file name="a972812f-e4d3-7167-b297-6366acee0920" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.BackupListCollection.Add(System.ServiceModel.Routing.Configuration.BackupEndpointCollection)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupListCollection" ref="true" />
      </containers>
      <file name="d68154ff-5182-e48f-0862-82dbebc599d4" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.BackupListCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupListCollection" ref="true" />
      </containers>
      <file name="320c857a-ba84-d95a-027f-e49111aa9ceb" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.BackupListCollection.CreateNewElement">
      <topicdata group="api" />
      <apidata name="CreateNewElement" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.Routing.Configuration.BackupListCollection.CreateNewElement" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement">
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupListCollection" ref="true" />
      </containers>
      <file name="14d9b9ae-da1e-311a-348a-3ba617c616c2" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.BackupListCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <topicdata group="api" />
      <apidata name="GetElementKey" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="element">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupListCollection" ref="true" />
      </containers>
      <file name="f0efb923-dc33-9ace-d0f3-2e9d91301e5b" />
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.BackupListCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Routing.Configuration.BackupListCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupListCollection" ref="true" />
      </containers>
      <file name="a67b1f1a-c904-2e28-1f73-ddb114538819" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.BackupListCollection.Remove(System.ServiceModel.Routing.Configuration.BackupEndpointCollection)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.ServiceModel.Routing.Configuration.BackupEndpointCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.BackupListCollection" ref="true" />
      </containers>
      <file name="20ac494d-a381-696b-854d-2d11bd72ef50" />
    </api>
    <api id="T:System.ServiceModel.Routing.Configuration.FilterElement">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Routing.Configuration.FilterElement" />
      <apidata name="FilterElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.FilterElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
      </containers>
      <file name="d99143d3-a701-e9f6-892d-330dd0b4bdd5" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Routing.Configuration.FilterElement">
      <topicdata name="FilterElement" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Routing.Configuration.FilterElement" />
      <apidata name="FilterElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.FilterElement.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterElement.#ctor" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterElement.CustomType" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterElement.Filter1" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterElement.Filter2" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterData" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterType" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterElement.Name" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElement" />
      </containers>
      <file name="df79a3e6-0058-f9e8-ed63-ef32f1269cc3" />
    </api>
    <api id="Methods.T:System.ServiceModel.Routing.Configuration.FilterElement">
      <topicdata name="FilterElement" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Routing.Configuration.FilterElement" />
      <apidata name="FilterElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.FilterElement.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElement" />
      </containers>
      <file name="d63ea307-4f0e-bbd6-f408-c955ec027772" />
    </api>
    <api id="Properties.T:System.ServiceModel.Routing.Configuration.FilterElement">
      <topicdata name="FilterElement" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Routing.Configuration.FilterElement" />
      <apidata name="FilterElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.FilterElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterElement.CustomType" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterElement.Filter1" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterElement.Filter2" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterData" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterType" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterElement.Name" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElement" />
      </containers>
      <file name="d2dc89a4-6719-8cee-14fa-109dccefdebc" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElement" ref="true" />
      </containers>
      <file name="683a5763-31f3-82e2-ca98-b520f3f4ed7f" />
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.FilterElement.CustomType">
      <topicdata group="api" />
      <apidata name="CustomType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CustomType" />
      <setter name="set_CustomType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>customType</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <nullValue />
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
      <file name="5603bc88-33ad-47c6-6cad-f43a33960ca9" />
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.FilterElement.Filter1">
      <topicdata group="api" />
      <apidata name="Filter1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Filter1" />
      <setter name="set_Filter1" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>filter1</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <nullValue />
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
      <file name="d224c18b-423a-5162-56b4-f08a38865be4" />
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.FilterElement.Filter2">
      <topicdata group="api" />
      <apidata name="Filter2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Filter2" />
      <setter name="set_Filter2" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>filter2</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <nullValue />
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
      <file name="bfffd85c-e3d3-d7fa-2d64-df3e8aa2ad2a" />
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterData">
      <topicdata group="api" />
      <apidata name="FilterData" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FilterData" />
      <setter name="set_FilterData" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>filterData</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <nullValue />
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
      <file name="cb64132c-0965-8dd2-5a5d-982ffd974d6a" />
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.FilterElement.FilterType">
      <topicdata group="api" />
      <apidata name="FilterType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FilterType" />
      <setter name="set_FilterType" />
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.FilterType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>filterType</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <nullValue />
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="IsRequired" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
      <file name="bc5334ca-5a0c-821b-72e2-ca74eb850c73" />
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.FilterElement.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>name</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <nullValue />
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="None" />
              <field name="IsRequired" />
              <field name="IsKey" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
      <file name="54e3e82e-6c6c-5fb1-a478-1f7c90b0a45f" />
    </api>
    <api id="T:System.ServiceModel.Routing.Configuration.FilterElementCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Routing.Configuration.FilterElementCollection" />
      <apidata name="FilterElementCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationCollectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ServiceModel.Routing.Configuration.FilterElement" ref="true" />
            </typeValue>
          </argument>
          <assignment name="AddItemName">
            <type api="T:System.String" ref="true" />
            <value>filter</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="2f6ef7f3-6a5b-1ad4-76fc-2cd885e5b9ae" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Routing.Configuration.FilterElementCollection">
      <topicdata name="FilterElementCollection" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" />
      <apidata name="FilterElementCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterElementCollection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.ServiceModel.Routing.Configuration.FilterElementCollection.Item(System.Int32)" />
          <element api="P:System.ServiceModel.Routing.Configuration.FilterElementCollection.Item(System.String)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="P:System.Configuration.ConfigurationElementCollection.AddElementName" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterElementCollection.BaseAdd">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseClear" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterElementCollection.BaseGet">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ClearElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterElementCollection.CreateNewElement">
          <element api="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.CreateNewElement" />
          <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElementCollection.ElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsModified" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="P:System.Configuration.ConfigurationElementCollection.RemoveElementName" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SetReadOnly" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.#ctor" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.Add(System.ServiceModel.Routing.Configuration.FilterElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.Clear" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.IsReadOnly" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.Remove(System.ServiceModel.Routing.Configuration.FilterElement)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" />
      </containers>
      <file name="58bf1e43-f1b8-a2c5-8c0f-049a3a977d3e" />
    </api>
    <api id="Methods.T:System.ServiceModel.Routing.Configuration.FilterElementCollection">
      <topicdata name="FilterElementCollection" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" />
      <apidata name="FilterElementCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterElementCollection.BaseAdd">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseClear" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterElementCollection.BaseGet">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterElementCollection.CreateNewElement">
          <element api="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.CreateNewElement" />
          <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.Add(System.ServiceModel.Routing.Configuration.FilterElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.Clear" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.IsReadOnly" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.Remove(System.ServiceModel.Routing.Configuration.FilterElement)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" />
      </containers>
      <file name="632130ba-4259-b3c3-f8a2-4a5498d34f7d" />
    </api>
    <api id="Properties.T:System.ServiceModel.Routing.Configuration.FilterElementCollection">
      <topicdata name="FilterElementCollection" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" />
      <apidata name="FilterElementCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterElementCollection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.ServiceModel.Routing.Configuration.FilterElementCollection.Item(System.Int32)" />
          <element api="P:System.ServiceModel.Routing.Configuration.FilterElementCollection.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.Configuration.ConfigurationElementCollection.AddElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ClearElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.RemoveElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" />
      </containers>
      <file name="7fbf1a82-d7d0-9c76-2649-390392c329ea" />
    </api>
    <api id="Overload:System.ServiceModel.Routing.Configuration.FilterElementCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Routing.Configuration.FilterElementCollection" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterElementCollection.Item(System.Int32)" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterElementCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" ref="true" />
      </containers>
      <file name="5263954b-35ff-a4e2-c10b-b10e3e7eac72" />
    </api>
    <api id="Overload:System.ServiceModel.Routing.Configuration.FilterElementCollection.CreateNewElement">
      <topicdata name="CreateNewElement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Routing.Configuration.FilterElementCollection" />
      <apidata name="CreateNewElement" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.CreateNewElement" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" ref="true" />
      </containers>
      <file name="6fc6d2c9-67c6-1e87-40a8-e95ab5729c87" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" ref="true" />
      </containers>
      <file name="716ead6c-a117-a1d4-41be-73bdb90f857b" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.Add(System.ServiceModel.Routing.Configuration.FilterElement)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.ServiceModel.Routing.Configuration.FilterElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" ref="true" />
      </containers>
      <file name="d219642d-4aea-32ac-bb75-6d46453d177e" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" ref="true" />
      </containers>
      <file name="63c89602-1036-b42e-696b-f60f90c1936d" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.CreateNewElement">
      <topicdata group="api" />
      <apidata name="CreateNewElement" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.Routing.Configuration.FilterElementCollection.CreateNewElement" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement">
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" ref="true" />
      </containers>
      <file name="ffda573b-f504-48db-6236-6e864d289abd" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <topicdata group="api" />
      <apidata name="GetElementKey" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="element">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" ref="true" />
      </containers>
      <file name="f4574f01-6d3d-1d2d-2ad7-8c8dfbb3f45c" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)">
      <topicdata group="api" />
      <apidata name="IsElementRemovable" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)">
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="element">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" ref="true" />
      </containers>
      <file name="d3147301-32b5-525c-28b3-d576a5f498c0" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly">
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" ref="true" />
      </containers>
      <file name="fd24b743-fed9-6095-9b0b-199c799402d3" />
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.FilterElementCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Routing.Configuration.FilterElementCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" ref="true" />
      </containers>
      <file name="b2846823-00fc-9c83-e23e-1e3e21c71dd9" />
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.FilterElementCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Routing.Configuration.FilterElementCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" ref="true" />
      </containers>
      <file name="8b3eae31-8bfc-7424-cc3c-605a449a1c08" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterElementCollection.Remove(System.ServiceModel.Routing.Configuration.FilterElement)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.ServiceModel.Routing.Configuration.FilterElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" ref="true" />
      </containers>
      <file name="746cd7c2-f6db-c813-cf02-48ed4b3af732" />
    </api>
    <api id="T:System.ServiceModel.Routing.Configuration.FilterTableCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Routing.Configuration.FilterTableCollection" />
      <apidata name="FilterTableCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationCollectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" ref="true" />
            </typeValue>
          </argument>
          <assignment name="AddItemName">
            <type api="T:System.String" ref="true" />
            <value>filterTable</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="7b076919-ceab-f81f-4267-cbca8432ab81" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Routing.Configuration.FilterTableCollection">
      <topicdata name="FilterTableCollection" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Routing.Configuration.FilterTableCollection" />
      <apidata name="FilterTableCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterTableCollection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.ServiceModel.Routing.Configuration.FilterTableCollection.Item(System.String)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="P:System.Configuration.ConfigurationElementCollection.AddElementName" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterTableCollection.BaseAdd">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseClear" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterTableCollection.BaseGet">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ClearElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterTableCollection.CreateNewElement">
          <element api="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.CreateNewElement" />
          <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElementCollection.ElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="P:System.Configuration.ConfigurationElementCollection.RemoveElementName" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SetReadOnly" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.#ctor" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.Add(System.ServiceModel.Routing.Configuration.FilterTableEntryCollection)" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.Clear" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.Remove(System.ServiceModel.Routing.Configuration.FilterTableEntryCollection)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableCollection" />
      </containers>
      <file name="dedf50e0-5da4-4525-8ebd-558bf506bbe7" />
    </api>
    <api id="Methods.T:System.ServiceModel.Routing.Configuration.FilterTableCollection">
      <topicdata name="FilterTableCollection" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Routing.Configuration.FilterTableCollection" />
      <apidata name="FilterTableCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterTableCollection.BaseAdd">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseClear" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterTableCollection.BaseGet">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterTableCollection.CreateNewElement">
          <element api="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.CreateNewElement" />
          <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.Add(System.ServiceModel.Routing.Configuration.FilterTableEntryCollection)" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.Clear" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.Remove(System.ServiceModel.Routing.Configuration.FilterTableEntryCollection)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableCollection" />
      </containers>
      <file name="c2bbfeb7-3114-8715-8c6d-cafaa4a4f09f" />
    </api>
    <api id="Properties.T:System.ServiceModel.Routing.Configuration.FilterTableCollection">
      <topicdata name="FilterTableCollection" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Routing.Configuration.FilterTableCollection" />
      <apidata name="FilterTableCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterTableCollection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.ServiceModel.Routing.Configuration.FilterTableCollection.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.Configuration.ConfigurationElementCollection.AddElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ClearElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.RemoveElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableCollection" />
      </containers>
      <file name="a05699d9-bf28-1adc-ced2-f17a76f3b09f" />
    </api>
    <api id="Overload:System.ServiceModel.Routing.Configuration.FilterTableCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Routing.Configuration.FilterTableCollection" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterTableCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableCollection" ref="true" />
      </containers>
      <file name="515c0d1d-12f6-b740-f012-ac6f6facd34f" />
    </api>
    <api id="Overload:System.ServiceModel.Routing.Configuration.FilterTableCollection.CreateNewElement">
      <topicdata name="CreateNewElement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Routing.Configuration.FilterTableCollection" />
      <apidata name="CreateNewElement" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.CreateNewElement" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableCollection" ref="true" />
      </containers>
      <file name="d6a779e0-0ab9-ac43-2a42-f2a4307ed593" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableCollection" ref="true" />
      </containers>
      <file name="5fa2e335-d60a-d65e-0afa-26316531090b" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.Add(System.ServiceModel.Routing.Configuration.FilterTableEntryCollection)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableCollection" ref="true" />
      </containers>
      <file name="5895da4c-60a7-dc21-593d-4cb2a9250152" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableCollection" ref="true" />
      </containers>
      <file name="41d65c16-6977-5146-05ff-e973afcbac9c" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.CreateNewElement">
      <topicdata group="api" />
      <apidata name="CreateNewElement" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.Routing.Configuration.FilterTableCollection.CreateNewElement" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement">
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableCollection" ref="true" />
      </containers>
      <file name="849367e2-2b9d-5420-3ebf-97f4b708c961" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <topicdata group="api" />
      <apidata name="GetElementKey" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="element">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableCollection" ref="true" />
      </containers>
      <file name="d3f90e97-be96-d1ae-fe2a-823b4671561c" />
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.FilterTableCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Routing.Configuration.FilterTableCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableCollection" ref="true" />
      </containers>
      <file name="9ef4ebe9-f61b-0a86-8c04-9b6181592bb5" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterTableCollection.Remove(System.ServiceModel.Routing.Configuration.FilterTableEntryCollection)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableCollection" ref="true" />
      </containers>
      <file name="54d6de53-00a0-7e8b-073e-8756e45f5e00" />
    </api>
    <api id="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" />
      <apidata name="FilterTableEntryCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationCollectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
      <file name="e012925f-331d-35df-f524-ba4f1fbdd52d" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection">
      <topicdata name="FilterTableEntryCollection" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" />
      <apidata name="FilterTableEntryCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="P:System.Configuration.ConfigurationElementCollection.AddElementName" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.BaseAdd">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseClear" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.BaseGet">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ClearElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.CreateNewElement">
          <element api="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.CreateNewElement" />
          <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElementCollection.ElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="P:System.Configuration.ConfigurationElementCollection.RemoveElementName" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SetReadOnly" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.#ctor" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.Add(System.ServiceModel.Routing.Configuration.FilterTableEntryElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.Clear" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.Name" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.Remove(System.ServiceModel.Routing.Configuration.FilterTableEntryElement)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" />
      </containers>
      <file name="161b70d5-70c4-54ce-6ff0-2092e5e17101" />
    </api>
    <api id="Methods.T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection">
      <topicdata name="FilterTableEntryCollection" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" />
      <apidata name="FilterTableEntryCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.BaseAdd">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseClear" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.BaseGet">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.CreateNewElement">
          <element api="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.CreateNewElement" />
          <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.Add(System.ServiceModel.Routing.Configuration.FilterTableEntryElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.Clear" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.Remove(System.ServiceModel.Routing.Configuration.FilterTableEntryElement)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" />
      </containers>
      <file name="66318013-3804-2c10-6971-6e6e41307cd9" />
    </api>
    <api id="Properties.T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection">
      <topicdata name="FilterTableEntryCollection" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" />
      <apidata name="FilterTableEntryCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.Configuration.ConfigurationElementCollection.AddElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ClearElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.RemoveElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.Name" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" />
      </containers>
      <file name="65111f10-c835-1a3f-793e-31fcdca47d02" />
    </api>
    <api id="Overload:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.CreateNewElement">
      <topicdata name="CreateNewElement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" />
      <apidata name="CreateNewElement" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.CreateNewElement" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" ref="true" />
      </containers>
      <file name="71bca050-11a2-6a44-13a4-6b17dfb6771a" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" ref="true" />
      </containers>
      <file name="ba54d157-e2a7-5a73-587f-3e85378b9be2" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.Add(System.ServiceModel.Routing.Configuration.FilterTableEntryElement)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" ref="true" />
      </containers>
      <file name="ab94139f-ba51-feea-ab2d-9596900ee18e" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" ref="true" />
      </containers>
      <file name="30e871ea-b9ae-ad16-c35c-d17214f11d1f" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.CreateNewElement">
      <topicdata group="api" />
      <apidata name="CreateNewElement" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.CreateNewElement" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement">
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" ref="true" />
      </containers>
      <file name="955a3214-3ca0-6457-1e76-1b3ec830c835" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <topicdata group="api" />
      <apidata name="GetElementKey" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="element">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" ref="true" />
      </containers>
      <file name="abbe28e3-b5a7-6db4-c11c-417733a8f745" />
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>name</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <nullValue />
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="None" />
              <field name="IsRequired" />
              <field name="IsKey" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
      <file name="e991ada6-fbb1-a0cf-310d-915eb2cd60d5" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection.Remove(System.ServiceModel.Routing.Configuration.FilterTableEntryElement)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryCollection" ref="true" />
      </containers>
      <file name="c9121f17-a6e5-9d99-f1f1-de412dc03849" />
    </api>
    <api id="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement" />
      <apidata name="FilterTableEntryElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
      </containers>
      <file name="bd72e999-1945-8f68-8afe-d791adfd1574" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement">
      <topicdata name="FilterTableEntryElement" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement" />
      <apidata name="FilterTableEntryElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.#ctor" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.BackupList" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.EndpointName" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.FilterName" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.Priority" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement" />
      </containers>
      <file name="b9f816b2-d2b0-1d67-db0f-ade10f8e200a" />
    </api>
    <api id="Methods.T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement">
      <topicdata name="FilterTableEntryElement" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement" />
      <apidata name="FilterTableEntryElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement" />
      </containers>
      <file name="2a7b7b37-6507-42bf-f5a0-58cc52a927ba" />
    </api>
    <api id="Properties.T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement">
      <topicdata name="FilterTableEntryElement" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement" />
      <apidata name="FilterTableEntryElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.BackupList" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.EndpointName" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.FilterName" />
        <element api="P:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.Priority" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement" />
      </containers>
      <file name="a85ef8ef-9ffc-241e-582c-697dd4f279a1" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement" ref="true" />
      </containers>
      <file name="25476395-8d8e-dfb6-a5e3-484ae99b540b" />
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.BackupList">
      <topicdata group="api" />
      <apidata name="BackupList" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BackupList" />
      <setter name="set_BackupList" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>backupList</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <nullValue />
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
      <file name="41d0f4ae-165c-2514-ebcd-062326aaf3ae" />
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.EndpointName">
      <topicdata group="api" />
      <apidata name="EndpointName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EndpointName" />
      <setter name="set_EndpointName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>endpointName</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <nullValue />
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="None" />
              <field name="IsRequired" />
              <field name="IsKey" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
      <file name="9984a8c1-8303-6300-b0fc-93004837bbff" />
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.FilterName">
      <topicdata group="api" />
      <apidata name="FilterName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FilterName" />
      <setter name="set_FilterName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>filterName</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <nullValue />
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="None" />
              <field name="IsRequired" />
              <field name="IsKey" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
      <file name="1f3b247f-ac87-0a47-94a3-0f33c87b4a12" />
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.FilterTableEntryElement.Priority">
      <topicdata group="api" />
      <apidata name="Priority" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Priority" />
      <setter name="set_Priority" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableEntryElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>priority</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
      <file name="ec2f9c9b-2788-5654-3a0d-682092aa9991" />
    </api>
    <api id="T:System.ServiceModel.Routing.Configuration.FilterType">
      <topicdata group="api" />
      <apidata name="FilterType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.Routing.Configuration.FilterType.Action" />
        <element api="F:System.ServiceModel.Routing.Configuration.FilterType.EndpointAddress" />
        <element api="F:System.ServiceModel.Routing.Configuration.FilterType.PrefixEndpointAddress" />
        <element api="F:System.ServiceModel.Routing.Configuration.FilterType.And" />
        <element api="F:System.ServiceModel.Routing.Configuration.FilterType.Custom" />
        <element api="F:System.ServiceModel.Routing.Configuration.FilterType.EndpointName" />
        <element api="F:System.ServiceModel.Routing.Configuration.FilterType.MatchAll" />
        <element api="F:System.ServiceModel.Routing.Configuration.FilterType.XPath" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
      </containers>
      <file name="29e749f2-c862-7e68-dec2-47ba32d5c21c" />
    </api>
    <api id="F:System.ServiceModel.Routing.Configuration.FilterType.Action">
      <topicdata group="api" notopic="" />
      <apidata name="Action" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.FilterType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterType" ref="false" />
      </containers>
      <file name="9fbe26a7-e3e6-1877-a367-b4239954aa8a" />
    </api>
    <api id="F:System.ServiceModel.Routing.Configuration.FilterType.And">
      <topicdata group="api" notopic="" />
      <apidata name="And" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.FilterType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterType" ref="false" />
      </containers>
      <file name="72a393d0-2730-0937-ba6f-971e5ddb05b7" />
    </api>
    <api id="F:System.ServiceModel.Routing.Configuration.FilterType.Custom">
      <topicdata group="api" notopic="" />
      <apidata name="Custom" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.FilterType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterType" ref="false" />
      </containers>
      <file name="842a0a9b-b2a2-59b6-b248-7322d064db58" />
    </api>
    <api id="F:System.ServiceModel.Routing.Configuration.FilterType.EndpointAddress">
      <topicdata group="api" notopic="" />
      <apidata name="EndpointAddress" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.FilterType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterType" ref="false" />
      </containers>
      <file name="eadede88-75c1-1bf2-7ee0-24f727872dbc" />
    </api>
    <api id="F:System.ServiceModel.Routing.Configuration.FilterType.EndpointName">
      <topicdata group="api" notopic="" />
      <apidata name="EndpointName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.FilterType" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterType" ref="false" />
      </containers>
      <file name="dcc330a2-3d36-6dfb-6491-e5bd60d50f22" />
    </api>
    <api id="F:System.ServiceModel.Routing.Configuration.FilterType.MatchAll">
      <topicdata group="api" notopic="" />
      <apidata name="MatchAll" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.FilterType" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterType" ref="false" />
      </containers>
      <file name="bc5fbe5d-8cea-ea5e-1d5f-4d236a3878d8" />
    </api>
    <api id="F:System.ServiceModel.Routing.Configuration.FilterType.PrefixEndpointAddress">
      <topicdata group="api" notopic="" />
      <apidata name="PrefixEndpointAddress" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.FilterType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterType" ref="false" />
      </containers>
      <file name="fa021258-2261-d35f-992b-df29f26416ac" />
    </api>
    <api id="F:System.ServiceModel.Routing.Configuration.FilterType.XPath">
      <topicdata group="api" notopic="" />
      <apidata name="XPath" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.FilterType" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.FilterType" ref="false" />
      </containers>
      <file name="7405c3fa-414a-6c89-cecf-45185b6b4694" />
    </api>
    <api id="T:System.ServiceModel.Routing.Configuration.NamespaceElement">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Routing.Configuration.NamespaceElement" />
      <apidata name="NamespaceElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.NamespaceElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
      </containers>
      <file name="2aae4184-2746-292c-159e-6c28402a4a53" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Routing.Configuration.NamespaceElement">
      <topicdata name="NamespaceElement" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Routing.Configuration.NamespaceElement" />
      <apidata name="NamespaceElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.NamespaceElement.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.NamespaceElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.ServiceModel.Routing.Configuration.NamespaceElement.#ctor" />
        <element api="P:System.ServiceModel.Routing.Configuration.NamespaceElement.Namespace" />
        <element api="P:System.ServiceModel.Routing.Configuration.NamespaceElement.Prefix" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElement" />
      </containers>
      <file name="aa2a848c-d604-9de9-e80f-15243b60df19" />
    </api>
    <api id="Methods.T:System.ServiceModel.Routing.Configuration.NamespaceElement">
      <topicdata name="NamespaceElement" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Routing.Configuration.NamespaceElement" />
      <apidata name="NamespaceElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.NamespaceElement.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsModified" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElement" />
      </containers>
      <file name="68676653-1fee-dad4-ae65-75abff25f29b" />
    </api>
    <api id="Properties.T:System.ServiceModel.Routing.Configuration.NamespaceElement">
      <topicdata name="NamespaceElement" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Routing.Configuration.NamespaceElement" />
      <apidata name="NamespaceElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.NamespaceElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.NamespaceElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.ServiceModel.Routing.Configuration.NamespaceElement.Namespace" />
        <element api="P:System.ServiceModel.Routing.Configuration.NamespaceElement.Prefix" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElement" />
      </containers>
      <file name="71cff95f-aedf-20f7-a002-1a8b2961717a" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.NamespaceElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElement" ref="true" />
      </containers>
      <file name="1dbd4bc9-49da-92ec-0848-3b2ab597fd63" />
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.NamespaceElement.Namespace">
      <topicdata group="api" />
      <apidata name="Namespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Namespace" />
      <setter name="set_Namespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>namespace</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <nullValue />
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="IsRequired" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
      <file name="410402ab-8a7a-2da2-a535-40be45aa05e3" />
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.NamespaceElement.Prefix">
      <topicdata group="api" />
      <apidata name="Prefix" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Prefix" />
      <setter name="set_Prefix" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>prefix</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <nullValue />
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="None" />
              <field name="IsRequired" />
              <field name="IsKey" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
      <file name="e8055390-624c-eee3-df3c-238bce43e733" />
    </api>
    <api id="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" />
      <apidata name="NamespaceElementCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationCollectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElement" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
      <file name="4cecdaa3-a497-ad72-9046-0561670303b6" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection">
      <topicdata name="NamespaceElementCollection" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" />
      <apidata name="NamespaceElementCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Item(System.Int32)" />
          <element api="P:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Item(System.String)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="P:System.Configuration.ConfigurationElementCollection.AddElementName" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.BaseAdd">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseClear" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.BaseGet">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ClearElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.CreateNewElement">
          <element api="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.CreateNewElement" />
          <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElementCollection.ElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="P:System.Configuration.ConfigurationElementCollection.RemoveElementName" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SetReadOnly" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.#ctor" />
        <element api="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Add(System.ServiceModel.Routing.Configuration.NamespaceElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Clear" />
        <element api="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Remove(System.ServiceModel.Routing.Configuration.NamespaceElement)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" />
      </containers>
      <file name="ff928984-c9a7-a3e0-7c7b-11c940a246da" />
    </api>
    <api id="Methods.T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection">
      <topicdata name="NamespaceElementCollection" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" />
      <apidata name="NamespaceElementCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.BaseAdd">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement,System.Boolean)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Int32,System.Configuration.ConfigurationElement)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseClear" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.BaseGet">
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Int32)" />
          <element api="M:System.Configuration.ConfigurationElementCollection.BaseGet(System.Object)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetAllKeys" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIndexOf(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseIsRemoved(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.BaseRemoveAt(System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CopyTo(System.Configuration.ConfigurationElement[],System.Int32)" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.CreateNewElement">
          <element api="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.CreateNewElement" />
          <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElementCollection.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetEnumerator" />
        <element api="M:System.Configuration.ConfigurationElementCollection.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementName(System.String)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsElementRemovable(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElementCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Configuration.ConfigurationElementCollection.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Add(System.ServiceModel.Routing.Configuration.NamespaceElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Clear" />
        <element api="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.GetElementKey(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Remove(System.ServiceModel.Routing.Configuration.NamespaceElement)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" />
      </containers>
      <file name="3df0c0d3-fc54-3c8b-f29f-7e23e98e0ff1" />
    </api>
    <api id="Properties.T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection">
      <topicdata name="NamespaceElementCollection" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" />
      <apidata name="NamespaceElementCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Item(System.Int32)" />
          <element api="P:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.Configuration.ConfigurationElementCollection.AddElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ClearElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.CollectionType" />
        <element api="P:System.Configuration.ConfigurationElementCollection.Count" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.EmitClear" />
        <element api="P:System.Configuration.ConfigurationElementCollection.IsSynchronized" />
        <element api="P:System.Configuration.ConfigurationElementCollection.RemoveElementName" />
        <element api="P:System.Configuration.ConfigurationElementCollection.SyncRoot" />
        <element api="P:System.Configuration.ConfigurationElementCollection.ThrowOnDuplicate" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" />
      </containers>
      <file name="867547b7-a6a5-6ff0-9151-d0039dcb4432" />
    </api>
    <api id="Overload:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Item">
      <topicdata name="Item" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" />
      <apidata name="Item" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
        <element api="P:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Item(System.Int32)" />
        <element api="P:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" ref="true" />
      </containers>
      <file name="c6a0f1b9-112e-de0a-c5ce-527ccef3d19d" />
    </api>
    <api id="Overload:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.CreateNewElement">
      <topicdata name="CreateNewElement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" />
      <apidata name="CreateNewElement" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.CreateNewElement" />
        <element api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" ref="true" />
      </containers>
      <file name="22087c03-7124-da58-f62b-2a6afc423ce7" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" ref="true" />
      </containers>
      <file name="22db15e9-d277-b22d-c45a-82c1572581d1" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Add(System.ServiceModel.Routing.Configuration.NamespaceElement)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" ref="true" />
      </containers>
      <file name="e541c270-f851-ac06-4bc5-ac4a120bf171" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" ref="true" />
      </containers>
      <file name="e004e3a2-0ac0-8734-849f-331e7f635abd" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.CreateNewElement">
      <topicdata group="api" />
      <apidata name="CreateNewElement" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.CreateNewElement" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElementCollection.CreateNewElement">
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Configuration.ConfigurationElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" ref="true" />
      </containers>
      <file name="a732918a-24d8-3a98-4c4b-1cbd5ce7d33b" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <topicdata group="api" />
      <apidata name="GetElementKey" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Configuration.ConfigurationElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
          <type api="T:System.Configuration.ConfigurationElementCollection" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="element">
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" ref="true" />
      </containers>
      <file name="c45c12cb-e4eb-e5eb-b280-a3a3a85a7100" />
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" ref="true" />
      </containers>
      <file name="80cae468-f1cc-a0d6-dbb9-6021cc12d65b" />
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Item" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElement" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" ref="true" />
      </containers>
      <file name="7f98af9a-4f99-3bea-c409-6da1405bee1c" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.NamespaceElementCollection.Remove(System.ServiceModel.Routing.Configuration.NamespaceElement)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="element">
          <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElement" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" ref="true" />
      </containers>
      <file name="93ade41c-9bd8-4b79-566b-e69fd8fcb629" />
    </api>
    <api id="T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement" />
      <apidata name="RoutingExtensionElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Configuration.BehaviorExtensionElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ServiceModelConfigurationElement" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
      </containers>
      <file name="f0245f53-3af7-7b81-0602-55ec89f93c04" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement">
      <topicdata name="RoutingExtensionElement" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement" />
      <apidata name="RoutingExtensionElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.#ctor" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Configuration.ServiceModelExtensionElement.ConfigurationElementName" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelExtensionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)" />
        <element api="M:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.#ctor" />
        <element api="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.BehaviorType" />
        <element api="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.EnsureOrderedDispatch" />
        <element api="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.FilterTableName" />
        <element api="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RouteOnHeadersOnly" />
        <element api="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.SoapProcessingEnabled" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement" />
      </containers>
      <file name="4a5ed6ed-ddec-fea0-3d08-d6fcf764baa0" />
    </api>
    <api id="Methods.T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement">
      <topicdata name="RoutingExtensionElement" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement" />
      <apidata name="RoutingExtensionElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.#ctor" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelExtensionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement" />
      </containers>
      <file name="f270f5be-4993-51f5-118d-6ecc63aadb3d" />
    </api>
    <api id="Properties.T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement">
      <topicdata name="RoutingExtensionElement" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement" />
      <apidata name="RoutingExtensionElement" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.ServiceModel.Configuration.ServiceModelExtensionElement.ConfigurationElementName" />
        <element api="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.BehaviorType" />
        <element api="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.EnsureOrderedDispatch" />
        <element api="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.FilterTableName" />
        <element api="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RouteOnHeadersOnly" />
        <element api="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.SoapProcessingEnabled" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement" />
      </containers>
      <file name="3019c8e9-b3cb-b07a-70e1-b2c31c86a916" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement" ref="true" />
      </containers>
      <file name="e5fc833b-bc38-1bdb-e2c3-815971a4179b" />
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.BehaviorType">
      <topicdata group="api" />
      <apidata name="BehaviorType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Configuration.BehaviorExtensionElement.BehaviorType">
          <type api="T:System.ServiceModel.Configuration.BehaviorExtensionElement" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_BehaviorType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement" ref="true" />
      </containers>
      <file name="ba0614d3-59ed-852d-db58-984f21f83df9" />
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.EnsureOrderedDispatch">
      <topicdata group="api" />
      <apidata name="EnsureOrderedDispatch" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EnsureOrderedDispatch" />
      <setter name="set_EnsureOrderedDispatch" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ensureOrderedDispatch</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="2d786be5-b879-e836-8f23-4b61f1cbff0e" />
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.FilterTableName">
      <topicdata group="api" />
      <apidata name="FilterTableName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FilterTableName" />
      <setter name="set_FilterTableName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>filterTableName</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.String" ref="true" />
            <nullValue />
          </assignment>
        </attribute>
      </attributes>
      <file name="b8a79946-0fca-ae7d-3dee-f0d504334695" />
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.RouteOnHeadersOnly">
      <topicdata group="api" />
      <apidata name="RouteOnHeadersOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RouteOnHeadersOnly" />
      <setter name="set_RouteOnHeadersOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>routeOnHeadersOnly</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
      <file name="e845056d-f397-e00d-8d2f-504899291384" />
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.RoutingExtensionElement.SoapProcessingEnabled">
      <topicdata group="api" />
      <apidata name="SoapProcessingEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SoapProcessingEnabled" />
      <setter name="set_SoapProcessingEnabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.RoutingExtensionElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>soapProcessingEnabled</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="0ac0a22b-d812-9d24-c83f-2b2b49b32fec" />
    </api>
    <api id="T:System.ServiceModel.Routing.Configuration.RoutingSection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Routing.Configuration.RoutingSection" />
      <apidata name="RoutingSection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.RoutingSection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationSection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
      </containers>
      <file name="8e1e37ea-73de-e869-138c-5eaaa5e93c8b" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Routing.Configuration.RoutingSection">
      <topicdata name="RoutingSection" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Routing.Configuration.RoutingSection" />
      <apidata name="RoutingSection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.RoutingSection.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.RoutingSection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationSection.GetRuntimeObject" />
        <element api="M:System.Configuration.ConfigurationSection.IsModified" />
        <element api="M:System.Configuration.ConfigurationSection.ResetModified" />
        <element api="P:System.Configuration.ConfigurationSection.SectionInformation" />
        <element api="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)" />
        <element api="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)" />
        <element api="M:System.ServiceModel.Routing.Configuration.RoutingSection.#ctor" />
        <element api="P:System.ServiceModel.Routing.Configuration.RoutingSection.BackupLists" />
        <element api="M:System.ServiceModel.Routing.Configuration.RoutingSection.CreateFilterTable(System.String)" />
        <element api="P:System.ServiceModel.Routing.Configuration.RoutingSection.Filters" />
        <element api="P:System.ServiceModel.Routing.Configuration.RoutingSection.FilterTables" />
        <element api="P:System.ServiceModel.Routing.Configuration.RoutingSection.NamespaceTable" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.RoutingSection" />
      </containers>
      <file name="af6eddff-622f-a1ce-1e9c-5f88c6479adb" />
    </api>
    <api id="Methods.T:System.ServiceModel.Routing.Configuration.RoutingSection">
      <topicdata name="RoutingSection" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Routing.Configuration.RoutingSection" />
      <apidata name="RoutingSection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.RoutingSection.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationSection.GetRuntimeObject" />
        <element api="M:System.Configuration.ConfigurationSection.IsModified" />
        <element api="M:System.Configuration.ConfigurationSection.ResetModified" />
        <element api="M:System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)" />
        <element api="M:System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)" />
        <element api="M:System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)" />
        <element api="M:System.ServiceModel.Routing.Configuration.RoutingSection.CreateFilterTable(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.RoutingSection" />
      </containers>
      <file name="da9975c3-85ea-757c-8335-129a48aa2e49" />
    </api>
    <api id="Properties.T:System.ServiceModel.Routing.Configuration.RoutingSection">
      <topicdata name="RoutingSection" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Routing.Configuration.RoutingSection" />
      <apidata name="RoutingSection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.RoutingSection.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.RoutingSection.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.Configuration.ConfigurationSection.SectionInformation" />
        <element api="P:System.ServiceModel.Routing.Configuration.RoutingSection.BackupLists" />
        <element api="P:System.ServiceModel.Routing.Configuration.RoutingSection.Filters" />
        <element api="P:System.ServiceModel.Routing.Configuration.RoutingSection.FilterTables" />
        <element api="P:System.ServiceModel.Routing.Configuration.RoutingSection.NamespaceTable" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.RoutingSection" />
      </containers>
      <file name="05ea2d0c-7199-2a32-2345-34b211c38fd7" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.RoutingSection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.RoutingSection" ref="true" />
      </containers>
      <file name="adc848f6-f0a8-2f7c-0e3d-8a0f4cc48b24" />
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.RoutingSection.BackupLists">
      <topicdata group="api" />
      <apidata name="BackupLists" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BackupLists" />
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.BackupListCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.RoutingSection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>backupLists</value>
          </argument>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
      <file name="24b2623a-04ca-b18c-7e31-7053adbe8933" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.RoutingSection.CreateFilterTable(System.String)">
      <topicdata group="api" />
      <apidata name="CreateFilterTable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.RoutingSection" ref="true" />
      </containers>
      <file name="06bc67ac-65ac-e8dc-8b24-b2298c251bac" />
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.RoutingSection.Filters">
      <topicdata group="api" />
      <apidata name="Filters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Filters" />
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.FilterElementCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.RoutingSection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>filters</value>
          </argument>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
      <file name="0d951507-0277-5e87-8625-551a1dc4a1eb" />
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.RoutingSection.FilterTables">
      <topicdata group="api" />
      <apidata name="FilterTables" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FilterTables" />
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.FilterTableCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.RoutingSection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>filterTables</value>
          </argument>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
      <file name="32f1a609-9e84-7376-a8d8-21a40e0f9fd6" />
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.RoutingSection.NamespaceTable">
      <topicdata group="api" />
      <apidata name="NamespaceTable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NamespaceTable" />
      <returns>
        <type api="T:System.ServiceModel.Routing.Configuration.NamespaceElementCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.RoutingSection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>namespaceTable</value>
          </argument>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
      <file name="d88dab2a-cd1f-946d-0f27-02d923c23bb3" />
    </api>
    <api id="T:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement" />
      <apidata name="SoapProcessingExtensionElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Configuration.BehaviorExtensionElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ServiceModelExtensionElement" ref="true" />
          <type api="T:System.ServiceModel.Configuration.ServiceModelConfigurationElement" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
      </containers>
      <file name="04fa15ee-1352-2f2c-8422-896dffc37424" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement">
      <topicdata name="SoapProcessingExtensionElement" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement" />
      <apidata name="SoapProcessingExtensionElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)" />
        <element api="P:System.ServiceModel.Configuration.ServiceModelExtensionElement.ConfigurationElementName" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelExtensionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelExtensionElement.IsModified" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelExtensionElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelExtensionElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.#ctor" />
        <element api="P:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.BehaviorType" />
        <element api="M:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.CreateBehavior" />
        <element api="P:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.ProcessMessages" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement" />
      </containers>
      <file name="72ec5be3-5914-baf3-614e-e9f6164e8192" />
    </api>
    <api id="Methods.T:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement">
      <topicdata name="SoapProcessingExtensionElement" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement" />
      <apidata name="SoapProcessingExtensionElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.#ctor" />
      <elements>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.Equals(System.Object)" />
        <element api="M:System.Configuration.ConfigurationElement.GetHashCode" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.Init" />
        <element api="M:System.Configuration.ConfigurationElement.InitializeDefault" />
        <element api="M:System.Configuration.ConfigurationElement.IsReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)" />
        <element api="M:System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.PostDeserialize" />
        <element api="M:System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)" />
        <element api="M:System.Configuration.ConfigurationElement.ResetModified" />
        <element api="M:System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)" />
        <element api="M:System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)" />
        <element api="M:System.Configuration.ConfigurationElement.SetReadOnly" />
        <element api="M:System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelExtensionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelExtensionElement.IsModified" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelExtensionElement.Reset(System.Configuration.ConfigurationElement)" />
        <element api="M:System.ServiceModel.Configuration.ServiceModelExtensionElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)" />
        <element api="M:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.CreateBehavior" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement" />
      </containers>
      <file name="befa4db8-c8e0-8192-420a-89a80b80c774" />
    </api>
    <api id="Properties.T:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement">
      <topicdata name="SoapProcessingExtensionElement" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement" />
      <apidata name="SoapProcessingExtensionElement" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.#ctor" />
      <elements>
        <element api="P:System.Configuration.ConfigurationElement.CurrentConfiguration" />
        <element api="P:System.Configuration.ConfigurationElement.ElementInformation" />
        <element api="P:System.Configuration.ConfigurationElement.ElementProperty" />
        <element api="P:System.Configuration.ConfigurationElement.EvaluationContext" />
        <element api="P:System.Configuration.ConfigurationElement.HasContext" />
        <element api="Overload:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.Item">
          <element api="P:System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)" />
          <element api="P:System.Configuration.ConfigurationElement.Item(System.String)" />
        </element>
        <element api="P:System.Configuration.ConfigurationElement.LockAllAttributesExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAllElementsExcept" />
        <element api="P:System.Configuration.ConfigurationElement.LockAttributes" />
        <element api="P:System.Configuration.ConfigurationElement.LockElements" />
        <element api="P:System.Configuration.ConfigurationElement.LockItem" />
        <element api="P:System.Configuration.ConfigurationElement.Properties" />
        <element api="P:System.ServiceModel.Configuration.ServiceModelExtensionElement.ConfigurationElementName" />
        <element api="P:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.BehaviorType" />
        <element api="P:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.ProcessMessages" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement" />
      </containers>
      <file name="d244515c-5160-0338-1ea5-a43f1a785990" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement" ref="true" />
      </containers>
      <file name="f93d8d6e-5264-e82e-e188-80e6252b6e5d" />
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.BehaviorType">
      <topicdata group="api" />
      <apidata name="BehaviorType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Configuration.BehaviorExtensionElement.BehaviorType">
          <type api="T:System.ServiceModel.Configuration.BehaviorExtensionElement" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_BehaviorType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement" ref="true" />
      </containers>
      <file name="a5352877-a418-6e02-f5ef-cea1c3d600de" />
    </api>
    <api id="M:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.CreateBehavior">
      <topicdata group="api" />
      <apidata name="CreateBehavior" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Configuration.BehaviorExtensionElement.CreateBehavior">
          <type api="T:System.ServiceModel.Configuration.BehaviorExtensionElement" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement" ref="true" />
      </containers>
      <file name="46771086-bd69-7878-1525-34b073445bc4" />
    </api>
    <api id="P:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement.ProcessMessages">
      <topicdata group="api" />
      <apidata name="ProcessMessages" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ProcessMessages" />
      <setter name="set_ProcessMessages" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Routing.Configuration" />
        <type api="T:System.ServiceModel.Routing.Configuration.SoapProcessingExtensionElement" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>processMessages</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="Options">
            <type api="T:System.Configuration.ConfigurationPropertyOptions" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </assignment>
        </attribute>
      </attributes>
      <file name="7f34466a-7ccd-02ba-089b-2c62cc6965ea" />
    </api>
  </apis>
</reflection>