<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="FSharp.Core">
      <assemblydata version="4.4.0.0" culture="" key="002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>2</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.FSharp</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.FSharp.Core</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.FSharp.Collections</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.FSharp.Control</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.FSharp.Linq.QueryRunExtensions.LowPriority</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.FSharp.Linq.QueryRunExtensions.HighPriority</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>FSharp.Core.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>FSharp.Core.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>FSharp.Core.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® Visual Studio® [Version] [Release]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation. All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.4.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.40.23020.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.4.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.4.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\FinalPublicKey.snk</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:Microsoft.FSharp.Linq">
      <topicdata group="api" />
      <apidata name="Microsoft.FSharp.Linq" group="namespace" />
      <elements>
        <element api="T:Microsoft.FSharp.Linq.QuerySource`2" />
        <element api="T:Microsoft.FSharp.Linq.QueryBuilder" />
        <element api="T:Microsoft.FSharp.Linq.NullableModule" />
        <element api="T:Microsoft.FSharp.Linq.NullableOperators" />
      </elements>
      <file name="b3a5689f-7894-4e99-dba3-9486de791cee" />
    </api>
    <api id="T:Microsoft.FSharp.Linq.NullableModule">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Linq.NullableModule" />
      <apidata name="NullableModule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationRepresentationAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.CompilationRepresentationFlags" ref="false" />
            <enumValue>
              <field name="ModuleSuffix" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.RequireQualifiedAccessAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Module" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="95bf148d-b864-9af8-f029-355b96a3c00e" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Linq.NullableModule">
      <topicdata name="NullableModule" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Linq.NullableModule" />
      <apidata name="NullableModule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToByte``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToChar``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToDecimal``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToDouble``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToEnum``1(System.Nullable{System.Int32})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToFloat``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToFloat32``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToInt``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToInt16``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToInt32``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToInt64``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToInt8``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToIntPtr``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToSByte``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToSingle``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToUInt16``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToUInt32``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToUInt64``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToUInt8``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToUIntPtr``1(System.Nullable{``0})" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableModule" />
      </containers>
      <file name="9f2eca37-9f48-5cea-d89d-2f1ceebfecf6" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Linq.NullableModule">
      <topicdata name="NullableModule" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Linq.NullableModule" />
      <apidata name="NullableModule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToByte``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToChar``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToDecimal``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToDouble``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToEnum``1(System.Nullable{System.Int32})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToFloat``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToFloat32``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToInt``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToInt16``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToInt32``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToInt64``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToInt8``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToIntPtr``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToSByte``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToSingle``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToUInt16``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToUInt32``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToUInt64``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToUInt8``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableModule.ToUIntPtr``1(System.Nullable{``0})" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableModule" />
      </containers>
      <file name="ec2a584a-5def-d8f4-cee9-af3497ab78f9" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableModule.ToByte``1(System.Nullable{``0})">
      <topicdata group="api" />
      <apidata name="ToByte" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableModule.ToByte``1(System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Byte" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>byte</value>
          </argument>
        </attribute>
      </attributes>
      <file name="6686fd98-4319-b698-0df1-de90db5e9cee" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableModule.ToChar``1(System.Nullable{``0})">
      <topicdata group="api" />
      <apidata name="ToChar" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableModule.ToChar``1(System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Char" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>char</value>
          </argument>
        </attribute>
      </attributes>
      <file name="a1db5370-567c-e12e-2ba4-5fe9c4efc4f5" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableModule.ToDecimal``1(System.Nullable{``0})">
      <topicdata group="api" />
      <apidata name="ToDecimal" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableModule.ToDecimal``1(System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Decimal" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>decimal</value>
          </argument>
        </attribute>
      </attributes>
      <file name="63720831-00b4-5f4b-49fb-7985507e2231" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableModule.ToDouble``1(System.Nullable{``0})">
      <topicdata group="api" />
      <apidata name="ToDouble" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableModule.ToDouble``1(System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>double</value>
          </argument>
        </attribute>
      </attributes>
      <file name="9f3e5e03-31c9-493d-a167-5ae30496369e" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableModule.ToEnum``1(System.Nullable{System.Int32})">
      <topicdata group="api" />
      <apidata name="ToEnum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <template name="TResult" index="0" api="M:Microsoft.FSharp.Linq.NullableModule.ToEnum``1(System.Nullable{System.Int32})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>enum</value>
          </argument>
        </attribute>
      </attributes>
      <file name="9b81ac1e-c98e-4e57-5705-eb3938eb784c" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableModule.ToFloat``1(System.Nullable{``0})">
      <topicdata group="api" />
      <apidata name="ToFloat" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableModule.ToFloat``1(System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>float</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c2675128-4e08-367f-a973-7a5766e11793" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableModule.ToFloat32``1(System.Nullable{``0})">
      <topicdata group="api" />
      <apidata name="ToFloat32" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableModule.ToFloat32``1(System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Single" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>float32</value>
          </argument>
        </attribute>
      </attributes>
      <file name="9e0caf4c-7914-fe03-963c-17e30de25962" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableModule.ToInt``1(System.Nullable{``0})">
      <topicdata group="api" />
      <apidata name="ToInt" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableModule.ToInt``1(System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>int</value>
          </argument>
        </attribute>
      </attributes>
      <file name="412106c5-76e3-cf26-459c-2dd00303be1d" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableModule.ToInt16``1(System.Nullable{``0})">
      <topicdata group="api" />
      <apidata name="ToInt16" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableModule.ToInt16``1(System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int16" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>int16</value>
          </argument>
        </attribute>
      </attributes>
      <file name="84f1b153-808a-9126-78e2-fed1bb0af114" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableModule.ToInt32``1(System.Nullable{``0})">
      <topicdata group="api" />
      <apidata name="ToInt32" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableModule.ToInt32``1(System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>int32</value>
          </argument>
        </attribute>
      </attributes>
      <file name="71ef408c-11ce-7743-26aa-7c51f10db6b6" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableModule.ToInt64``1(System.Nullable{``0})">
      <topicdata group="api" />
      <apidata name="ToInt64" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableModule.ToInt64``1(System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>int64</value>
          </argument>
        </attribute>
      </attributes>
      <file name="af5c9db8-a058-4a8e-f62c-127cdcbde058" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableModule.ToInt8``1(System.Nullable{``0})">
      <topicdata group="api" />
      <apidata name="ToInt8" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableModule.ToInt8``1(System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.SByte" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>int8</value>
          </argument>
        </attribute>
      </attributes>
      <file name="0592556b-63c1-d359-26d5-aebc58ad1d3c" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableModule.ToIntPtr``1(System.Nullable{``0})">
      <topicdata group="api" />
      <apidata name="ToIntPtr" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableModule.ToIntPtr``1(System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.IntPtr" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>nativeint</value>
          </argument>
        </attribute>
      </attributes>
      <file name="30175d30-329f-a2f1-8474-dc52d0a054fc" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableModule.ToSByte``1(System.Nullable{``0})">
      <topicdata group="api" />
      <apidata name="ToSByte" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableModule.ToSByte``1(System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.SByte" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>sbyte</value>
          </argument>
        </attribute>
      </attributes>
      <file name="b79c6126-d325-5deb-a783-6e7a8ddb22b9" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableModule.ToSingle``1(System.Nullable{``0})">
      <topicdata group="api" />
      <apidata name="ToSingle" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableModule.ToSingle``1(System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Single" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>single</value>
          </argument>
        </attribute>
      </attributes>
      <file name="58af731e-a1d3-51e5-207a-36584ba98c27" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableModule.ToUInt16``1(System.Nullable{``0})">
      <topicdata group="api" />
      <apidata name="ToUInt16" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableModule.ToUInt16``1(System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.UInt16" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>uint16</value>
          </argument>
        </attribute>
      </attributes>
      <file name="30d6178a-1d68-0dd7-126d-b77909977445" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableModule.ToUInt32``1(System.Nullable{``0})">
      <topicdata group="api" />
      <apidata name="ToUInt32" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableModule.ToUInt32``1(System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.UInt32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>uint32</value>
          </argument>
        </attribute>
      </attributes>
      <file name="29aedd80-c248-0704-f14b-4b3dec1b5d2a" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableModule.ToUInt64``1(System.Nullable{``0})">
      <topicdata group="api" />
      <apidata name="ToUInt64" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableModule.ToUInt64``1(System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.UInt64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>uint64</value>
          </argument>
        </attribute>
      </attributes>
      <file name="a1a85784-342e-e125-c693-76f587a8947e" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableModule.ToUInt8``1(System.Nullable{``0})">
      <topicdata group="api" />
      <apidata name="ToUInt8" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableModule.ToUInt8``1(System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Byte" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>uint8</value>
          </argument>
        </attribute>
      </attributes>
      <file name="5bc80c00-a696-60ca-1d1c-2d5d6bd70f56" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableModule.ToUIntPtr``1(System.Nullable{``0})">
      <topicdata group="api" />
      <apidata name="ToUIntPtr" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableModule.ToUIntPtr``1(System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.UIntPtr" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>unativeint</value>
          </argument>
        </attribute>
      </attributes>
      <file name="062d9ef6-9312-fa5d-1a1e-6a8a8ba36da2" />
    </api>
    <api id="T:Microsoft.FSharp.Linq.NullableOperators">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Linq.NullableOperators" />
      <apidata name="NullableOperators" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Module" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="1473a282-e103-e564-ddc5-e2c6cc8aaff3" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Linq.NullableOperators">
      <topicdata name="NullableOperators" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Linq.NullableOperators" />
      <apidata name="NullableOperators" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_DivideQmark``3(``0,System.Nullable{``1})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_EqualsQmark``1(``0,System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_GreaterEqualsQmark``1(``0,System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_GreaterQmark``1(``0,System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_LessEqualsQmark``1(``0,System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_LessGreaterQmark``1(``0,System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_LessQmark``1(``0,System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_MinusQmark``3(``0,System.Nullable{``1})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_MultiplyQmark``3(``0,System.Nullable{``1})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_PercentQmark``3(``0,System.Nullable{``1})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_PlusQmark``3(``0,System.Nullable{``1})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkDivide``3(System.Nullable{``0},``1)" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkDivideQmark``3(System.Nullable{``0},System.Nullable{``1})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkEquals``1(System.Nullable{``0},``0)" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkEqualsQmark``1(System.Nullable{``0},System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkGreater``1(System.Nullable{``0},``0)" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkGreaterEquals``1(System.Nullable{``0},``0)" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkGreaterEqualsQmark``1(System.Nullable{``0},System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkGreaterQmark``1(System.Nullable{``0},System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkLess``1(System.Nullable{``0},``0)" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkLessEquals``1(System.Nullable{``0},``0)" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkLessEqualsQmark``1(System.Nullable{``0},System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkLessGreater``1(System.Nullable{``0},``0)" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkLessGreaterQmark``1(System.Nullable{``0},System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkLessQmark``1(System.Nullable{``0},System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkMinus``3(System.Nullable{``0},``1)" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkMinusQmark``3(System.Nullable{``0},System.Nullable{``1})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkMultiply``3(System.Nullable{``0},``1)" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkMultiplyQmark``3(System.Nullable{``0},System.Nullable{``1})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkPercent``3(System.Nullable{``0},``1)" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkPercentQmark``3(System.Nullable{``0},System.Nullable{``1})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkPlus``3(System.Nullable{``0},``1)" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkPlusQmark``3(System.Nullable{``0},System.Nullable{``1})" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableOperators" />
      </containers>
      <file name="e22bd626-8d36-4c62-c49a-622814f47eab" />
    </api>
    <api id="Operators.T:Microsoft.FSharp.Linq.NullableOperators">
      <topicdata name="NullableOperators" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:Microsoft.FSharp.Linq.NullableOperators" />
      <apidata name="NullableOperators" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_DivideQmark``3(``0,System.Nullable{``1})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_EqualsQmark``1(``0,System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_GreaterEqualsQmark``1(``0,System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_GreaterQmark``1(``0,System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_LessEqualsQmark``1(``0,System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_LessGreaterQmark``1(``0,System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_LessQmark``1(``0,System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_MinusQmark``3(``0,System.Nullable{``1})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_MultiplyQmark``3(``0,System.Nullable{``1})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_PercentQmark``3(``0,System.Nullable{``1})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_PlusQmark``3(``0,System.Nullable{``1})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkDivide``3(System.Nullable{``0},``1)" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkDivideQmark``3(System.Nullable{``0},System.Nullable{``1})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkEquals``1(System.Nullable{``0},``0)" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkEqualsQmark``1(System.Nullable{``0},System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkGreater``1(System.Nullable{``0},``0)" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkGreaterEquals``1(System.Nullable{``0},``0)" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkGreaterEqualsQmark``1(System.Nullable{``0},System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkGreaterQmark``1(System.Nullable{``0},System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkLess``1(System.Nullable{``0},``0)" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkLessEquals``1(System.Nullable{``0},``0)" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkLessEqualsQmark``1(System.Nullable{``0},System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkLessGreater``1(System.Nullable{``0},``0)" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkLessGreaterQmark``1(System.Nullable{``0},System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkLessQmark``1(System.Nullable{``0},System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkMinus``3(System.Nullable{``0},``1)" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkMinusQmark``3(System.Nullable{``0},System.Nullable{``1})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkMultiply``3(System.Nullable{``0},``1)" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkMultiplyQmark``3(System.Nullable{``0},System.Nullable{``1})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkPercent``3(System.Nullable{``0},``1)" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkPercentQmark``3(System.Nullable{``0},System.Nullable{``1})" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkPlus``3(System.Nullable{``0},``1)" />
        <element api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkPlusQmark``3(System.Nullable{``0},System.Nullable{``1})" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableOperators" />
      </containers>
      <file name="a44085c4-2b11-5e4e-c39b-95379cd36636" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableOperators.op_DivideQmark``3(``0,System.Nullable{``1})">
      <topicdata group="api" />
      <apidata name="DivideQmark" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2">
          <constrained value="true" ctor="true" />
        </template>
        <template name="T3">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T1" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_DivideQmark``3(``0,System.Nullable{``1})" />
        </parameter>
        <parameter name="y">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T2" index="1" api="M:Microsoft.FSharp.Linq.NullableOperators.op_DivideQmark``3(``0,System.Nullable{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <template name="T3" index="2" api="M:Microsoft.FSharp.Linq.NullableOperators.op_DivideQmark``3(``0,System.Nullable{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="cb459155-9663-efff-81cf-244ca7cdbc96" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableOperators.op_EqualsQmark``1(``0,System.Nullable{``0})">
      <topicdata group="api" />
      <apidata name="EqualsQmark" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_EqualsQmark``1(``0,System.Nullable{``0})" />
        </parameter>
        <parameter name="y">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_EqualsQmark``1(``0,System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="ba09afbf-2b09-5fbb-6092-4762856da33e" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableOperators.op_GreaterEqualsQmark``1(``0,System.Nullable{``0})">
      <topicdata group="api" />
      <apidata name="GreaterEqualsQmark" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_GreaterEqualsQmark``1(``0,System.Nullable{``0})" />
        </parameter>
        <parameter name="y">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_GreaterEqualsQmark``1(``0,System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="1b2c3783-71aa-2bcc-5401-0a52095bfc33" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableOperators.op_GreaterQmark``1(``0,System.Nullable{``0})">
      <topicdata group="api" />
      <apidata name="GreaterQmark" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_GreaterQmark``1(``0,System.Nullable{``0})" />
        </parameter>
        <parameter name="y">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_GreaterQmark``1(``0,System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="192f3e0d-9205-7331-2ea9-318e8e8666e6" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableOperators.op_LessEqualsQmark``1(``0,System.Nullable{``0})">
      <topicdata group="api" />
      <apidata name="LessEqualsQmark" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_LessEqualsQmark``1(``0,System.Nullable{``0})" />
        </parameter>
        <parameter name="y">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_LessEqualsQmark``1(``0,System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="09c7e759-6aa8-4f22-6c0b-69c0570483fb" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableOperators.op_LessGreaterQmark``1(``0,System.Nullable{``0})">
      <topicdata group="api" />
      <apidata name="LessGreaterQmark" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_LessGreaterQmark``1(``0,System.Nullable{``0})" />
        </parameter>
        <parameter name="y">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_LessGreaterQmark``1(``0,System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="9a792f67-537b-3551-e3b9-f6e366f79a75" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableOperators.op_LessQmark``1(``0,System.Nullable{``0})">
      <topicdata group="api" />
      <apidata name="LessQmark" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_LessQmark``1(``0,System.Nullable{``0})" />
        </parameter>
        <parameter name="y">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_LessQmark``1(``0,System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="517a997e-a001-7744-7322-499cfe992af4" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableOperators.op_MinusQmark``3(``0,System.Nullable{``1})">
      <topicdata group="api" />
      <apidata name="MinusQmark" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2">
          <constrained value="true" ctor="true" />
        </template>
        <template name="T3">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T1" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_MinusQmark``3(``0,System.Nullable{``1})" />
        </parameter>
        <parameter name="y">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T2" index="1" api="M:Microsoft.FSharp.Linq.NullableOperators.op_MinusQmark``3(``0,System.Nullable{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <template name="T3" index="2" api="M:Microsoft.FSharp.Linq.NullableOperators.op_MinusQmark``3(``0,System.Nullable{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="4e0ab656-032a-cddb-02d6-c06e40cb78cd" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableOperators.op_MultiplyQmark``3(``0,System.Nullable{``1})">
      <topicdata group="api" />
      <apidata name="MultiplyQmark" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2">
          <constrained value="true" ctor="true" />
        </template>
        <template name="T3">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T1" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_MultiplyQmark``3(``0,System.Nullable{``1})" />
        </parameter>
        <parameter name="y">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T2" index="1" api="M:Microsoft.FSharp.Linq.NullableOperators.op_MultiplyQmark``3(``0,System.Nullable{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <template name="T3" index="2" api="M:Microsoft.FSharp.Linq.NullableOperators.op_MultiplyQmark``3(``0,System.Nullable{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="87526b0b-4fe4-1133-7794-facb86a9eec2" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableOperators.op_PercentQmark``3(``0,System.Nullable{``1})">
      <topicdata group="api" />
      <apidata name="PercentQmark" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2">
          <constrained value="true" ctor="true" />
        </template>
        <template name="T3">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T1" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_PercentQmark``3(``0,System.Nullable{``1})" />
        </parameter>
        <parameter name="y">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T2" index="1" api="M:Microsoft.FSharp.Linq.NullableOperators.op_PercentQmark``3(``0,System.Nullable{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <template name="T3" index="2" api="M:Microsoft.FSharp.Linq.NullableOperators.op_PercentQmark``3(``0,System.Nullable{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="d62bc5c6-a8ff-e784-8b76-f3675f86dbca" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableOperators.op_PlusQmark``3(``0,System.Nullable{``1})">
      <topicdata group="api" />
      <apidata name="PlusQmark" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2">
          <constrained value="true" ctor="true" />
        </template>
        <template name="T3">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T1" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_PlusQmark``3(``0,System.Nullable{``1})" />
        </parameter>
        <parameter name="y">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T2" index="1" api="M:Microsoft.FSharp.Linq.NullableOperators.op_PlusQmark``3(``0,System.Nullable{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <template name="T3" index="2" api="M:Microsoft.FSharp.Linq.NullableOperators.op_PlusQmark``3(``0,System.Nullable{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="acf011f3-3815-f0fe-52cf-419aebfdd084" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkDivide``3(System.Nullable{``0},``1)">
      <topicdata group="api" />
      <apidata name="QmarkDivide" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1">
          <constrained value="true" ctor="true" />
        </template>
        <template name="T2" />
        <template name="T3">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="x">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkDivide``3(System.Nullable{``0},``1)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="y">
          <template name="T2" index="1" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkDivide``3(System.Nullable{``0},``1)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <template name="T3" index="2" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkDivide``3(System.Nullable{``0},``1)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="207b6312-2702-6f5f-d418-a81c6d7de3d5" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkDivideQmark``3(System.Nullable{``0},System.Nullable{``1})">
      <topicdata group="api" />
      <apidata name="QmarkDivideQmark" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1">
          <constrained value="true" ctor="true" />
        </template>
        <template name="T2">
          <constrained value="true" ctor="true" />
        </template>
        <template name="T3">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="x">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkDivideQmark``3(System.Nullable{``0},System.Nullable{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="y">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T2" index="1" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkDivideQmark``3(System.Nullable{``0},System.Nullable{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <template name="T3" index="2" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkDivideQmark``3(System.Nullable{``0},System.Nullable{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c67c96b1-85ed-5ee6-5aeb-169bd1d42e24" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkEquals``1(System.Nullable{``0},``0)">
      <topicdata group="api" />
      <apidata name="QmarkEquals" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="x">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkEquals``1(System.Nullable{``0},``0)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="y">
          <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkEquals``1(System.Nullable{``0},``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="32fa5a1a-6499-af4e-e31e-688fa0b1f3d5" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkEqualsQmark``1(System.Nullable{``0},System.Nullable{``0})">
      <topicdata group="api" />
      <apidata name="QmarkEqualsQmark" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="x">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkEqualsQmark``1(System.Nullable{``0},System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="y">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkEqualsQmark``1(System.Nullable{``0},System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="08d86959-1aea-b7f7-d0c8-9a73bdcda3d5" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkGreater``1(System.Nullable{``0},``0)">
      <topicdata group="api" />
      <apidata name="QmarkGreater" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="x">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkGreater``1(System.Nullable{``0},``0)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="y">
          <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkGreater``1(System.Nullable{``0},``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="9d12df26-b62a-a01d-e9df-0e6bae2ef0b8" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkGreaterEquals``1(System.Nullable{``0},``0)">
      <topicdata group="api" />
      <apidata name="QmarkGreaterEquals" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="x">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkGreaterEquals``1(System.Nullable{``0},``0)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="y">
          <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkGreaterEquals``1(System.Nullable{``0},``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="38c446c7-73a1-e38e-c8c7-fbca938cd5cd" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkGreaterEqualsQmark``1(System.Nullable{``0},System.Nullable{``0})">
      <topicdata group="api" />
      <apidata name="QmarkGreaterEqualsQmark" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="x">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkGreaterEqualsQmark``1(System.Nullable{``0},System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="y">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkGreaterEqualsQmark``1(System.Nullable{``0},System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="6e0988c9-c3d2-b6f7-59d3-43e1f9d79885" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkGreaterQmark``1(System.Nullable{``0},System.Nullable{``0})">
      <topicdata group="api" />
      <apidata name="QmarkGreaterQmark" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="x">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkGreaterQmark``1(System.Nullable{``0},System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="y">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkGreaterQmark``1(System.Nullable{``0},System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="5a8a845d-8cd3-daea-182a-9f214efd9729" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkLess``1(System.Nullable{``0},``0)">
      <topicdata group="api" />
      <apidata name="QmarkLess" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="x">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkLess``1(System.Nullable{``0},``0)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="y">
          <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkLess``1(System.Nullable{``0},``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="897c528b-55b9-3a7b-6c86-2fc975e30084" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkLessEquals``1(System.Nullable{``0},``0)">
      <topicdata group="api" />
      <apidata name="QmarkLessEquals" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="x">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkLessEquals``1(System.Nullable{``0},``0)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="y">
          <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkLessEquals``1(System.Nullable{``0},``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="eedead7b-fc11-beb3-c197-0494c56e05b5" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkLessEqualsQmark``1(System.Nullable{``0},System.Nullable{``0})">
      <topicdata group="api" />
      <apidata name="QmarkLessEqualsQmark" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="x">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkLessEqualsQmark``1(System.Nullable{``0},System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="y">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkLessEqualsQmark``1(System.Nullable{``0},System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="32ad7fdc-370e-dfd9-cc49-5fceb5bb5742" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkLessGreater``1(System.Nullable{``0},``0)">
      <topicdata group="api" />
      <apidata name="QmarkLessGreater" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="x">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkLessGreater``1(System.Nullable{``0},``0)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="y">
          <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkLessGreater``1(System.Nullable{``0},``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="52ca235f-f862-df53-b4e5-bd105b41f70a" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkLessGreaterQmark``1(System.Nullable{``0},System.Nullable{``0})">
      <topicdata group="api" />
      <apidata name="QmarkLessGreaterQmark" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="x">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkLessGreaterQmark``1(System.Nullable{``0},System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="y">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkLessGreaterQmark``1(System.Nullable{``0},System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e2a60736-7bfb-582d-651f-f82eadee1f39" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkLessQmark``1(System.Nullable{``0},System.Nullable{``0})">
      <topicdata group="api" />
      <apidata name="QmarkLessQmark" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="x">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkLessQmark``1(System.Nullable{``0},System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="y">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkLessQmark``1(System.Nullable{``0},System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="fe0abb3b-346a-f77a-c597-c14177bb2bd9" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkMinus``3(System.Nullable{``0},``1)">
      <topicdata group="api" />
      <apidata name="QmarkMinus" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1">
          <constrained value="true" ctor="true" />
        </template>
        <template name="T2" />
        <template name="T3">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="x">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkMinus``3(System.Nullable{``0},``1)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="y">
          <template name="T2" index="1" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkMinus``3(System.Nullable{``0},``1)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <template name="T3" index="2" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkMinus``3(System.Nullable{``0},``1)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="4036dd99-1c97-cdc3-dc50-314a7e2c0747" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkMinusQmark``3(System.Nullable{``0},System.Nullable{``1})">
      <topicdata group="api" />
      <apidata name="QmarkMinusQmark" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1">
          <constrained value="true" ctor="true" />
        </template>
        <template name="T2">
          <constrained value="true" ctor="true" />
        </template>
        <template name="T3">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="x">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkMinusQmark``3(System.Nullable{``0},System.Nullable{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="y">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T2" index="1" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkMinusQmark``3(System.Nullable{``0},System.Nullable{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <template name="T3" index="2" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkMinusQmark``3(System.Nullable{``0},System.Nullable{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="94544532-2753-5343-09fb-90ba18755821" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkMultiply``3(System.Nullable{``0},``1)">
      <topicdata group="api" />
      <apidata name="QmarkMultiply" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1">
          <constrained value="true" ctor="true" />
        </template>
        <template name="T2" />
        <template name="T3">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="x">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkMultiply``3(System.Nullable{``0},``1)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="y">
          <template name="T2" index="1" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkMultiply``3(System.Nullable{``0},``1)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <template name="T3" index="2" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkMultiply``3(System.Nullable{``0},``1)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="be7113d0-474d-1c4d-65b6-f52644b2eccb" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkMultiplyQmark``3(System.Nullable{``0},System.Nullable{``1})">
      <topicdata group="api" />
      <apidata name="QmarkMultiplyQmark" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1">
          <constrained value="true" ctor="true" />
        </template>
        <template name="T2">
          <constrained value="true" ctor="true" />
        </template>
        <template name="T3">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="x">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkMultiplyQmark``3(System.Nullable{``0},System.Nullable{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="y">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T2" index="1" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkMultiplyQmark``3(System.Nullable{``0},System.Nullable{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <template name="T3" index="2" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkMultiplyQmark``3(System.Nullable{``0},System.Nullable{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="67592728-5d46-4e4f-59d3-2f2f1250442b" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkPercent``3(System.Nullable{``0},``1)">
      <topicdata group="api" />
      <apidata name="QmarkPercent" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1">
          <constrained value="true" ctor="true" />
        </template>
        <template name="T2" />
        <template name="T3">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="x">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkPercent``3(System.Nullable{``0},``1)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="y">
          <template name="T2" index="1" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkPercent``3(System.Nullable{``0},``1)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <template name="T3" index="2" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkPercent``3(System.Nullable{``0},``1)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="03ce49a6-321d-1a31-cb63-2c1da2622666" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkPercentQmark``3(System.Nullable{``0},System.Nullable{``1})">
      <topicdata group="api" />
      <apidata name="QmarkPercentQmark" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1">
          <constrained value="true" ctor="true" />
        </template>
        <template name="T2">
          <constrained value="true" ctor="true" />
        </template>
        <template name="T3">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="x">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkPercentQmark``3(System.Nullable{``0},System.Nullable{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="y">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T2" index="1" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkPercentQmark``3(System.Nullable{``0},System.Nullable{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <template name="T3" index="2" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkPercentQmark``3(System.Nullable{``0},System.Nullable{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="43cb6874-9b3d-3b19-139d-48e6498b01e2" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkPlus``3(System.Nullable{``0},``1)">
      <topicdata group="api" />
      <apidata name="QmarkPlus" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1">
          <constrained value="true" ctor="true" />
        </template>
        <template name="T2" />
        <template name="T3">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="x">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkPlus``3(System.Nullable{``0},``1)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="y">
          <template name="T2" index="1" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkPlus``3(System.Nullable{``0},``1)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <template name="T3" index="2" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkPlus``3(System.Nullable{``0},``1)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="d839d030-0c00-6f83-84e4-073a6be60293" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkPlusQmark``3(System.Nullable{``0},System.Nullable{``1})">
      <topicdata group="api" />
      <apidata name="QmarkPlusQmark" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1">
          <constrained value="true" ctor="true" />
        </template>
        <template name="T2">
          <constrained value="true" ctor="true" />
        </template>
        <template name="T3">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="x">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkPlusQmark``3(System.Nullable{``0},System.Nullable{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="y">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T2" index="1" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkPlusQmark``3(System.Nullable{``0},System.Nullable{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <template name="T3" index="2" api="M:Microsoft.FSharp.Linq.NullableOperators.op_QmarkPlusQmark``3(System.Nullable{``0},System.Nullable{``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.NullableOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="011f25b8-99be-f0e6-9f9c-f1ded1032be2" />
    </api>
    <api id="T:Microsoft.FSharp.Linq.QueryBuilder">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Linq.QueryBuilder" />
      <apidata name="QueryBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:Microsoft.FSharp.Linq.QueryBuilder.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.ClassAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="4d4c5670-b4e6-c242-530d-bce449e85f84" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Linq.QueryBuilder">
      <topicdata name="QueryBuilder" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Linq.QueryBuilder" />
      <apidata name="QueryBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:Microsoft.FSharp.Linq.QueryBuilder.#ctor" />
      <elements>
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.#ctor" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.All``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.AverageBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.AverageByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Contains``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},``0)" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Count``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Distinct``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.ExactlyOne``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.ExactlyOneOrDefault``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Exists``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Find``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.For``4(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Linq.QuerySource{``2,``3}})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.GroupBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.GroupJoin``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{System.Collections.Generic.IEnumerable{``2},``4}})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.GroupValBy``4(Microsoft.FSharp.Linq.QuerySource{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``0,``2},Microsoft.FSharp.Core.FSharpFunc{``0,``1})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Head``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.HeadOrDefault``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Join``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``2,``4}})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Last``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.LastOrDefault``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.LeftOuterJoin``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{System.Collections.Generic.IEnumerable{``2},``4}})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.MaxBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.MaxByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.MinBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.MinByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Nth``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},System.Int32)" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Quote``1(Microsoft.FSharp.Quotations.FSharpExpr{``0})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Run``1(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Linq.QuerySource{``0,System.Linq.IQueryable}})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Select``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Skip``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},System.Int32)" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.SkipWhile``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.SortBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.SortByDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.SortByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.SortByNullableDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
        <element api="Overload:Microsoft.FSharp.Linq.QueryBuilder.Source">
          <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Source``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Source``2(System.Linq.IQueryable{``0})" />
        </element>
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.SumBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.SumByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Take``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},System.Int32)" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.TakeWhile``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.ThenBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.ThenByDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.ThenByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.ThenByNullableDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Where``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Yield``2(``0)" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.YieldFrom``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Zero``2" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" />
      </containers>
      <file name="6f7c3654-a795-116b-0170-8f7983deb41f" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Linq.QueryBuilder">
      <topicdata name="QueryBuilder" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Linq.QueryBuilder" />
      <apidata name="QueryBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:Microsoft.FSharp.Linq.QueryBuilder.#ctor" />
      <elements>
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.All``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.AverageBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.AverageByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Contains``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},``0)" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Count``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Distinct``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.ExactlyOne``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.ExactlyOneOrDefault``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Exists``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Find``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.For``4(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Linq.QuerySource{``2,``3}})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.GroupBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.GroupJoin``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{System.Collections.Generic.IEnumerable{``2},``4}})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.GroupValBy``4(Microsoft.FSharp.Linq.QuerySource{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``0,``2},Microsoft.FSharp.Core.FSharpFunc{``0,``1})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Head``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.HeadOrDefault``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Join``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``2,``4}})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Last``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.LastOrDefault``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.LeftOuterJoin``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{System.Collections.Generic.IEnumerable{``2},``4}})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.MaxBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.MaxByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.MinBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.MinByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Nth``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},System.Int32)" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Quote``1(Microsoft.FSharp.Quotations.FSharpExpr{``0})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Run``1(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Linq.QuerySource{``0,System.Linq.IQueryable}})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Select``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Skip``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},System.Int32)" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.SkipWhile``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.SortBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.SortByDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.SortByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.SortByNullableDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
        <element api="Overload:Microsoft.FSharp.Linq.QueryBuilder.Source">
          <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Source``1(System.Collections.Generic.IEnumerable{``0})" />
          <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Source``2(System.Linq.IQueryable{``0})" />
        </element>
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.SumBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.SumByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Take``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},System.Int32)" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.TakeWhile``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.ThenBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.ThenByDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.ThenByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.ThenByNullableDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Where``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Yield``2(``0)" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.YieldFrom``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Zero``2" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" />
      </containers>
      <file name="3a51326b-146e-3fc7-06c3-91d917ecc2ea" />
    </api>
    <api id="Overload:Microsoft.FSharp.Linq.QueryBuilder.Source">
      <topicdata name="Source" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Linq.QueryBuilder" />
      <apidata name="Source" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Source``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:Microsoft.FSharp.Linq.QueryBuilder.Source``2(System.Linq.IQueryable{``0})" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <file name="5bfdf739-6e6c-23e4-ee72-1a9a53f5adef" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <file name="b8b6f0b8-1bb3-8b85-b301-e1dacf28952c" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.All``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})">
      <topicdata group="api" />
      <apidata name="All" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.All``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.All``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.All``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.ProjectionParameterAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>all</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c569ea2e-486a-5a2a-45aa-1dd972f5f9fd" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.AverageBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})">
      <topicdata group="api" />
      <apidata name="AverageBy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
        <template name="TValue" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.AverageBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.AverageBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="projection">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.AverageBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
              <template name="TValue" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.AverageBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.ProjectionParameterAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <template name="TValue" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.AverageBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>averageBy</value>
          </argument>
        </attribute>
      </attributes>
      <file name="5d879bf5-8b95-eee0-4cbe-4262accef813" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.AverageByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})">
      <topicdata group="api" />
      <apidata name="AverageByNullable" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
        <template name="TValue">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.AverageByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.AverageByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="projection">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.AverageByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <template name="TValue" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.AverageByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
                </specialization>
              </type>
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.ProjectionParameterAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <template name="TValue" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.AverageByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>averageByNullable</value>
          </argument>
        </attribute>
      </attributes>
      <file name="72eb85d6-67f0-2098-dac1-3939f5bf432b" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.Contains``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},``0)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Contains``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},``0)" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.Contains``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},``0)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="key">
          <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Contains``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>contains</value>
          </argument>
        </attribute>
      </attributes>
      <file name="fbc6c547-a53f-989d-6639-7efe2c59154b" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.Count``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Count``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.Count``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>count</value>
          </argument>
        </attribute>
      </attributes>
      <file name="8dcc6b03-0ac0-5b30-4e42-ac6a791f9798" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.Distinct``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})">
      <topicdata group="api" />
      <apidata name="Distinct" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Distinct``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.Distinct``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Distinct``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
            <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.Distinct``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>distinct</value>
          </argument>
          <assignment name="MaintainsVariableSpace">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="AllowIntoPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="fcd60c9d-1807-ed3d-8905-339f17a1c3a5" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.ExactlyOne``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})">
      <topicdata group="api" />
      <apidata name="ExactlyOne" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.ExactlyOne``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.ExactlyOne``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.ExactlyOne``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>exactlyOne</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e8acfc96-150f-a1e9-d17b-9a9c170c0a7b" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.ExactlyOneOrDefault``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})">
      <topicdata group="api" />
      <apidata name="ExactlyOneOrDefault" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.ExactlyOneOrDefault``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.ExactlyOneOrDefault``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.ExactlyOneOrDefault``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>exactlyOneOrDefault</value>
          </argument>
        </attribute>
      </attributes>
      <file name="341a037a-2f3a-d0ed-09c4-ede1240af3fd" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.Exists``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})">
      <topicdata group="api" />
      <apidata name="Exists" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Exists``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.Exists``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Exists``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.ProjectionParameterAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>exists</value>
          </argument>
        </attribute>
      </attributes>
      <file name="1cb3232e-70cc-f95e-2d7c-427a7817bf3c" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.Find``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})">
      <topicdata group="api" />
      <apidata name="Find" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Find``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.Find``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Find``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.ProjectionParameterAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Find``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>find</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e998cd57-16db-9a27-7330-c117f0f171be" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.For``4(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Linq.QuerySource{``2,``3}})">
      <topicdata group="api" />
      <apidata name="For" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
        <template name="TResult" />
        <template name="Q2" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.For``4(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Linq.QuerySource{``2,``3}})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.For``4(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Linq.QuerySource{``2,``3}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="body">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.For``4(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Linq.QuerySource{``2,``3}})" />
              <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
                <specialization>
                  <template name="TResult" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.For``4(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Linq.QuerySource{``2,``3}})" />
                  <template name="Q2" index="3" api="M:Microsoft.FSharp.Linq.QueryBuilder.For``4(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Linq.QuerySource{``2,``3}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
          <specialization>
            <template name="TResult" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.For``4(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Linq.QuerySource{``2,``3}})" />
            <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.For``4(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Linq.QuerySource{``2,``3}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <file name="b65ea360-6e03-b1e0-5025-7e84ba75a24d" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.GroupBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})">
      <topicdata group="api" />
      <apidata name="GroupBy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.GroupBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.GroupBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.GroupBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
              <template name="TKey" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.GroupBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.ProjectionParameterAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
          <specialization>
            <type api="T:System.Linq.IGrouping`2" ref="true">
              <specialization>
                <template name="TKey" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.GroupBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
                <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.GroupBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
              </specialization>
            </type>
            <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.GroupBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>groupBy</value>
          </argument>
          <assignment name="AllowIntoPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="912e08a5-766c-181b-28bf-f16c00bc4927" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.GroupJoin``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{System.Collections.Generic.IEnumerable{``2},``4}})">
      <topicdata group="api" />
      <apidata name="GroupJoin" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TOuter" />
        <template name="Q" />
        <template name="TInner" />
        <template name="TKey" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="outerSource">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="TOuter" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.GroupJoin``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{System.Collections.Generic.IEnumerable{``2},``4}})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.GroupJoin``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{System.Collections.Generic.IEnumerable{``2},``4}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="innerSource">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="TInner" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.GroupJoin``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{System.Collections.Generic.IEnumerable{``2},``4}})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.GroupJoin``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{System.Collections.Generic.IEnumerable{``2},``4}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="outerKeySelector">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="TOuter" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.GroupJoin``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{System.Collections.Generic.IEnumerable{``2},``4}})" />
              <template name="TKey" index="3" api="M:Microsoft.FSharp.Linq.QueryBuilder.GroupJoin``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{System.Collections.Generic.IEnumerable{``2},``4}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="innerKeySelector">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="TInner" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.GroupJoin``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{System.Collections.Generic.IEnumerable{``2},``4}})" />
              <template name="TKey" index="3" api="M:Microsoft.FSharp.Linq.QueryBuilder.GroupJoin``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{System.Collections.Generic.IEnumerable{``2},``4}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="resultSelector">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="TOuter" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.GroupJoin``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{System.Collections.Generic.IEnumerable{``2},``4}})" />
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.GroupJoin``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{System.Collections.Generic.IEnumerable{``2},``4}})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="4" api="M:Microsoft.FSharp.Linq.QueryBuilder.GroupJoin``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{System.Collections.Generic.IEnumerable{``2},``4}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
          <specialization>
            <template name="TResult" index="4" api="M:Microsoft.FSharp.Linq.QueryBuilder.GroupJoin``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{System.Collections.Generic.IEnumerable{``2},``4}})" />
            <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.GroupJoin``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{System.Collections.Generic.IEnumerable{``2},``4}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>groupJoin</value>
          </argument>
          <assignment name="IsLikeGroupJoin">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="JoinConditionWord">
            <type api="T:System.String" ref="true" />
            <value>on</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="2b496817-6dcd-5e02-60a7-3ffd6267a2ab" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.GroupValBy``4(Microsoft.FSharp.Linq.QuerySource{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``0,``2},Microsoft.FSharp.Core.FSharpFunc{``0,``1})">
      <topicdata group="api" />
      <apidata name="GroupValBy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TKey" />
        <template name="TValue" />
        <template name="Q" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.GroupValBy``4(Microsoft.FSharp.Linq.QuerySource{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``0,``2},Microsoft.FSharp.Core.FSharpFunc{``0,``1})" />
              <template name="Q" index="3" api="M:Microsoft.FSharp.Linq.QueryBuilder.GroupValBy``4(Microsoft.FSharp.Linq.QuerySource{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``0,``2},Microsoft.FSharp.Core.FSharpFunc{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="resultSelector">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.GroupValBy``4(Microsoft.FSharp.Linq.QuerySource{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``0,``2},Microsoft.FSharp.Core.FSharpFunc{``0,``1})" />
              <template name="TValue" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.GroupValBy``4(Microsoft.FSharp.Linq.QuerySource{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``0,``2},Microsoft.FSharp.Core.FSharpFunc{``0,``1})" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.ProjectionParameterAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
        <parameter name="keySelector">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.GroupValBy``4(Microsoft.FSharp.Linq.QuerySource{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``0,``2},Microsoft.FSharp.Core.FSharpFunc{``0,``1})" />
              <template name="TKey" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.GroupValBy``4(Microsoft.FSharp.Linq.QuerySource{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``0,``2},Microsoft.FSharp.Core.FSharpFunc{``0,``1})" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.ProjectionParameterAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
          <specialization>
            <type api="T:System.Linq.IGrouping`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.GroupValBy``4(Microsoft.FSharp.Linq.QuerySource{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``0,``2},Microsoft.FSharp.Core.FSharpFunc{``0,``1})" />
                <template name="TValue" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.GroupValBy``4(Microsoft.FSharp.Linq.QuerySource{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``0,``2},Microsoft.FSharp.Core.FSharpFunc{``0,``1})" />
              </specialization>
            </type>
            <template name="Q" index="3" api="M:Microsoft.FSharp.Linq.QueryBuilder.GroupValBy``4(Microsoft.FSharp.Linq.QuerySource{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``0,``2},Microsoft.FSharp.Core.FSharpFunc{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>groupValBy</value>
          </argument>
          <assignment name="AllowIntoPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="688e0407-e4d7-facb-3fc9-637c13d9dbda" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.Head``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})">
      <topicdata group="api" />
      <apidata name="Head" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Head``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.Head``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Head``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>head</value>
          </argument>
        </attribute>
      </attributes>
      <file name="72cddefd-cfd8-1c03-abe4-a310bbc5ca2f" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.HeadOrDefault``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})">
      <topicdata group="api" />
      <apidata name="HeadOrDefault" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.HeadOrDefault``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.HeadOrDefault``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.HeadOrDefault``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>headOrDefault</value>
          </argument>
        </attribute>
      </attributes>
      <file name="725ac38d-cab6-3737-dd1a-dc4257067d38" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.Join``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``2,``4}})">
      <topicdata group="api" />
      <apidata name="Join" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TOuter" />
        <template name="Q" />
        <template name="TInner" />
        <template name="TKey" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="outerSource">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="TOuter" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Join``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``2,``4}})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.Join``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``2,``4}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="innerSource">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="TInner" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.Join``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``2,``4}})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.Join``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``2,``4}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="outerKeySelector">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="TOuter" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Join``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``2,``4}})" />
              <template name="TKey" index="3" api="M:Microsoft.FSharp.Linq.QueryBuilder.Join``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``2,``4}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="innerKeySelector">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="TInner" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.Join``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``2,``4}})" />
              <template name="TKey" index="3" api="M:Microsoft.FSharp.Linq.QueryBuilder.Join``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``2,``4}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="resultSelector">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="TOuter" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Join``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``2,``4}})" />
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <template name="TInner" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.Join``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``2,``4}})" />
                  <template name="TResult" index="4" api="M:Microsoft.FSharp.Linq.QueryBuilder.Join``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``2,``4}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
          <specialization>
            <template name="TResult" index="4" api="M:Microsoft.FSharp.Linq.QueryBuilder.Join``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``2,``4}})" />
            <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.Join``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``2,``4}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>join</value>
          </argument>
          <assignment name="IsLikeJoin">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="JoinConditionWord">
            <type api="T:System.String" ref="true" />
            <value>on</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="4fdd1c5a-e0e4-fb72-71a9-8485de625537" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.Last``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})">
      <topicdata group="api" />
      <apidata name="Last" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Last``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.Last``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Last``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>last</value>
          </argument>
        </attribute>
      </attributes>
      <file name="76d5657a-ba3b-d535-63ec-67c41ace361b" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.LastOrDefault``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})">
      <topicdata group="api" />
      <apidata name="LastOrDefault" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.LastOrDefault``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.LastOrDefault``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.LastOrDefault``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>lastOrDefault</value>
          </argument>
        </attribute>
      </attributes>
      <file name="a1f7a02e-be8b-25b8-6223-74d18523504f" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.LeftOuterJoin``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{System.Collections.Generic.IEnumerable{``2},``4}})">
      <topicdata group="api" />
      <apidata name="LeftOuterJoin" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TOuter" />
        <template name="Q" />
        <template name="TInner" />
        <template name="TKey" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="outerSource">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="TOuter" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.LeftOuterJoin``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{System.Collections.Generic.IEnumerable{``2},``4}})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.LeftOuterJoin``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{System.Collections.Generic.IEnumerable{``2},``4}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="innerSource">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="TInner" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.LeftOuterJoin``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{System.Collections.Generic.IEnumerable{``2},``4}})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.LeftOuterJoin``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{System.Collections.Generic.IEnumerable{``2},``4}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="outerKeySelector">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="TOuter" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.LeftOuterJoin``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{System.Collections.Generic.IEnumerable{``2},``4}})" />
              <template name="TKey" index="3" api="M:Microsoft.FSharp.Linq.QueryBuilder.LeftOuterJoin``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{System.Collections.Generic.IEnumerable{``2},``4}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="innerKeySelector">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="TInner" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.LeftOuterJoin``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{System.Collections.Generic.IEnumerable{``2},``4}})" />
              <template name="TKey" index="3" api="M:Microsoft.FSharp.Linq.QueryBuilder.LeftOuterJoin``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{System.Collections.Generic.IEnumerable{``2},``4}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="resultSelector">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="TOuter" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.LeftOuterJoin``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{System.Collections.Generic.IEnumerable{``2},``4}})" />
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.LeftOuterJoin``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{System.Collections.Generic.IEnumerable{``2},``4}})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="4" api="M:Microsoft.FSharp.Linq.QueryBuilder.LeftOuterJoin``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{System.Collections.Generic.IEnumerable{``2},``4}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
          <specialization>
            <template name="TResult" index="4" api="M:Microsoft.FSharp.Linq.QueryBuilder.LeftOuterJoin``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{System.Collections.Generic.IEnumerable{``2},``4}})" />
            <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.LeftOuterJoin``5(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Linq.QuerySource{``2,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``3},Microsoft.FSharp.Core.FSharpFunc{``2,``3},Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{System.Collections.Generic.IEnumerable{``2},``4}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>leftOuterJoin</value>
          </argument>
          <assignment name="IsLikeGroupJoin">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="JoinConditionWord">
            <type api="T:System.String" ref="true" />
            <value>on</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="c7927ba3-e1cb-d4a1-ee0b-27177153e703" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.MaxBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})">
      <topicdata group="api" />
      <apidata name="MaxBy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
        <template name="TValue" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.MaxBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.MaxBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="valueSelector">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.MaxBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
              <template name="TValue" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.MaxBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.ProjectionParameterAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <template name="TValue" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.MaxBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>maxBy</value>
          </argument>
        </attribute>
      </attributes>
      <file name="176c09c0-6890-4e92-1074-365732f27a5a" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.MaxByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})">
      <topicdata group="api" />
      <apidata name="MaxByNullable" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
        <template name="TValue">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.MaxByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.MaxByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="valueSelector">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.MaxByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <template name="TValue" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.MaxByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
                </specialization>
              </type>
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.ProjectionParameterAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <template name="TValue" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.MaxByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>maxByNullable</value>
          </argument>
        </attribute>
      </attributes>
      <file name="0e5977d0-f687-203c-ac40-5899b905218c" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.MinBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})">
      <topicdata group="api" />
      <apidata name="MinBy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
        <template name="TValue" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.MinBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.MinBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="valueSelector">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.MinBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
              <template name="TValue" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.MinBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.ProjectionParameterAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <template name="TValue" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.MinBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>minBy</value>
          </argument>
        </attribute>
      </attributes>
      <file name="1c22e456-5978-97db-ca29-d9f970b0c092" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.MinByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})">
      <topicdata group="api" />
      <apidata name="MinByNullable" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
        <template name="TValue">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.MinByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.MinByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="valueSelector">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.MinByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <template name="TValue" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.MinByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
                </specialization>
              </type>
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.ProjectionParameterAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <template name="TValue" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.MinByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>minByNullable</value>
          </argument>
        </attribute>
      </attributes>
      <file name="876cf089-cfcc-e30a-fa81-750a2d25393e" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.Nth``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},System.Int32)">
      <topicdata group="api" />
      <apidata name="Nth" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Nth``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},System.Int32)" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.Nth``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},System.Int32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Nth``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},System.Int32)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>nth</value>
          </argument>
        </attribute>
      </attributes>
      <file name="0b8c0650-1fa0-769e-d552-d33975232662" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.Quote``1(Microsoft.FSharp.Quotations.FSharpExpr{``0})">
      <topicdata group="api" />
      <apidata name="Quote" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="q">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Quote``1(Microsoft.FSharp.Quotations.FSharpExpr{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Quote``1(Microsoft.FSharp.Quotations.FSharpExpr{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <file name="d3412639-c061-b418-607e-92ae9bba8a7f" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.Run``1(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Linq.QuerySource{``0,System.Linq.IQueryable}})">
      <topicdata group="api" />
      <apidata name="Run" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="q">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr`1" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Run``1(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Linq.QuerySource{``0,System.Linq.IQueryable}})" />
                  <type api="T:System.Linq.IQueryable" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Linq.IQueryable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Run``1(Microsoft.FSharp.Quotations.FSharpExpr{Microsoft.FSharp.Linq.QuerySource{``0,System.Linq.IQueryable}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <file name="459a6858-3e7d-a1f2-1905-3dcd5285e7d6" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.Select``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})">
      <topicdata group="api" />
      <apidata name="Select" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Select``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.Select``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="projection">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Select``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
              <template name="TResult" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.Select``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.ProjectionParameterAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
          <specialization>
            <template name="TResult" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.Select``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
            <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.Select``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>select</value>
          </argument>
          <assignment name="AllowIntoPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="a8656d95-5360-6551-c56f-f5c4eb4cda91" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.Skip``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},System.Int32)">
      <topicdata group="api" />
      <apidata name="Skip" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Skip``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},System.Int32)" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.Skip``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},System.Int32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Skip``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},System.Int32)" />
            <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.Skip``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},System.Int32)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>skip</value>
          </argument>
          <assignment name="MaintainsVariableSpace">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="AllowIntoPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="ab68fd71-7f56-fca6-a2ff-c286912b8ded" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.SkipWhile``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})">
      <topicdata group="api" />
      <apidata name="SkipWhile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.SkipWhile``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.SkipWhile``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.SkipWhile``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.ProjectionParameterAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.SkipWhile``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
            <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.SkipWhile``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>skipWhile</value>
          </argument>
          <assignment name="MaintainsVariableSpace">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="AllowIntoPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="96bd3624-a396-c963-789f-6d134767a065" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.SortBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})">
      <topicdata group="api" />
      <apidata name="SortBy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.SortBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.SortBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.SortBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
              <template name="TKey" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.SortBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.ProjectionParameterAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.SortBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
            <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.SortBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>sortBy</value>
          </argument>
          <assignment name="MaintainsVariableSpace">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="AllowIntoPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="f797615f-4ca9-e49f-f901-737d6934e3d4" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.SortByDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})">
      <topicdata group="api" />
      <apidata name="SortByDescending" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.SortByDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.SortByDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.SortByDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
              <template name="TKey" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.SortByDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.ProjectionParameterAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.SortByDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
            <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.SortByDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>sortByDescending</value>
          </argument>
          <assignment name="MaintainsVariableSpace">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="AllowIntoPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="c6ecf48f-e9ce-e71c-5bd4-2653fbacff62" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.SortByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})">
      <topicdata group="api" />
      <apidata name="SortByNullable" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
        <template name="TKey">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.SortByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.SortByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.SortByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <template name="TKey" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.SortByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
                </specialization>
              </type>
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.ProjectionParameterAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.SortByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
            <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.SortByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>sortByNullable</value>
          </argument>
          <assignment name="MaintainsVariableSpace">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="AllowIntoPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="deff7920-20c0-5986-4770-f5a34cd55ca8" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.SortByNullableDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})">
      <topicdata group="api" />
      <apidata name="SortByNullableDescending" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
        <template name="TKey">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.SortByNullableDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.SortByNullableDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.SortByNullableDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <template name="TKey" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.SortByNullableDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
                </specialization>
              </type>
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.ProjectionParameterAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.SortByNullableDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
            <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.SortByNullableDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>sortByNullableDescending</value>
          </argument>
          <assignment name="MaintainsVariableSpace">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="AllowIntoPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="a1ea9cd8-3a5b-c06d-e53c-66ff21497a0d" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.Source``1(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="Source" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.FSharp.Linq.QueryBuilder.Source" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Source``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Source``1(System.Collections.Generic.IEnumerable{``0})" />
            <type api="T:System.Collections.IEnumerable" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <file name="18080a57-f8ec-66a8-03a3-efe7925ac618" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.Source``2(System.Linq.IQueryable{``0})">
      <topicdata group="api" />
      <apidata name="Source" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.FSharp.Linq.QueryBuilder.Source" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Linq.IQueryable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Source``2(System.Linq.IQueryable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Source``2(System.Linq.IQueryable{``0})" />
            <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.Source``2(System.Linq.IQueryable{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <file name="be9746bd-c80a-6f5a-af48-c367dba7ff97" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.SumBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})">
      <topicdata group="api" />
      <apidata name="SumBy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
        <template name="TValue" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.SumBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.SumBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="projection">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.SumBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
              <template name="TValue" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.SumBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.ProjectionParameterAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <template name="TValue" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.SumBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>sumBy</value>
          </argument>
        </attribute>
      </attributes>
      <file name="6eda556d-7faf-3d0a-b870-e83f4699d808" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.SumByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})">
      <topicdata group="api" />
      <apidata name="SumByNullable" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
        <template name="TValue">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.SumByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.SumByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="valueSelector">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.SumByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <template name="TValue" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.SumByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
                </specialization>
              </type>
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.ProjectionParameterAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <template name="TValue" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.SumByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>sumByNullable</value>
          </argument>
        </attribute>
      </attributes>
      <file name="a3d06be4-d7c5-88a5-d087-e9d5f53e8bbc" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.Take``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},System.Int32)">
      <topicdata group="api" />
      <apidata name="Take" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Take``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},System.Int32)" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.Take``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},System.Int32)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Take``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},System.Int32)" />
            <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.Take``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},System.Int32)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>take</value>
          </argument>
          <assignment name="MaintainsVariableSpace">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="AllowIntoPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="6f6b9e09-bfb7-193e-9eba-83da6797406a" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.TakeWhile``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})">
      <topicdata group="api" />
      <apidata name="TakeWhile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.TakeWhile``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.TakeWhile``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.TakeWhile``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.ProjectionParameterAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.TakeWhile``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
            <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.TakeWhile``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>takeWhile</value>
          </argument>
          <assignment name="MaintainsVariableSpace">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="AllowIntoPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="70b884fa-fdb3-2c8e-a57a-ebf0b0a326f9" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.ThenBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})">
      <topicdata group="api" />
      <apidata name="ThenBy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.ThenBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.ThenBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.ThenBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
              <template name="TKey" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.ThenBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.ProjectionParameterAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.ThenBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
            <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.ThenBy``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>thenBy</value>
          </argument>
          <assignment name="MaintainsVariableSpace">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="AllowIntoPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="80987dfc-4320-d46e-7044-c64073a3ba70" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.ThenByDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})">
      <topicdata group="api" />
      <apidata name="ThenByDescending" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
        <template name="TKey" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.ThenByDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.ThenByDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.ThenByDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
              <template name="TKey" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.ThenByDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.ProjectionParameterAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.ThenByDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
            <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.ThenByDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,``2})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>thenByDescending</value>
          </argument>
          <assignment name="MaintainsVariableSpace">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="AllowIntoPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="73f6c44e-ba67-33e6-734d-5fe1c077afd5" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.ThenByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})">
      <topicdata group="api" />
      <apidata name="ThenByNullable" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
        <template name="TKey">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.ThenByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.ThenByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.ThenByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <template name="TKey" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.ThenByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
                </specialization>
              </type>
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.ProjectionParameterAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.ThenByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
            <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.ThenByNullable``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>thenByNullable</value>
          </argument>
          <assignment name="MaintainsVariableSpace">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="AllowIntoPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="304975f6-d690-b7b5-4d6f-29014e97e485" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.ThenByNullableDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})">
      <topicdata group="api" />
      <apidata name="ThenByNullableDescending" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
        <template name="TKey">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.ThenByNullableDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.ThenByNullableDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="keySelector">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.ThenByNullableDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
              <type api="T:System.Nullable`1" ref="false">
                <specialization>
                  <template name="TKey" index="2" api="M:Microsoft.FSharp.Linq.QueryBuilder.ThenByNullableDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
                </specialization>
              </type>
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.ProjectionParameterAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.ThenByNullableDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
            <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.ThenByNullableDescending``3(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Nullable{``2}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>thenByNullableDescending</value>
          </argument>
          <assignment name="MaintainsVariableSpace">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="AllowIntoPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="1d90feab-6066-f6d8-13dc-44f4b79e39fd" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.Where``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})">
      <topicdata group="api" />
      <apidata name="Where" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Where``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.Where``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="predicate">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Where``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.ProjectionParameterAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Where``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
            <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.Where``2(Microsoft.FSharp.Linq.QuerySource{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>where</value>
          </argument>
          <assignment name="MaintainsVariableSpace">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="AllowIntoPattern">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="b724b7f0-6816-7de4-8cc8-fe2fd2e4e50c" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.Yield``2(``0)">
      <topicdata group="api" />
      <apidata name="Yield" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Yield``2(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Yield``2(``0)" />
            <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.Yield``2(``0)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <file name="aa55ab81-9163-20e6-36c8-4797e02a7764" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.YieldFrom``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})">
      <topicdata group="api" />
      <apidata name="YieldFrom" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
      </templates>
      <parameters>
        <parameter name="computation">
          <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.YieldFrom``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
              <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.YieldFrom``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.YieldFrom``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
            <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.YieldFrom``2(Microsoft.FSharp.Linq.QuerySource{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <file name="f7d5db33-68f2-ae50-6bb2-439e16a92166" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QueryBuilder.Zero``2">
      <topicdata group="api" />
      <apidata name="Zero" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="Q" />
      </templates>
      <returns>
        <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Linq.QueryBuilder.Zero``2" />
            <template name="Q" index="1" api="M:Microsoft.FSharp.Linq.QueryBuilder.Zero``2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </containers>
      <file name="0281cb20-7056-2ad6-09ef-433899eab840" />
    </api>
    <api id="T:Microsoft.FSharp.Linq.QuerySource`2">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Linq.QuerySource`2" />
      <apidata name="QuerySource" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
        <template name="Q" />
      </templates>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoComparisonAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoEqualityAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="c4a82de1-c8de-1a66-7744-00368d46927b" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Linq.QuerySource`2">
      <topicdata name="QuerySource" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Linq.QuerySource`2" />
      <apidata name="QuerySource" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <templates>
        <template name="T" />
        <template name="Q" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Linq.QuerySource`2.#ctor(System.Collections.Generic.IEnumerable{`0})" />
        <element api="P:Microsoft.FSharp.Linq.QuerySource`2.Source" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QuerySource`2" />
      </containers>
      <file name="a389c430-1a21-17ea-ed5b-820e6a30d6ab" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Linq.QuerySource`2">
      <topicdata name="QuerySource" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Linq.QuerySource`2" />
      <apidata name="QuerySource" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <templates>
        <template name="T" />
        <template name="Q" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QuerySource`2" />
      </containers>
      <file name="f383f0cf-bc6e-21d0-97da-4dbf7f3578af" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Linq.QuerySource`2">
      <topicdata name="QuerySource" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Linq.QuerySource`2" />
      <apidata name="QuerySource" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <templates>
        <template name="T" />
        <template name="Q" />
      </templates>
      <elements>
        <element api="P:Microsoft.FSharp.Linq.QuerySource`2.Source" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QuerySource`2" />
      </containers>
      <file name="c2119a8c-7178-c98b-d8b8-20629e668b74" />
    </api>
    <api id="M:Microsoft.FSharp.Linq.QuerySource`2.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Microsoft.FSharp.Linq.QuerySource`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true" />
      </containers>
      <file name="b4d6c9c9-0f4d-3011-5fdf-cc51fbc20c72" />
    </api>
    <api id="P:Microsoft.FSharp.Linq.QuerySource`2.Source">
      <topicdata group="api" />
      <apidata name="Source" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Source" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Microsoft.FSharp.Linq.QuerySource`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Linq" />
        <type api="T:Microsoft.FSharp.Linq.QuerySource`2" ref="true" />
      </containers>
      <file name="aa2b4eb4-ef37-3338-2982-28b95c9450c4" />
    </api>
  </apis>
</reflection>