<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="Microsoft.VisualC.STLCLR">
      <assemblydata version="2.0.0.0" culture="" key="002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.VisualC.STLCLR</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>STLCLR cross assembly library</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTrademarkAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>STLCLR</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:Microsoft.VisualC.StlClr.Generic">
      <topicdata group="api" />
      <apidata name="Microsoft.VisualC.StlClr.Generic" group="namespace" />
      <elements>
        <element api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1" />
        <element api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1" />
        <element api="T:Microsoft.VisualC.StlClr.Generic.INode`1" />
        <element api="T:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1" />
        <element api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" />
        <element api="T:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1" />
        <element api="T:Microsoft.VisualC.StlClr.Generic.IForwardIterator`1" />
        <element api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" />
        <element api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />
        <element api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
        <element api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
        <element api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
        <element api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
        <element api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
        <element api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
        <element api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
        <element api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      </elements>
      <file name="82fcf9bc-0282-5c06-6be7-92ae0d4776d7" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
      <apidata name="ConstContainerBidirectionalIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="b65fba7a-9985-f639-7d05-38efc5fd255b" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1">
      <topicdata name="ConstContainerBidirectionalIterator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
      <apidata name="ConstContainerBidirectionalIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.Clone" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.container" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.get_cref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.get_ref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.next" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0}" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.prev" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.valid" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
      </containers>
      <file name="15f8e341-265a-fa22-36b5-4c8a89bfee52" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1">
      <topicdata name="ConstContainerBidirectionalIterator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
      <apidata name="ConstContainerBidirectionalIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.Clone" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.container" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.get_cref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.get_ref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.next" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.prev" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.valid" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
      </containers>
      <file name="cf4914fc-d7a9-8afb-2445-8d60e7444d3a" />
    </api>
    <api id="Operators.T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1">
      <topicdata name="ConstContainerBidirectionalIterator" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
      <apidata name="ConstContainerBidirectionalIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0}" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
      </containers>
      <file name="9d814773-a193-0381-0386-0f033afb589a" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="ceae3d37-9a46-6cca-2384-5e0b5274c12d" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to">
      <topicdata name="equal_to" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="b0e21421-62d7-095b-3e52-95c17136df64" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign">
      <topicdata name="Assign" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
      <apidata name="Assign" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="0961a0c4-bcd7-7f4c-662b-82d4f4efa3d7" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement">
      <topicdata name="Decrement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="99e9cb3e-9d86-2761-8bf2-8f2e7e52ce7a" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality">
      <topicdata name="Equality" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="62075bc2-7967-356d-5e4a-260657823462" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment">
      <topicdata name="Increment" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="7d592da5-64ab-a61e-7778-6f7da6294424" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality">
      <topicdata name="Inequality" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="af7b777c-5323-41dc-cc32-25605c885e74" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="992bfee4-1f4e-d8ae-357b-91ba53e7b425" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor" />
      <parameters>
        <parameter name="_Node">
          <type api="T:Microsoft.VisualC.StlClr.Generic.INode`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="aa36efdf-d055-6168-b13e-2a46ec7bc576" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="b329adb8-bc13-469d-f62d-db1a76bfc1fb" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.#ctor" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="8ba470c4-f6cf-d655-dbd4-0fdab8055911" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="c0f733c0-2ae6-2c18-80e7-731e9c2d5da3" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.container">
      <topicdata group="api" />
      <apidata name="container" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="af3bbb53-a6c5-e428-3c7d-cad1c5a82755" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="65678f08-7128-7f33-fbf1-245f6d9f5f75" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.equal_to" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="42caf9c5-5716-b65a-f916-3e04c3eab118" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.get_bias">
      <topicdata group="api" />
      <apidata name="get_bias" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="76e47846-7486-9fea-e30d-3f9f9a242406" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.get_cref">
      <topicdata group="api" />
      <apidata name="get_cref" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="04378122-9217-dd62-4c2a-90ad0965b8a5" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.get_node">
      <topicdata group="api" />
      <apidata name="get_node" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="8cd91dd2-9f56-6848-3d06-eb7fbfe36658" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.get_ref">
      <topicdata group="api" />
      <apidata name="get_ref" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="d2117885-124c-a18d-0984-8339de5aea3a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.next">
      <topicdata group="api" />
      <apidata name="next" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="020bad96-ff00-33ef-9ea1-8d89c9d1b65d" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Assign" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
          </specialization>
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="8c373ae6-375a-0e8a-3c14-18880c0bc7d0" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Assign" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Assign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
          </specialization>
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="2b516788-c892-d711-0ef4-027f027d5b02" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="14fd2299-7178-bc78-d8cb-8abe4a54eb9a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Decrement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="A_0">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="4d834042-b12b-67f0-6244-a09b723b4022" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="3df4c161-b6a7-5b6c-91d1-80dcf4835f2a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Equality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="918b264d-67e3-f8ee-873f-632eccb17f74" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0}">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="38422ec3-86d3-6a6a-d2bd-357e8ad9d424" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="6db43b31-e4ff-b3f3-5332-288cac7814e2" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Increment" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="A_0">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="d1271fab-45cd-b46a-c969-cbd864a27838" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="d8fcb618-59d1-16e4-d4af-c270526d77c7" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_Inequality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="4b8c5348-657b-03b4-73ce-1acbeaf024e7" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="MemberSelection" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="7dbfc3c8-8276-16a2-6310-87a09759013f" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="PointerDereference" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="a17509ed-c173-6787-65e1-e737858bc329" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.prev">
      <topicdata group="api" />
      <apidata name="prev" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1.prev">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="91a3fade-ff88-46fe-0bdf-f4ed048bdc2e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1.valid">
      <topicdata group="api" />
      <apidata name="valid" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="50d753ae-b176-0055-8f68-70f7ce33dc57" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="ConstContainerRandomAccessIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="02c3470c-b760-62a9-e244-fa7859206bad" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1">
      <topicdata name="ConstContainerRandomAccessIterator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="ConstContainerRandomAccessIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer{`0},System.Int32)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.Clone" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.container" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.get_cref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.get_ref" />
        <element api="P:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.Item(System.Int32)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.move(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.next" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0}" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.prev" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.valid" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      </containers>
      <file name="d1b44591-acb7-99c4-c9b1-9ea27b1abb07" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1">
      <topicdata name="ConstContainerRandomAccessIterator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="ConstContainerRandomAccessIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.Clone" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.container" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.get_cref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.get_ref" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.move(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.next" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.prev" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.valid" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      </containers>
      <file name="30ec03f9-1cbf-4cd5-257d-3815f38fa513" />
    </api>
    <api id="Operators.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1">
      <topicdata name="ConstContainerRandomAccessIterator" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="ConstContainerRandomAccessIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0}" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)" />
        </element>
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      </containers>
      <file name="de949285-7e21-7b36-038a-5284c7301318" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1">
      <topicdata name="ConstContainerRandomAccessIterator" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="ConstContainerRandomAccessIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      </containers>
      <file name="f6521313-7665-30c6-c211-74d5e39c9a53" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer{`0},System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="6b445bf6-d4d5-6c7e-71fb-7ee7bdc0277e" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance">
      <topicdata name="distance" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="distance" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="80e13a90-522c-10ed-ac6a-e73870a1edc6" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to">
      <topicdata name="equal_to" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="15fd2a3e-674c-a978-6afd-84e12b14730e" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than">
      <topicdata name="less_than" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="less_than" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="9b205e36-84fd-5407-1353-186a591348c0" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition">
      <topicdata name="Addition" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="779870b9-9d9d-183d-0436-126e5d58994c" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign">
      <topicdata name="Assign" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="Assign" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="f24d8bb5-2323-a8e0-e465-43b637f3a803" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement">
      <topicdata name="Decrement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="75507d55-6d84-777c-35a0-46992d4d1fea" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality">
      <topicdata name="Equality" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="0d922d5f-9f26-3efb-cf13-fc4e583ba62f" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan">
      <topicdata name="GreaterThan" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="c87285a3-a7ab-eeae-b63a-d316806ffbc7" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual">
      <topicdata name="GreaterThanOrEqual" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="3470e933-cd42-6219-f2cf-64afef5a8f10" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment">
      <topicdata name="Increment" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="c83f0d19-d4b3-b3b0-c306-ce949f27a521" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality">
      <topicdata name="Inequality" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="64f0db3b-2b8c-724a-f6b0-a61bab4a0e07" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan">
      <topicdata name="LessThan" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="ce0e9f94-723a-0d5f-18cd-be3fd7255dba" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual">
      <topicdata name="LessThanOrEqual" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="108d800e-d524-9fac-31dc-d8f10d046e3e" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction">
      <topicdata name="Subtraction" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="44802f4e-c90b-97eb-6a4b-e26201d395e8" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="a18a29c7-d55c-3b8c-fa33-ab5cdd7b3f6e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer{`0},System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor" />
      <parameters>
        <parameter name="_Cont">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_Offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="fa826a41-41c1-8cc2-4ba2-c94ef31dd215" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="70f1fc6c-4716-0fae-c483-d2c931a17583" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.#ctor" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="98fbf664-152e-c14d-01c2-463118cc9988" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="9a297d75-3304-7f98-dfd0-9ac177e67062" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.container">
      <topicdata group="api" />
      <apidata name="container" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="6c42f608-e59a-c5ab-9914-a25eb4e8ad23" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name="distance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="df40f1be-9aa5-b628-b6e1-010a0269eebc" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="distance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.distance" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="313dfedc-dc3d-4065-2cbd-dc78e849ec3c" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="f2e3ca45-ddde-a421-b00c-e441cde2e5ec" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.equal_to" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="5c697f30-af06-2428-decc-635e76292c35" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.get_bias">
      <topicdata group="api" />
      <apidata name="get_bias" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="3c64a626-1f60-7310-d3cd-9854b4fdae7c" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.get_cref">
      <topicdata group="api" />
      <apidata name="get_cref" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="a6aee456-2a6e-ef52-c3b6-2c46f9a3145e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.get_node">
      <topicdata group="api" />
      <apidata name="get_node" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="159fde4b-3fb1-9ed1-0afe-9363be223a40" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.get_ref">
      <topicdata group="api" />
      <apidata name="get_ref" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="d7a1f7de-c649-81e7-64de-80484ece1354" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="_Pos">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="03de2d3f-03fe-16f5-221a-24c1c622ca1f" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name="less_than" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="d8e6f084-f671-450c-7a34-d54ad4fd9553" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="less_than" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.less_than" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="e450abe2-1a55-21dc-ecfe-af8d45bbbc6e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.move(System.Int32)">
      <topicdata group="api" />
      <apidata name="move" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.move(System.Int32)">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="00bf8111-90d4-5c24-4b50-8d1172cf21b7" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.next">
      <topicdata group="api" />
      <apidata name="next" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="e2eada8e-e40a-8c3a-f2df-ab199de36ad1" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Right">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="936c8306-e06e-3748-3787-9be30284a1de" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Addition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Left">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="cb764d0d-6218-03d3-c257-495a6b0d6fd2" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Assign" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
          </specialization>
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="da65769a-49b1-1422-7b33-314a5f3aae99" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Assign" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Assign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
          </specialization>
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="6c2dd181-9156-9551-bea4-188b0d9e71c3" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="662f9a89-669b-060f-dc69-9a62faa61eb4" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Decrement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="A_0">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="f662addb-1a3c-c212-f37e-885d6ed6aafe" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="29ec471a-8be0-ee2b-8f24-3bb71995a234" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Equality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="1851d90a-8b60-8ae4-b011-3284aaaf41c5" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="c745a4db-5b99-3758-c5f3-a8d3e3afa7ca" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThan" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="688f084a-649a-0f82-30fb-0fedf539158b" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="7406812a-8092-a097-0bc5-36423fb2aca5" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_GreaterThanOrEqual" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="360e0b5d-d5f5-7da1-fa84-e6f4925f3500" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0}">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="e7d431df-93c8-8989-da43-e9a6fc8da5f4" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="407e4cb0-bdbc-c93a-b236-355463f4b36c" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Increment" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="A_0">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="b34dd987-ce73-43d9-6f2e-04ed3e71ef9a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="3f4863d1-3e6c-2014-ada6-26d5c943072c" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Inequality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="e6dde0a0-eeba-146d-5a2b-e74f45b425d3" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="70c7cdb2-54f7-d30c-cdf0-56f404d0ce88" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThan" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="d92c2683-07b5-9d1b-63d7-174c728fdc8c" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="980a8a08-00ec-8ab0-bceb-e63221e15ed0" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_LessThanOrEqual" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="f6165342-0639-6c5c-8f4a-12a6c71e6803" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="MemberSelection" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="0bd74138-9301-0bf4-84f7-8e161b233993" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="PointerDereference" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="3193caa5-90be-5537-0e6e-92cd2a0cc1d5" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Right">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="16cc5c51-c2fe-54a9-3e7b-4d658413207f" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.op_Subtraction" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="c4c6d086-656a-79a7-dc77-6dd532474fb5" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.prev">
      <topicdata group="api" />
      <apidata name="prev" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="9054968e-88cc-546f-fff8-6efa7cc54ae5" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1.valid">
      <topicdata group="api" />
      <apidata name="valid" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="b034054a-6b7f-4396-a036-de8f3cbbed25" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
      <apidata name="ConstReverseBidirectionalIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="2658fe4d-7b2d-dcbf-adb0-2f8f5fff5900" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1">
      <topicdata name="ConstReverseBidirectionalIterator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
      <apidata name="ConstReverseBidirectionalIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.base" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.Clone" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.container" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.get_cref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.get_ref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.next" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0}" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.prev" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.valid" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
      </containers>
      <file name="2e9eced8-6ed9-eb5a-59c5-b875bec9bc64" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1">
      <topicdata name="ConstReverseBidirectionalIterator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
      <apidata name="ConstReverseBidirectionalIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.base" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.Clone" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.container" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.get_cref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.get_ref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.next" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.prev" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.valid" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
      </containers>
      <file name="54089292-10ad-8ed4-6aeb-737e01773aab" />
    </api>
    <api id="Operators.T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1">
      <topicdata name="ConstReverseBidirectionalIterator" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
      <apidata name="ConstReverseBidirectionalIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0}" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
      </containers>
      <file name="279be205-c8a4-8058-59f0-24e5a3c250dd" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="c1fbf5d3-6c92-1bb7-3e89-440860299118" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to">
      <topicdata name="equal_to" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="32d9c378-2361-a2f7-ab53-63e7c3785b09" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign">
      <topicdata name="Assign" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
      <apidata name="Assign" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="ff347cfa-8b5e-1a81-a8a8-77a6d41a9fcb" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement">
      <topicdata name="Decrement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="ef2132db-10ea-30d4-ed4e-f6bc01c395cc" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality">
      <topicdata name="Equality" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="566e1ed3-f022-eb8d-8f4d-d2052b8fcd78" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment">
      <topicdata name="Increment" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="d45785c0-b306-014e-e284-1c73f640d491" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality">
      <topicdata name="Inequality" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="8f825b5b-79bd-26dc-4cb1-122afb59b2f0" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="72a21b39-62ca-0fb5-a1ad-6f453302da01" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor" />
      <parameters>
        <parameter name="_Iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="4480d3cc-7ed1-a263-48bd-12529f2c654f" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="e05793ac-f829-c7cf-4fa9-9de1fa957f7d" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.#ctor" />
      <parameters>
        <parameter name="_Iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="ee35a277-eee8-d510-db0a-400149f4c442" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.base">
      <topicdata group="api" />
      <apidata name="base" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="4f56d57a-f4c7-e7b9-7af3-54af0d751aa4" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="5294c99f-c51b-ec96-cc13-f8e7f659aaff" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.container">
      <topicdata group="api" />
      <apidata name="container" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="ce6eb134-8585-8926-c1ff-7f54d0bb04aa" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="3718196f-714a-f2d7-b983-dbb104b41458" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.equal_to" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="7313b780-ff70-46dd-4e0d-ef83fde77910" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.get_bias">
      <topicdata group="api" />
      <apidata name="get_bias" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="2e4aa7e4-e480-e63d-7c75-0210f2b9d107" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.get_cref">
      <topicdata group="api" />
      <apidata name="get_cref" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="e495dfb3-81e2-73e2-f351-a2e704072cf3" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.get_node">
      <topicdata group="api" />
      <apidata name="get_node" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="72f98a3f-9232-8082-fe2b-a4df10f934ce" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.get_ref">
      <topicdata group="api" />
      <apidata name="get_ref" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="eacd3f98-82ac-38cc-2b07-2d1bc39ff39d" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.next">
      <topicdata group="api" />
      <apidata name="next" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="30557bde-0100-ae1c-d27d-eab8d674fd4a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Assign" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
          </specialization>
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="32bf0e03-97f1-3a04-0c82-ec43b0c86f51" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Assign" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Assign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
          </specialization>
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="2032b7ee-2e48-3a96-c762-4dbf058b5830" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="c5285992-2fb5-8cf6-a3c8-6aabcf4cc176" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Decrement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="A_0">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="6e200a7e-b8dd-4cd8-e4e4-39e985199633" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="c4bb20f8-e543-3be8-8bcb-c3f096bf61ef" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Equality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="d9f179f0-f45c-a9df-156a-69f3803073f4" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0}">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="2b58ab6e-9f31-8a19-3240-17a406dbfe89" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="ea33ed50-9fef-e018-9137-075928565a00" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Increment" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="A_0">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="a36c910e-110e-bc21-4204-b0247208d6fd" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="f7fc3913-0244-1f2d-7620-2756a92850d7" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_Inequality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="3bdc0c71-451e-bccb-d6bb-1466531fe809" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="MemberSelection" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="a6248ee4-d13a-277b-0c27-d783edfcc2de" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="PointerDereference" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="923d8215-ccbc-8d1f-e936-e58ba568db96" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.prev">
      <topicdata group="api" />
      <apidata name="prev" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1.prev">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="50ceaf65-fe76-c8bf-8bc7-8425c262848e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1.valid">
      <topicdata group="api" />
      <apidata name="valid" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="1b1ebb66-7756-35d6-c65d-fa5d87a741da" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
      <apidata name="ConstReverseRandomAccessIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="ad3f3b77-3f90-8be3-0710-3faa1adb59b0" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1">
      <topicdata name="ConstReverseRandomAccessIterator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
      <apidata name="ConstReverseRandomAccessIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.base" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.Clone" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.container" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.get_cref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.get_ref" />
        <element api="P:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.Item(System.Int32)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.move(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.next" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Addition">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Assign">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Decrement">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0}" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Increment">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Subtraction">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.prev" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.valid" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
      </containers>
      <file name="36573d8f-adb4-7cf1-3aab-8adec2e9ac12" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1">
      <topicdata name="ConstReverseRandomAccessIterator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
      <apidata name="ConstReverseRandomAccessIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.base" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.Clone" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.container" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.get_cref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.get_ref" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.move(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.next" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.prev" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.valid" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
      </containers>
      <file name="9461b67b-b21b-6a02-6a55-4d79da95fe6b" />
    </api>
    <api id="Operators.T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1">
      <topicdata name="ConstReverseRandomAccessIterator" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
      <apidata name="ConstReverseRandomAccessIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Addition">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Assign">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Decrement">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0}" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Increment">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Subtraction">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)" />
        </element>
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
      </containers>
      <file name="863db088-d2b6-9b21-cf83-3b82a6435349" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1">
      <topicdata name="ConstReverseRandomAccessIterator" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
      <apidata name="ConstReverseRandomAccessIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
      </containers>
      <file name="a00caed2-0e6b-b0cc-fe6c-86d97a904131" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="49ca5922-698a-0daf-8898-1112ee5ff560" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance">
      <topicdata name="distance" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
      <apidata name="distance" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="9d0a4831-059f-5ac2-2a16-14982ea2fa8b" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to">
      <topicdata name="equal_to" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="2ae6eff1-224f-872e-708d-309711247a10" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than">
      <topicdata name="less_than" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
      <apidata name="less_than" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="edeb10c3-240c-c883-de29-373b0bb77dc6" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Addition">
      <topicdata name="Addition" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="f4e135d3-c07d-ddf1-43b4-6a7ddb396d0e" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Assign">
      <topicdata name="Assign" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
      <apidata name="Assign" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="c8a2e077-5235-6fe1-f7e0-1e025931b5ac" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Decrement">
      <topicdata name="Decrement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="9f5ae1f1-790f-efa0-9837-bb29c0776f48" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Increment">
      <topicdata name="Increment" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="ecea3710-86e9-b7f4-4102-57466ff46179" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Subtraction">
      <topicdata name="Subtraction" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="e10f9cb2-f17b-2a92-25af-9e8954f71931" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="31bdb9fb-b6ec-f605-3047-fd684a92180c" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor" />
      <parameters>
        <parameter name="_Iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="2f405688-24b2-8dfb-65c8-b1bcb14e0482" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="8868f53f-4c58-4f5a-8de9-2db40cb1441e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.#ctor" />
      <parameters>
        <parameter name="_Iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="53a1e8a3-1e9b-2ba6-ac26-2fac01fc7848" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.base">
      <topicdata group="api" />
      <apidata name="base" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="65452d2f-e89f-0e17-d345-31a9ac092eca" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="231b8b27-1c25-db65-f9b2-d32831fff7d2" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.container">
      <topicdata group="api" />
      <apidata name="container" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="34e58c86-ad09-cdb8-9060-ffad990a4b35" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name="distance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="d051dae4-0486-77cc-1815-6b6f827c742a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="distance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.distance" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="779f42b8-9259-1f10-859d-e5447de8e0c3" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="54ab0ee3-e44d-8824-55fc-6e3fe47d55e3" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.equal_to" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="c4fec3b7-2f97-b4b5-057d-7de90067aa0d" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.get_bias">
      <topicdata group="api" />
      <apidata name="get_bias" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="613f9fd4-f68c-4824-9de9-882783d0edc0" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.get_cref">
      <topicdata group="api" />
      <apidata name="get_cref" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="416e628f-3b51-0f5b-ef53-8c9526cd54ed" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.get_node">
      <topicdata group="api" />
      <apidata name="get_node" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="371a723b-7e20-226b-3e81-e81f5420fb70" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.get_ref">
      <topicdata group="api" />
      <apidata name="get_ref" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="811aff1c-de30-7d37-8923-9e996d565356" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="_Pos">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="d5d52da9-5d46-6b85-bad5-6768291e75bf" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name="less_than" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="a94cbf69-94dc-ea3c-d16d-a188534a9131" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="less_than" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.less_than" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="aaffe644-46a4-c60a-6051-a805c8ac98d0" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.move(System.Int32)">
      <topicdata group="api" />
      <apidata name="move" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.move(System.Int32)">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="64ebe2ed-37c1-b1fa-b15c-6042a750dfd4" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.next">
      <topicdata group="api" />
      <apidata name="next" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="73f2bd9f-9ba8-2781-78df-6c01f2b9694e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Addition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Right">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="c3e1a4f4-4a96-1856-a29d-811b5d60ce32" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Addition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Left">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="f2cd6b27-3c7d-bdde-a928-75a0e5c84522" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Assign" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Assign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
          </specialization>
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="2cbb37cb-0de6-7b4f-5617-555899124815" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Assign" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Assign" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
          </specialization>
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="20734f25-d04e-2176-f23f-5436f7ecbfb7" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Decrement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="cc59f3d7-2dcb-5481-2363-a56f450672fc" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Decrement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="A_0">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="f874048a-ae78-d56e-c9bc-12d08add7245" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="08c22935-0e88-3049-ef9f-b5aaef45de7b" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="836794f3-e246-df43-caa5-781ae316c555" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="adfab8a7-42d3-31ae-99c8-bf67500b2645" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0}">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="069267e8-d2e8-a4f9-5c55-7518693af130" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Increment" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="4aac3fdd-88b4-2855-a78b-aa3356cf851b" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Increment" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="A_0">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="b33bb76f-ce6e-6b6b-d522-0c76eaebc23f" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="86caad13-2928-5404-c939-826251b58f24" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="27516ae7-51dc-fc49-cb0e-700d9043fced" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="8491cdd9-4c68-44b8-f7e9-b15bdd2ea84e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="MemberSelection" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="93243a92-5a5f-22bf-1f12-b02940b5a996" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="PointerDereference" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="e9ee42b8-1cb0-fc29-41dc-08ca2dee5182" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Subtraction" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Right">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="3c548975-5033-197d-ade8-9b9ab0504664" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.op_Subtraction" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="c1b38aac-e5d1-6cdd-39d6-548c13c86e30" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.prev">
      <topicdata group="api" />
      <apidata name="prev" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="a806feef-7cfb-5212-36ba-9f06ed441261" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1.valid">
      <topicdata group="api" />
      <apidata name="valid" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="88372346-074c-7713-61b8-4e7d8b58ee79" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
      <apidata name="ContainerBidirectionalIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="d056c67b-7cfa-3b1d-272a-71a2f507b641" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1">
      <topicdata name="ContainerBidirectionalIterator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
      <apidata name="ContainerBidirectionalIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.Clone" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.container" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.get_cref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.get_ref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.next" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0}" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.prev" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.valid" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
      </containers>
      <file name="91c2913f-3285-0f38-cd2b-895a038ddf45" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1">
      <topicdata name="ContainerBidirectionalIterator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
      <apidata name="ContainerBidirectionalIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.Clone" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.container" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.get_cref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.get_ref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.next" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.prev" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.valid" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
      </containers>
      <file name="cf0ceaff-e068-79b3-9352-60dce188d691" />
    </api>
    <api id="Operators.T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1">
      <topicdata name="ContainerBidirectionalIterator" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
      <apidata name="ContainerBidirectionalIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0}" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
      </containers>
      <file name="3ed9c436-8b10-702d-d799-e46d708e48ca" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="cd7851d7-3303-f98e-5c35-2018249d6408" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to">
      <topicdata name="equal_to" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="dbdc3351-0638-4bff-eb12-7f2f0f1dcd44" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement">
      <topicdata name="Decrement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="75979b12-60db-a366-b051-438c0e20df7f" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality">
      <topicdata name="Equality" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="3032157c-821f-9bd3-5b13-a929590495e5" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment">
      <topicdata name="Increment" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="cf29c29f-533e-c377-5887-b7718cc6e26c" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality">
      <topicdata name="Inequality" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="8e328d9c-8974-6342-23d4-198323da2d82" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="eeed6f2f-1979-4e0a-a015-68c3ed006910" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor" />
      <parameters>
        <parameter name="_Node">
          <type api="T:Microsoft.VisualC.StlClr.Generic.INode`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="188cdfdd-83de-b5a9-1f3b-584db3c025cc" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.#ctor" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="9b431625-5f52-64a3-ae8c-6314ef9d3129" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="b8974d79-a9ce-3d9d-1aff-325a0eb1d1b7" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.container">
      <topicdata group="api" />
      <apidata name="container" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="bd01743e-1e20-b9c0-b28d-e1dee606b9f9" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="02d8e374-7485-ce2f-d725-8c19699ac06f" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.equal_to" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="deed591c-d0c7-9429-79b7-6f55b6837960" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.get_bias">
      <topicdata group="api" />
      <apidata name="get_bias" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="34f96ade-a64f-996e-ba2c-8435af259adf" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.get_cref">
      <topicdata group="api" />
      <apidata name="get_cref" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="ae786741-060a-7c2a-9669-83071e4ae4cd" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.get_node">
      <topicdata group="api" />
      <apidata name="get_node" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="181b5b40-cd01-008d-8098-22a564d2b1e6" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.get_ref">
      <topicdata group="api" />
      <apidata name="get_ref" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="42d30ae2-104e-8649-747d-a47d95cc0a0a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.next">
      <topicdata group="api" />
      <apidata name="next" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="1fb0f4a6-138b-bca8-5273-96496747cfa7" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Assign" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
          </specialization>
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="a34a24c6-16fd-9dee-6edb-5158d3927d0e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="78530bcf-ea0b-f224-975e-38ec53329a8a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Decrement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="A_0">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="adb73feb-106d-d59e-258b-cfdef0e1b055" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="7151acc1-431a-d0c0-8605-c6037d226d16" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Equality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="1d56a6fa-1290-539c-022b-4185cdf9a4f7" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0}">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="89d993ea-5450-fe6a-9b1c-6a939fd29c2b" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="42ffa298-4037-b798-f09f-d3b60a5ed154" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Increment" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="A_0">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="05663722-4acc-1230-2951-9a9da17542bb" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="a35c4d8c-c0e1-9e7e-abb4-a0763e8d37d5" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_Inequality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="626fc0b0-c07b-3f88-fff5-827fa6d68dfc" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="MemberSelection" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="fda85728-ef4a-f0ed-db34-d1652650f16b" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="PointerDereference" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="8582a986-b31b-4b34-e8a9-9b80dacb9b4b" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.prev">
      <topicdata group="api" />
      <apidata name="prev" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1.prev">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="8ed49153-a4e9-81b1-d55e-948ce689b5c3" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1.valid">
      <topicdata group="api" />
      <apidata name="valid" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="46f328fd-ef26-e3c1-d098-193c76b3e82a" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name="ContainerRandomAccessIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="1c9b43ea-f743-f0f6-2c65-9a046a6a6535" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1">
      <topicdata name="ContainerRandomAccessIterator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name="ContainerRandomAccessIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer{`0},System.Int32)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Clone" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.container" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.get_cref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.get_ref" />
        <element api="P:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Item(System.Int32)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.move(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.next" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0}" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.prev" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.valid" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      </containers>
      <file name="bdadc115-e802-b510-8056-226dc390453c" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1">
      <topicdata name="ContainerRandomAccessIterator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name="ContainerRandomAccessIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Clone" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.container" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.get_cref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.get_ref" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.move(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.next" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.prev" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.valid" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      </containers>
      <file name="c4da0dd7-ffe9-e203-952b-a0a39da0d7ad" />
    </api>
    <api id="Operators.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1">
      <topicdata name="ContainerRandomAccessIterator" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name="ContainerRandomAccessIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0}" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)" />
        </element>
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      </containers>
      <file name="a9800475-d3fb-6026-e36b-7fb5a4d5d3f3" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1">
      <topicdata name="ContainerRandomAccessIterator" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name="ContainerRandomAccessIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      </containers>
      <file name="de5d5043-381c-ef61-4841-46317f607680" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer{`0},System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="32e7102b-e3b5-5de1-dfdb-cb072195b6c6" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance">
      <topicdata name="distance" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name="distance" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="88b78581-1165-ef53-9ef6-2e13fb9dd74a" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to">
      <topicdata name="equal_to" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="958180dd-82b2-839f-67b1-7676ed48a10f" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than">
      <topicdata name="less_than" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name="less_than" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="14347ec7-72bb-c569-8b2d-9ebd172b552e" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition">
      <topicdata name="Addition" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="e39b5f26-363f-1f7e-5a04-48ced45217ea" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement">
      <topicdata name="Decrement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="d00b4d75-2036-0549-8a05-381360560252" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality">
      <topicdata name="Equality" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="8ad85ed0-752b-42d7-77ce-654a9db0ba98" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan">
      <topicdata name="GreaterThan" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="4edf048f-32dc-64f5-84e3-0e693e5990fe" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual">
      <topicdata name="GreaterThanOrEqual" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="9e35737d-90c3-e8f5-9869-9b5858697f4f" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment">
      <topicdata name="Increment" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="b78c6004-5896-63b6-d796-084bafdc5174" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality">
      <topicdata name="Inequality" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="cf930804-fdae-ccb5-9518-4fb3e87eb342" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan">
      <topicdata name="LessThan" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="df0d04bb-7925-54fd-11a0-7f3564f3d15c" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual">
      <topicdata name="LessThanOrEqual" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="66f6d008-0590-18e6-5127-66700b420039" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction">
      <topicdata name="Subtraction" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="36305369-09a0-462f-7ed4-05677a206bd5" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="9590da0c-9abf-dd7b-e3f8-fa9808e9d6f9" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer{`0},System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor" />
      <parameters>
        <parameter name="_Cont">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_Offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="f29645c2-0e40-f1a3-1daa-60caaa6f0524" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.#ctor" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="d7b2908a-ce70-25aa-459c-87d5032913f1" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="7aa37d18-e658-57d1-24e3-8cea4ef0d809" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.container">
      <topicdata group="api" />
      <apidata name="container" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="15bba0ad-31a8-f4cc-91c2-f2fcae56e1f7" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name="distance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="d46deb96-56b9-6269-9a32-22609b748456" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="distance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.distance" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="d875fa96-6733-64d8-f8ab-6a8688a15616" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="9e83d67d-fa0d-221a-ad51-18a4c5a920c2" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.equal_to" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="35a81592-b04e-dd33-46fe-7c1e490331d2" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.get_bias">
      <topicdata group="api" />
      <apidata name="get_bias" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="da72cdda-f5ab-2e8e-9baa-6a36b6f97dc1" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.get_cref">
      <topicdata group="api" />
      <apidata name="get_cref" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="8a6cb7cd-b033-0884-f7ee-932a5db61d7b" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.get_node">
      <topicdata group="api" />
      <apidata name="get_node" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="1431bb1b-fa9b-7908-5f27-5ff2e4256721" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.get_ref">
      <topicdata group="api" />
      <apidata name="get_ref" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="dd4a88bd-3d85-3469-6e48-b698a9e1928b" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="_Pos">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="26bb4065-6b2a-470a-5afc-f9f7e5b22ef6" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name="less_than" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="9a45ab3f-ab87-1578-88d2-794fad62e248" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="less_than" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.less_than" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="1d086bc6-6c46-512b-cbd5-df844dbfe8c8" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.move(System.Int32)">
      <topicdata group="api" />
      <apidata name="move" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.move(System.Int32)">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="2e0f1a4d-1718-b9e6-34cf-fe2c6f801a76" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.next">
      <topicdata group="api" />
      <apidata name="next" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="d5de76cd-2063-a8e3-9f3c-bd0bbe7e5a8f" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Right">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="48c2276b-8fc0-b535-cfdc-1c4cd91d95f5" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Addition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Left">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="5bd9990f-09e0-cb38-e715-721be9812f3d" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Assign" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
          </specialization>
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="3bc9f4f7-ec70-0bcb-a102-b4298d8d9061" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="065f2575-b689-188e-12c3-08a2fe29e3b6" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Decrement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="A_0">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="2835325a-6ca2-0d6d-353f-817c5f467ead" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="977cb414-b6c9-61e9-2be0-c8cc8d6d9121" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Equality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="69f793fe-4247-0ff7-e065-08cf8ee6b4da" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="b7510bb4-cf60-25d7-6515-1ecdb935ae23" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThan" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="57b6deac-c232-85d6-ea3b-0a4b94ef5311" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="edf68d4b-bc7e-e45d-f01c-1942868732a9" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_GreaterThanOrEqual" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="48a6ce1e-784a-619e-1a6a-93c2abf47353" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0}">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="71166865-ad09-79a9-01ec-e8d33b23533f" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="a5c4a4c3-0af9-d819-eba8-f5fba67c88fe" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Increment" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="A_0">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="d621e205-5c62-19f5-dfa0-22b18cfad007" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="4216b6d4-ee1b-b79c-9d5c-7cfe61955ec2" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Inequality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="a07bc94c-5acc-ec9c-1fd8-7c1303a36e78" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="674c8b8f-cf78-2286-389d-c6a3f820e801" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThan" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="b3c12584-4d14-a3e7-910e-f56fe511d631" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0},Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="751722d8-0c36-d5c0-d792-0e92e6061e58" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_LessThanOrEqual" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="ea285712-b583-9996-2a1d-3d323d1be503" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="MemberSelection" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="6aba44ca-24b2-11d9-ed1b-163961e478fd" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="PointerDereference" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="668886a4-b27a-6dac-26af-8da9f76f1108" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Right">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="5cbf112b-8ff3-393b-f1e0-192f73d72370" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.op_Subtraction" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="eedffa40-1d91-9f3c-f937-c77ee7b1ae29" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.prev">
      <topicdata group="api" />
      <apidata name="prev" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="5c786e40-94ba-e605-fbca-ed708455592c" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1.valid">
      <topicdata group="api" />
      <apidata name="valid" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="98286a7c-a0af-4baa-1237-51ace13672e2" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1" />
      <apidata name="IBaseIterator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <implementors>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1" ref="true" />
      </implementors>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="e27ec6f9-bf66-85be-2098-78d7cbe564fc" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1">
      <topicdata name="IBaseIterator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1" />
      <apidata name="IBaseIterator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.container" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.next" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.valid" />
        <element api="M:System.ICloneable.Clone" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1" />
      </containers>
      <file name="c10ec214-7de2-843c-e2d6-00168873a6ae" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1">
      <topicdata name="IBaseIterator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1" />
      <apidata name="IBaseIterator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.container" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.next" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.valid" />
        <element api="M:System.ICloneable.Clone" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1" />
      </containers>
      <file name="8dd4964f-a408-59e9-91cf-930e85846d46" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.container">
      <topicdata group="api" />
      <apidata name="container" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1" ref="true" />
      </containers>
      <file name="de39dae7-af3f-285a-90ae-5fa4d78ec718" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.get_bias">
      <topicdata group="api" />
      <apidata name="get_bias" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1" ref="true" />
      </containers>
      <file name="156f935b-d4c8-6a29-3b32-362b6c34ebf2" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.get_node">
      <topicdata group="api" />
      <apidata name="get_node" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1" ref="true" />
      </containers>
      <file name="554ac7c9-913e-b5b7-4597-2bd830aa1a08" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.next">
      <topicdata group="api" />
      <apidata name="next" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1" ref="true" />
      </containers>
      <file name="41806728-a247-85aa-930a-d6227ed857e5" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.valid">
      <topicdata group="api" />
      <apidata name="valid" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1" ref="true" />
      </containers>
      <file name="2690faa4-9c04-3514-3331-35c351366c27" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1" />
      <apidata name="IBidirectionalContainer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <implementors>
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </implementors>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="c6116940-5350-dcd1-74ef-7aa57f018cb4" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1">
      <topicdata name="IBidirectionalContainer" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1" />
      <apidata name="IBidirectionalContainer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1.get_generation" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1" />
      </containers>
      <file name="884c37e0-5045-b72e-9752-a531105f7266" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1">
      <topicdata name="IBidirectionalContainer" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1" />
      <apidata name="IBidirectionalContainer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1.get_generation" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1" />
      </containers>
      <file name="67e68bef-edc9-a62a-167c-7b323733865b" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1.get_generation">
      <topicdata group="api" />
      <apidata name="get_generation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.UInt32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsLong" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1" ref="true" />
      </containers>
      <file name="73bc7ec8-8cc1-b477-a6e3-4624375c6be1" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" />
      <apidata name="IBidirectionalIterator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IForwardIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" />
          </specialization>
        </type>
      </implements>
      <implementors>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseBidirectionalIterator`1" ref="true" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerBidirectionalIterator`1" ref="true" />
      </implementors>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="8d7256f9-4225-2e33-18b7-6291f5a0ab31" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1">
      <topicdata name="IBidirectionalIterator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" />
      <apidata name="IBidirectionalIterator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1.prev" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" />
      </containers>
      <file name="a6437204-d45c-66de-76d4-2035fa8c5510" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1">
      <topicdata name="IBidirectionalIterator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" />
      <apidata name="IBidirectionalIterator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1.prev" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" />
      </containers>
      <file name="a204a98b-df5d-b7f3-f8e8-8b6265916848" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1.prev">
      <topicdata group="api" />
      <apidata name="prev" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="3ab879e4-5b23-5ba6-6b32-2d1bf046259f" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.Generic.IForwardIterator`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.IForwardIterator`1" />
      <apidata name="IForwardIterator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.IForwardIterator`1" />
          </specialization>
        </type>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.IForwardIterator`1" />
          </specialization>
        </type>
      </implements>
      <implementors>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true" />
      </implementors>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="0167d527-e163-a6ae-3581-f65c6959b99b" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.Generic.IForwardIterator`1">
      <topicdata name="IForwardIterator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.IForwardIterator`1" />
      <apidata name="IForwardIterator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.IInputIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IInputIterator`1.get_cref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1.get_ref" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IForwardIterator`1" />
      </containers>
      <file name="83de3031-2d81-58dd-a616-1854cf4b920e" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.Generic.IForwardIterator`1">
      <topicdata name="IForwardIterator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.IForwardIterator`1" />
      <apidata name="IForwardIterator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.IInputIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IInputIterator`1.get_cref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1.get_ref" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IForwardIterator`1" />
      </containers>
      <file name="dd4ed343-f6c3-d547-2b6d-a46fb0e2f94e" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" />
      <apidata name="IInputIterator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" />
          </specialization>
        </type>
      </implements>
      <implementors>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IForwardIterator`1" ref="true" />
      </implementors>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="a4ca3adf-bf93-85fb-7e20-3b0e649a1786" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1">
      <topicdata name="IInputIterator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" />
      <apidata name="IInputIterator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.container" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.next" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.valid" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IInputIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IInputIterator`1.get_cref" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" />
      </containers>
      <file name="2b428e96-49fd-9c8e-33bb-7eebb736695c" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1">
      <topicdata name="IInputIterator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" />
      <apidata name="IInputIterator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.container" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.next" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.valid" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IInputIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IInputIterator`1.get_cref" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" />
      </containers>
      <file name="2ebf480a-1035-c6fb-17f9-22b10bd9fe6e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.IInputIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="A_0">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true" />
      </containers>
      <file name="09bc61a6-2791-2d43-6723-40733232509a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.IInputIterator`1.get_cref">
      <topicdata group="api" />
      <apidata name="get_cref" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true" />
      </containers>
      <file name="eea5fec7-1ba5-634e-78fa-eda0280f2be5" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.Generic.INode`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.INode`1" />
      <apidata name="INode" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="a7c3db78-9a3f-6078-9486-930024c23256" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.Generic.INode`1">
      <topicdata name="INode" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.INode`1" />
      <apidata name="INode" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.Generic.INode`1._Value" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.INode`1.container" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.INode`1.is_head" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.INode`1.next_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.INode`1.prev_node" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.INode`1" />
      </containers>
      <file name="856a4723-e095-995a-df18-d326c9724544" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.Generic.INode`1">
      <topicdata name="INode" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.INode`1" />
      <apidata name="INode" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.INode`1.container" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.INode`1.is_head" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.INode`1.next_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.INode`1.prev_node" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.INode`1" />
      </containers>
      <file name="bacdecdd-b88a-9dd4-0d0f-878ae7110db6" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.Generic.INode`1">
      <topicdata name="INode" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.INode`1" />
      <apidata name="INode" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.Generic.INode`1._Value" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.INode`1" />
      </containers>
      <file name="0168a879-e148-53f3-40a0-475b19cbb686" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.Generic.INode`1._Value">
      <topicdata group="api" />
      <apidata name="_Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get__Value" />
      <setter name="set__Value" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.INode`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.INode`1" ref="true" />
      </containers>
      <file name="61d74433-3744-5392-c43c-b3034f92a01b" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.INode`1.container">
      <topicdata group="api" />
      <apidata name="container" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.INode`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.INode`1" ref="true" />
      </containers>
      <file name="dab3283b-0833-7fae-ed72-9db8fdc197b2" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.INode`1.is_head">
      <topicdata group="api" />
      <apidata name="is_head" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.INode`1" ref="true" />
      </containers>
      <file name="92638f05-3e2b-990e-bad2-b7965d380df1" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.INode`1.next_node">
      <topicdata group="api" />
      <apidata name="next_node" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.INode`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.INode`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.INode`1" ref="true" />
      </containers>
      <file name="e3c45df2-b9a4-00ed-c06d-f7299bca6b6e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.INode`1.prev_node">
      <topicdata group="api" />
      <apidata name="prev_node" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.INode`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.INode`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.INode`1" ref="true" />
      </containers>
      <file name="5ca155e8-7360-9c23-7485-aa916af1d4e9" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1" />
      <apidata name="IOutputIterator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1" />
          </specialization>
        </type>
      </implements>
      <implementors>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IForwardIterator`1" ref="true" />
      </implementors>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="0c78d162-c39c-2c05-3437-f22539bbf452" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1">
      <topicdata name="IOutputIterator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1" />
      <apidata name="IOutputIterator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.container" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.next" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.valid" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1.get_ref" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1" />
      </containers>
      <file name="879f2b62-4a0f-d0b6-a3e3-711b02813042" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1">
      <topicdata name="IOutputIterator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1" />
      <apidata name="IOutputIterator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.container" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.next" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBaseIterator`1.valid" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1.get_ref" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1" />
      </containers>
      <file name="3d00075a-2a7e-313c-be19-e94934811261" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1.get_ref">
      <topicdata group="api" />
      <apidata name="get_ref" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IOutputIterator`1" ref="true" />
      </containers>
      <file name="ba032f8a-b1c6-4a42-56d9-e28dc9dce3f3" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1" />
      <apidata name="IRandomAccessContainer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <implementors>
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </implementors>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="da643c95-18c4-32b4-8c81-f11da77e0a74" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1">
      <topicdata name="IRandomAccessContainer" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1" />
      <apidata name="IRandomAccessContainer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.at_bias(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.valid_bias(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1" />
      </containers>
      <file name="4d692e1b-4271-133e-db00-502878bbadea" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1">
      <topicdata name="IRandomAccessContainer" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1" />
      <apidata name="IRandomAccessContainer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.at_bias(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.valid_bias(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1" />
      </containers>
      <file name="5d4966e9-92af-1151-ef47-5c54bf61a00f" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.at_bias(System.Int32)">
      <topicdata group="api" />
      <apidata name="at_bias" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="A_0">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1" ref="true" />
      </containers>
      <file name="fed50a20-d7d1-445f-99f0-a6cb0a65cb95" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.valid_bias(System.Int32)">
      <topicdata group="api" />
      <apidata name="valid_bias" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="A_0">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1" ref="true" />
      </containers>
      <file name="6d3771d9-10d9-d0d3-8e57-c3cbd0d71882" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />
      <apidata name="IRandomAccessIterator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />
          </specialization>
        </type>
      </implements>
      <implementors>
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstReverseRandomAccessIterator`1" ref="true" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ConstContainerRandomAccessIterator`1" ref="true" />
      </implementors>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="9b00ef95-137d-a12c-fae4-682a66b33f3c" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1">
      <topicdata name="IRandomAccessIterator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />
      <apidata name="IRandomAccessIterator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1.prev" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.move(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />
      </containers>
      <file name="b8d52f53-7255-267a-a136-3badef16aa23" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1">
      <topicdata name="IRandomAccessIterator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />
      <apidata name="IRandomAccessIterator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1.prev" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.move(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />
      </containers>
      <file name="e5fa0c68-a2ed-192a-8da5-d2bd2f1c27e9" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name="distance" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="60a57b0f-d892-2d1c-e34f-ace68363052c" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name="less_than" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="da45eff3-6ad9-2f28-7a14-8b665a22545a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.move(System.Int32)">
      <topicdata group="api" />
      <apidata name="move" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="c850161e-6e1c-fd2c-f34b-0c4787c3de4b" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
      <apidata name="ReverseBidirectionalIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="e59238b6-af77-04e1-31c1-5e95299d44bd" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1">
      <topicdata name="ReverseBidirectionalIterator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
      <apidata name="ReverseBidirectionalIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.base" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.Clone" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.container" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.get_cref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.get_ref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.next" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0}" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.prev" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.valid" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
      </containers>
      <file name="543d3a4e-da25-1536-8c64-63685566018f" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1">
      <topicdata name="ReverseBidirectionalIterator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
      <apidata name="ReverseBidirectionalIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.base" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.Clone" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.container" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.get_cref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.get_ref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.next" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.prev" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.valid" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
      </containers>
      <file name="80176fd7-7d9f-f68f-40f0-6cbf47daf13e" />
    </api>
    <api id="Operators.T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1">
      <topicdata name="ReverseBidirectionalIterator" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
      <apidata name="ReverseBidirectionalIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0}" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@,System.Int32)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
      </containers>
      <file name="6d4f1070-a504-e6fc-73b7-ba9ef015e58b" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="118b9c18-3f3b-a0a8-e543-ee3e847efb2d" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to">
      <topicdata name="equal_to" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="36307b7d-8b6a-6571-58c2-b2657d4f5e3b" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement">
      <topicdata name="Decrement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="d453f660-2a7b-2037-93cf-7edf3f4f9782" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality">
      <topicdata name="Equality" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="8867d165-fc42-331d-28bf-af7fa001bc0d" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment">
      <topicdata name="Increment" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="d6e85586-80b7-3ff1-f99a-8666dc8b459b" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality">
      <topicdata name="Inequality" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="29d00778-16dd-f198-2357-2591c8e35dc5" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="05908635-1d46-90c6-44d2-164a3f420ef7" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor" />
      <parameters>
        <parameter name="_Iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="750ca364-4f07-40be-ff7e-326e4b5f3273" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.#ctor" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="72de9803-e956-df70-258c-d9615d80a2b2" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.base">
      <topicdata group="api" />
      <apidata name="base" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="f8ab5494-e9cf-1c48-4c99-3bc1d0759eb1" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="7b3543f2-5bbb-6a42-e45e-393a8326df6c" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.container">
      <topicdata group="api" />
      <apidata name="container" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="08caf7bd-2dbc-f339-0545-7a92efc69413" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="8fc9f326-54be-823d-2b44-20775726c76b" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.equal_to" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="62196748-1e1f-07ce-28d4-97188886f0f6" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.get_bias">
      <topicdata group="api" />
      <apidata name="get_bias" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="5531c452-6479-7aad-9d65-36f0925ca310" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.get_cref">
      <topicdata group="api" />
      <apidata name="get_cref" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="8e173c4d-aaea-75e3-8412-3dcd0545d0c0" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.get_node">
      <topicdata group="api" />
      <apidata name="get_node" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="165c95a9-da97-ac0c-7f80-d0462ecb9dd2" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.get_ref">
      <topicdata group="api" />
      <apidata name="get_ref" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="d43d7503-c5d7-4ec5-568c-21d3f63c9b32" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.next">
      <topicdata group="api" />
      <apidata name="next" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="e1eae895-5982-449b-35d0-62befa3ba1a7" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Assign" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
          </specialization>
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="5198062a-9bf0-e092-64ce-40d30482262d" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="df76bfa0-20e8-b3d2-7cc7-c4b7bfeb6192" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Decrement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="A_0">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="74a6bed0-6eaa-b52c-8b73-9a595b47c844" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="a98c7f3a-e45c-98ad-caf5-baaa8d14d232" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Equality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="fb137dfa-d370-a382-f4d7-303a982ead5e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator{`0}">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="b9ec7890-42d3-0705-411a-6ab66742dedc" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="029cc023-ced2-7633-33bd-9bbbce90782a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Increment" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="A_0">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="fc771526-f87d-8724-429c-8856c0aadb77" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="f2bbe7c3-bf0e-9fbe-eeae-9ce1509cd94b" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_Inequality" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="81fd30d5-bfe9-ec05-3650-ef1cbdf963d7" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="MemberSelection" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="b91792e8-a2d6-d868-0264-4e62bfea7c6c" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="PointerDereference" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="2db37c45-856a-d8d4-7962-88f57f5fd58c" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.prev">
      <topicdata group="api" />
      <apidata name="prev" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1.prev">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="a7df80e0-2457-96e3-160e-3de4c38ea383" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1.valid">
      <topicdata group="api" />
      <apidata name="valid" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true" />
      </containers>
      <file name="70e18349-b676-65e1-2be0-839db6e79ebe" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
      <apidata name="ReverseRandomAccessIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
      </containers>
      <file name="caa76a32-cb5e-4dcd-f52d-5cdac0b76f62" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1">
      <topicdata name="ReverseRandomAccessIterator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
      <apidata name="ReverseRandomAccessIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.base" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Clone" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.container" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.get_cref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.get_ref" />
        <element api="P:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Item(System.Int32)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.move(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.next" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0}" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.prev" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.valid" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
      </containers>
      <file name="e482645b-31cb-bd63-2138-49d02d12ad3b" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1">
      <topicdata name="ReverseRandomAccessIterator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
      <apidata name="ReverseRandomAccessIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.base" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Clone" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.container" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.get_bias" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.get_cref" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.get_node" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.get_ref" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.move(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.next" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.prev" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.valid" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
      </containers>
      <file name="8ba2f92b-c3b3-d83b-6233-ff90b528addd" />
    </api>
    <api id="Operators.T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1">
      <topicdata name="ReverseRandomAccessIterator" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
      <apidata name="ReverseRandomAccessIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0}" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction">
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)" />
        </element>
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
      </containers>
      <file name="0d509cbb-deb4-0ae8-44bb-9fe5ff937b3e" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1">
      <topicdata name="ReverseRandomAccessIterator" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
      <apidata name="ReverseRandomAccessIterator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
      </containers>
      <file name="f7bdc861-2392-e5d0-d749-9dc074e83513" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="76d5f852-b1a1-05dc-5bc4-43429eea5f7c" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance">
      <topicdata name="distance" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
      <apidata name="distance" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="fdf0b00e-29ec-c184-4a23-02f8cd771af0" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to">
      <topicdata name="equal_to" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="3dce2812-7e26-10bb-346f-bf7840b58b7a" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than">
      <topicdata name="less_than" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
      <apidata name="less_than" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="40740872-dc43-ac47-f0f4-173c9f1a6f62" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition">
      <topicdata name="Addition" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="b86b4431-95ca-7e71-9b94-d1257991f1e1" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement">
      <topicdata name="Decrement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="ce4b001d-88d2-6776-d31e-5a7e368ef3fd" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment">
      <topicdata name="Increment" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="203bb9cc-dc11-33ba-794d-b1b5fb00b934" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction">
      <topicdata name="Subtraction" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="e8eae9d6-4c5d-a821-c5ec-027585eae86f" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="f954dc7f-26aa-e4a1-5ce3-5eb1780c12f7" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor" />
      <parameters>
        <parameter name="_Iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="717a910f-aa8a-edb2-c6e5-15101f979a64" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.#ctor" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="2bc5ada8-6ffa-20db-b881-ea5de71218ea" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.base">
      <topicdata group="api" />
      <apidata name="base" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="6deb63e7-5929-2ba0-6b55-4494ecabc3f7" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Clone">
      <topicdata group="api" />
      <apidata name="Clone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="3ba7d9ee-63f0-8010-75d4-77500e4acd71" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.container">
      <topicdata group="api" />
      <apidata name="container" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="7eda18d6-445c-6145-4193-84e4c2e3b6ef" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name="distance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="74f96cf6-472f-d5e8-9baa-22a4fbec4f00" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="distance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.distance" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="b28ecb15-ae91-b910-44ad-af8ad04bc664" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="c25292bd-dee3-b949-8668-46680b634bd0" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="equal_to" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.equal_to" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="38fa5ae2-d663-d7af-8381-b4e3434a9593" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.get_bias">
      <topicdata group="api" />
      <apidata name="get_bias" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="6804bf95-8633-3ff3-fe1e-6bd2bc39ba45" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.get_cref">
      <topicdata group="api" />
      <apidata name="get_cref" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="c27935e1-d22f-679f-3333-487222c81620" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.get_node">
      <topicdata group="api" />
      <apidata name="get_node" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="824d33f2-6fdd-604d-0091-7494a26eda78" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.get_ref">
      <topicdata group="api" />
      <apidata name="get_ref" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="36337c99-c74c-252f-e51f-fe768388ac34" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="_Pos">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="5dd82794-1b0f-08fd-773b-8ce15d0aa553" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name="less_than" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="e4939549-6350-86a9-d27a-7b2b424319eb" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="less_than" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.less_than" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="d8fd359b-c6c1-795c-dd79-2d168241568f" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.move(System.Int32)">
      <topicdata group="api" />
      <apidata name="move" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="_Offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1.move(System.Int32)">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="6fb81a70-106a-38fa-b095-b30375b7e41b" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.next">
      <topicdata group="api" />
      <apidata name="next" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="a10b0a2e-e7a7-25c3-8325-efec68a9acc3" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Right">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="deed9bfa-0d72-0d71-938f-5caf193f3cf9" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32,Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Addition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Left">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="876f4a46-50c4-39c1-b4ee-98594cf201ad" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Assign(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Assign" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
          </specialization>
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="5c1d7929-4f2a-34f6-4199-1ff2a080df3e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="a09d33eb-1f3f-e947-a63c-1ccf5351c36e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Decrement" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="A_0">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="9abf83e6-d965-ed03-cf98-4fe3167cf0f5" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Equality(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="7dc01ce9-59d8-04a2-a618-1754182b9d32" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThan(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="b37e1795-d380-d5f0-d942-72bb003c501b" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_GreaterThanOrEqual(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="e7391cd1-86af-2cd0-3ab8-38c4a8781473" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Implicit~Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0}">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="5d78068a-a581-80a6-a6bd-8f0107df2b15" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="548ac347-b3df-afb9-1e8a-089e49b88c1d" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Increment" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="A_0">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="e687c404-397c-3434-1b88-60822e6d2f6c" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Inequality(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="8b2e2ad8-f959-69c6-e5ba-a5ba8f2d1a53" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThan(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="53c9018e-4b6a-8227-8563-f9592ed5981a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_LessThanOrEqual(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="6cccc780-3a0e-c1b2-5763-9fc5a02c4edf" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_MemberSelection(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="MemberSelection" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="9cf77bfb-1eba-24b6-b5fb-ccb7e491755f" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_PointerDereference(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="PointerDereference" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Left">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="d3b07ec3-cddc-1156-ee89-8d01f5c3167c" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator{`0})">
      <topicdata group="api" />
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="eef23a32-29a6-30d3-f083-cb5371f73728" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@,System.Int32)">
      <topicdata group="api" />
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.op_Subtraction" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Right">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="98e9f19e-567f-a953-f635-c80e74178b1f" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.prev">
      <topicdata group="api" />
      <apidata name="prev" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="43c38677-e771-0a57-6412-424489430243" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1.valid">
      <topicdata group="api" />
      <apidata name="valid" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr.Generic" />
        <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true" />
      </containers>
      <file name="4eafa617-87ed-40b1-9022-120949101968" />
    </api>
  </apis>
</reflection>