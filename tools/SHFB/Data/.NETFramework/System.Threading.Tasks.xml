<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="mscorlib">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>BED7F4EA-1A96-11d2-8F08-00A0C9A6186D</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>mscorlib.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>mscorlib.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>mscorlib.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="System.Core">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Core.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Core.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Core.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.Threading.Tasks">
      <topicdata group="api" />
      <apidata name="System.Threading.Tasks" group="namespace" />
      <elements>
        <element api="T:System.Threading.Tasks.Task`1" />
        <element api="T:System.Threading.Tasks.TaskFactory`1" />
        <element api="T:System.Threading.Tasks.ParallelOptions" />
        <element api="T:System.Threading.Tasks.Parallel" />
        <element api="T:System.Threading.Tasks.ParallelLoopState" />
        <element api="T:System.Threading.Tasks.ParallelLoopResult" />
        <element api="T:System.Threading.Tasks.TaskStatus" />
        <element api="T:System.Threading.Tasks.Task" />
        <element api="T:System.Threading.Tasks.TaskCreationOptions" />
        <element api="T:System.Threading.Tasks.TaskContinuationOptions" />
        <element api="T:System.Threading.Tasks.TaskCanceledException" />
        <element api="T:System.Threading.Tasks.TaskSchedulerException" />
        <element api="T:System.Threading.Tasks.TaskFactory" />
        <element api="T:System.Threading.Tasks.TaskScheduler" />
        <element api="T:System.Threading.Tasks.UnobservedTaskExceptionEventArgs" />
        <element api="T:System.Threading.Tasks.TaskCompletionSource`1" />
        <element api="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" />
        <element api="T:System.Threading.Tasks.TaskExtensions" />
      </elements>
      <file name="042b2d6e-6b05-f0d3-711c-2b8876b49dc3" />
    </api>
    <api id="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" />
      <apidata name="ConcurrentExclusiveSchedulerPair" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="9c590e20-fd53-8be4-07c1-c38c196e3dd1" />
    </api>
    <api id="AllMembers.T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair">
      <topicdata name="ConcurrentExclusiveSchedulerPair" group="list" subgroup="members" typeTopicId="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" />
      <apidata name="ConcurrentExclusiveSchedulerPair" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor">
          <element api="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor" />
          <element api="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32)" />
          <element api="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete" />
        <element api="P:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion" />
        <element api="P:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler" />
        <element api="P:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" />
      </containers>
      <file name="e423b889-3d83-e56e-a35b-da668b4cbc3f" />
    </api>
    <api id="Methods.T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair">
      <topicdata name="ConcurrentExclusiveSchedulerPair" group="list" subgroup="Methods" typeTopicId="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" />
      <apidata name="ConcurrentExclusiveSchedulerPair" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" />
      </containers>
      <file name="eb26300f-8add-3a74-9597-b7c87cd3aa55" />
    </api>
    <api id="Properties.T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair">
      <topicdata name="ConcurrentExclusiveSchedulerPair" group="list" subgroup="Properties" typeTopicId="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" />
      <apidata name="ConcurrentExclusiveSchedulerPair" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor" />
      <elements>
        <element api="P:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion" />
        <element api="P:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler" />
        <element api="P:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" />
      </containers>
      <file name="7b6f48c3-c378-c5fc-837a-3fe787946a05" />
    </api>
    <api id="Overload:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor" />
        <element api="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32)" />
        <element api="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" ref="true" />
      </containers>
      <file name="acb8dfa1-0a04-9029-eb36-810b8c24dd09" />
    </api>
    <api id="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" ref="true" />
      </containers>
      <file name="43f5f141-02c2-87b9-d8db-873c7e17a3f6" />
    </api>
    <api id="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor" />
      <parameters>
        <parameter name="taskScheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" ref="true" />
      </containers>
      <file name="eae6395b-de0f-0468-7698-2c8d75958095" />
    </api>
    <api id="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor" />
      <parameters>
        <parameter name="taskScheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
        <parameter name="maxConcurrencyLevel">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" ref="true" />
      </containers>
      <file name="53c355a7-7663-4abc-9c9f-bc4e3a32b8e5" />
    </api>
    <api id="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor(System.Threading.Tasks.TaskScheduler,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.#ctor" />
      <parameters>
        <parameter name="taskScheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
        <parameter name="maxConcurrencyLevel">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maxItemsPerTask">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" ref="true" />
      </containers>
      <file name="0c669c0d-e7ce-a89d-b081-ff4e62962f2b" />
    </api>
    <api id="M:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Complete">
      <topicdata group="api" />
      <apidata name="Complete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" ref="true" />
      </containers>
      <file name="6f515e65-46ce-a089-7173-474550a6b460" />
    </api>
    <api id="P:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.Completion">
      <topicdata group="api" />
      <apidata name="Completion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Completion" />
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" ref="true" />
      </containers>
      <file name="f435f70c-be7d-24c6-00dc-6c40ec28c5cd" />
    </api>
    <api id="P:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ConcurrentScheduler">
      <topicdata group="api" />
      <apidata name="ConcurrentScheduler" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ConcurrentScheduler" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" ref="true" />
      </containers>
      <file name="26a185ad-50a7-25a4-8cd8-c619cccd6b5e" />
    </api>
    <api id="P:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair.ExclusiveScheduler">
      <topicdata group="api" />
      <apidata name="ExclusiveScheduler" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExclusiveScheduler" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.ConcurrentExclusiveSchedulerPair" ref="true" />
      </containers>
      <file name="04f8647d-9fe0-73c9-e827-bb3557b770dd" />
    </api>
    <api id="T:System.Threading.Tasks.Parallel">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Threading.Tasks.Parallel" />
      <apidata name="Parallel" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="2967d08c-c678-864e-b9de-96743de997ed" />
    </api>
    <api id="AllMembers.T:System.Threading.Tasks.Parallel">
      <topicdata name="Parallel" group="list" subgroup="members" typeTopicId="T:System.Threading.Tasks.Parallel" />
      <apidata name="Parallel" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Threading.Tasks.Parallel.For">
          <element api="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})" />
          <element api="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})" />
          <element api="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})" />
          <element api="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})" />
          <element api="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})" />
          <element api="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})" />
          <element api="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})" />
          <element api="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})" />
          <element api="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
          <element api="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
          <element api="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
          <element api="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
        </element>
        <element api="Overload:System.Threading.Tasks.Parallel.ForEach">
          <element api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
        </element>
        <element api="Overload:System.Threading.Tasks.Parallel.Invoke">
          <element api="M:System.Threading.Tasks.Parallel.Invoke(System.Action[])" />
          <element api="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])" />
        </element>
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" />
      </containers>
      <file name="a6a58b46-c9d3-85fc-0e11-c3bfa5620e8b" />
    </api>
    <api id="Methods.T:System.Threading.Tasks.Parallel">
      <topicdata name="Parallel" group="list" subgroup="Methods" typeTopicId="T:System.Threading.Tasks.Parallel" />
      <apidata name="Parallel" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Threading.Tasks.Parallel.For">
          <element api="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})" />
          <element api="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})" />
          <element api="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})" />
          <element api="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})" />
          <element api="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})" />
          <element api="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})" />
          <element api="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})" />
          <element api="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})" />
          <element api="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
          <element api="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
          <element api="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
          <element api="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
        </element>
        <element api="Overload:System.Threading.Tasks.Parallel.ForEach">
          <element api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
          <element api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
        </element>
        <element api="Overload:System.Threading.Tasks.Parallel.Invoke">
          <element api="M:System.Threading.Tasks.Parallel.Invoke(System.Action[])" />
          <element api="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])" />
        </element>
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" />
      </containers>
      <file name="055cff68-1035-1a3c-d213-12dfcd6aa51b" />
    </api>
    <api id="Overload:System.Threading.Tasks.Parallel.For">
      <topicdata name="For" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.Parallel" />
      <apidata name="For" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})" />
        <element api="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})" />
        <element api="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})" />
        <element api="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})" />
        <element api="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})" />
        <element api="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})" />
        <element api="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})" />
        <element api="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})" />
        <element api="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
        <element api="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
        <element api="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
        <element api="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="6af5bd85-a85f-b3fc-4f4a-ec8e0283c365" />
    </api>
    <api id="Overload:System.Threading.Tasks.Parallel.ForEach">
      <topicdata name="ForEach" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.Parallel" />
      <apidata name="ForEach" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})" />
        <element api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})" />
        <element api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})" />
        <element api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})" />
        <element api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})" />
        <element api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})" />
        <element api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})" />
        <element api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})" />
        <element api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})" />
        <element api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})" />
        <element api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})" />
        <element api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})" />
        <element api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
        <element api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
        <element api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
        <element api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
        <element api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
        <element api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
        <element api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
        <element api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="a5008326-c669-97ca-57fc-79dadda06314" />
    </api>
    <api id="Overload:System.Threading.Tasks.Parallel.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.Parallel" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Tasks.Parallel.Invoke(System.Action[])" />
        <element api="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="0d18ef58-5fc8-bc28-48e7-432bcd3bf8b3" />
    </api>
    <api id="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})">
      <topicdata group="api" />
      <apidata name="For" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Parallel.For" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fromInclusive">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="toExclusive">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="body">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.ParallelLoopResult" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="a12ba6fe-f26c-1614-c109-3ffbcada95cc" />
    </api>
    <api id="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
      <topicdata group="api" />
      <apidata name="For" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Parallel.For" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fromInclusive">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="toExclusive">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="body">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
              <type api="T:System.Threading.Tasks.ParallelLoopState" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.ParallelLoopResult" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="a386d59f-88b2-f1eb-c772-fcc8f2a6c932" />
    </api>
    <api id="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
      <topicdata group="api" />
      <apidata name="For" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Parallel.For" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TLocal" />
      </templates>
      <parameters>
        <parameter name="fromInclusive">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="toExclusive">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="localInit">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="TLocal" index="0" api="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="body">
          <type api="T:System.Func`4" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
              <type api="T:System.Threading.Tasks.ParallelLoopState" ref="true" />
              <template name="TLocal" index="0" api="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
              <template name="TLocal" index="0" api="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="localFinally">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <template name="TLocal" index="0" api="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.ParallelLoopResult" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="8bb8606a-742b-f397-8b02-0871eaa29cd3" />
    </api>
    <api id="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
      <topicdata group="api" />
      <apidata name="For" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Parallel.For" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fromInclusive">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="toExclusive">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="parallelOptions">
          <type api="T:System.Threading.Tasks.ParallelOptions" ref="true" />
        </parameter>
        <parameter name="body">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.ParallelLoopResult" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="190e3717-057c-e698-062d-fe6d82fa5a4e" />
    </api>
    <api id="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
      <topicdata group="api" />
      <apidata name="For" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Parallel.For" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fromInclusive">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="toExclusive">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="parallelOptions">
          <type api="T:System.Threading.Tasks.ParallelOptions" ref="true" />
        </parameter>
        <parameter name="body">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
              <type api="T:System.Threading.Tasks.ParallelLoopState" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.ParallelLoopResult" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="b3b1d664-9cdc-d088-3540-e5215a51d102" />
    </api>
    <api id="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
      <topicdata group="api" />
      <apidata name="For" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Parallel.For" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TLocal" />
      </templates>
      <parameters>
        <parameter name="fromInclusive">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="toExclusive">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="parallelOptions">
          <type api="T:System.Threading.Tasks.ParallelOptions" ref="true" />
        </parameter>
        <parameter name="localInit">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="TLocal" index="0" api="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="body">
          <type api="T:System.Func`4" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
              <type api="T:System.Threading.Tasks.ParallelLoopState" ref="true" />
              <template name="TLocal" index="0" api="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
              <template name="TLocal" index="0" api="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="localFinally">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <template name="TLocal" index="0" api="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.ParallelLoopResult" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="a47f9912-5e3d-3ae0-a5ee-cbbc512b9f90" />
    </api>
    <api id="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64})">
      <topicdata group="api" />
      <apidata name="For" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Parallel.For" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fromInclusive">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="toExclusive">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="body">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.ParallelLoopResult" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="23f7a464-c5cc-f863-206d-fea0f4ae5ab2" />
    </api>
    <api id="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
      <topicdata group="api" />
      <apidata name="For" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Parallel.For" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fromInclusive">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="toExclusive">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="body">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <type api="T:System.Int64" ref="false" />
              <type api="T:System.Threading.Tasks.ParallelLoopState" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.ParallelLoopResult" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="6a2e14f2-6e10-f64c-0562-d8bb832be4fe" />
    </api>
    <api id="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
      <topicdata group="api" />
      <apidata name="For" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Parallel.For" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TLocal" />
      </templates>
      <parameters>
        <parameter name="fromInclusive">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="toExclusive">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="localInit">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="TLocal" index="0" api="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="body">
          <type api="T:System.Func`4" ref="true">
            <specialization>
              <type api="T:System.Int64" ref="false" />
              <type api="T:System.Threading.Tasks.ParallelLoopState" ref="true" />
              <template name="TLocal" index="0" api="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
              <template name="TLocal" index="0" api="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="localFinally">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <template name="TLocal" index="0" api="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.ParallelLoopResult" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="6e1c5ae3-7565-b9f4-01d1-a5dca11f2e9a" />
    </api>
    <api id="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64})">
      <topicdata group="api" />
      <apidata name="For" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Parallel.For" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fromInclusive">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="toExclusive">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="parallelOptions">
          <type api="T:System.Threading.Tasks.ParallelOptions" ref="true" />
        </parameter>
        <parameter name="body">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.ParallelLoopResult" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="08274e1d-55df-90b1-0a7e-d9243171933b" />
    </api>
    <api id="M:System.Threading.Tasks.Parallel.For(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Action{System.Int64,System.Threading.Tasks.ParallelLoopState})">
      <topicdata group="api" />
      <apidata name="For" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Parallel.For" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fromInclusive">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="toExclusive">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="parallelOptions">
          <type api="T:System.Threading.Tasks.ParallelOptions" ref="true" />
        </parameter>
        <parameter name="body">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <type api="T:System.Int64" ref="false" />
              <type api="T:System.Threading.Tasks.ParallelLoopState" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.ParallelLoopResult" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="ed818474-d702-8e32-357c-3e15baf11193" />
    </api>
    <api id="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
      <topicdata group="api" />
      <apidata name="For" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Parallel.For" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TLocal" />
      </templates>
      <parameters>
        <parameter name="fromInclusive">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="toExclusive">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="parallelOptions">
          <type api="T:System.Threading.Tasks.ParallelOptions" ref="true" />
        </parameter>
        <parameter name="localInit">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="TLocal" index="0" api="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="body">
          <type api="T:System.Func`4" ref="true">
            <specialization>
              <type api="T:System.Int64" ref="false" />
              <type api="T:System.Threading.Tasks.ParallelLoopState" ref="true" />
              <template name="TLocal" index="0" api="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
              <template name="TLocal" index="0" api="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="localFinally">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <template name="TLocal" index="0" api="M:System.Threading.Tasks.Parallel.For``1(System.Int64,System.Int64,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int64,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.ParallelLoopResult" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="3ef36f6d-0fe7-ad23-fcb4-4954402b270f" />
    </api>
    <api id="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
      <topicdata group="api" />
      <apidata name="ForEach" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Parallel.ForEach" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Concurrent.OrderablePartitioner`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="body">
          <type api="T:System.Action`3" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})" />
              <type api="T:System.Threading.Tasks.ParallelLoopState" ref="true" />
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.ParallelLoopResult" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="6d186442-d225-6374-21f4-5ecb075e834d" />
    </api>
    <api id="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
      <topicdata group="api" />
      <apidata name="ForEach" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Parallel.ForEach" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TLocal" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Concurrent.OrderablePartitioner`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="localInit">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="TLocal" index="1" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="body">
          <type api="T:System.Func`5" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
              <type api="T:System.Threading.Tasks.ParallelLoopState" ref="true" />
              <type api="T:System.Int64" ref="false" />
              <template name="TLocal" index="1" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
              <template name="TLocal" index="1" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="localFinally">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <template name="TLocal" index="1" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.ParallelLoopResult" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="c53778ac-5035-6fea-62b3-ab9c3ba27326" />
    </api>
    <api id="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
      <topicdata group="api" />
      <apidata name="ForEach" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Parallel.ForEach" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Concurrent.OrderablePartitioner`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="parallelOptions">
          <type api="T:System.Threading.Tasks.ParallelOptions" ref="true" />
        </parameter>
        <parameter name="body">
          <type api="T:System.Action`3" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})" />
              <type api="T:System.Threading.Tasks.ParallelLoopState" ref="true" />
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.ParallelLoopResult" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="41b4f1ae-7af1-2b76-a014-3e743501e6b9" />
    </api>
    <api id="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
      <topicdata group="api" />
      <apidata name="ForEach" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Parallel.ForEach" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TLocal" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Concurrent.OrderablePartitioner`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="parallelOptions">
          <type api="T:System.Threading.Tasks.ParallelOptions" ref="true" />
        </parameter>
        <parameter name="localInit">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="TLocal" index="1" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="body">
          <type api="T:System.Func`5" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
              <type api="T:System.Threading.Tasks.ParallelLoopState" ref="true" />
              <type api="T:System.Int64" ref="false" />
              <template name="TLocal" index="1" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
              <template name="TLocal" index="1" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="localFinally">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <template name="TLocal" index="1" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.OrderablePartitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.ParallelLoopResult" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="2618d311-a593-f28e-f575-53f0f560cc73" />
    </api>
    <api id="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})">
      <topicdata group="api" />
      <apidata name="ForEach" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Parallel.ForEach" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Concurrent.Partitioner`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="body">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.ParallelLoopResult" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="77914186-e44e-6b51-0ca6-189d5bd27e8b" />
    </api>
    <api id="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
      <topicdata group="api" />
      <apidata name="ForEach" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Parallel.ForEach" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Concurrent.Partitioner`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="body">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})" />
              <type api="T:System.Threading.Tasks.ParallelLoopState" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.ParallelLoopResult" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="05b74d6c-7290-27fd-8e0f-98e2d48b09a5" />
    </api>
    <api id="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
      <topicdata group="api" />
      <apidata name="ForEach" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Parallel.ForEach" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TLocal" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Concurrent.Partitioner`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="localInit">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="TLocal" index="1" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="body">
          <type api="T:System.Func`4" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
              <type api="T:System.Threading.Tasks.ParallelLoopState" ref="true" />
              <template name="TLocal" index="1" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
              <template name="TLocal" index="1" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="localFinally">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <template name="TLocal" index="1" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.ParallelLoopResult" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="d56852d7-8c65-0d64-e182-c2babcef9dde" />
    </api>
    <api id="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
      <topicdata group="api" />
      <apidata name="ForEach" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Parallel.ForEach" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Concurrent.Partitioner`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="parallelOptions">
          <type api="T:System.Threading.Tasks.ParallelOptions" ref="true" />
        </parameter>
        <parameter name="body">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.ParallelLoopResult" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="96fb4638-6448-4be0-e637-aba7f2b12564" />
    </api>
    <api id="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
      <topicdata group="api" />
      <apidata name="ForEach" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Parallel.ForEach" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Concurrent.Partitioner`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="parallelOptions">
          <type api="T:System.Threading.Tasks.ParallelOptions" ref="true" />
        </parameter>
        <parameter name="body">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})" />
              <type api="T:System.Threading.Tasks.ParallelLoopState" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.ParallelLoopResult" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="9b8db047-c9e3-fc01-ce49-102236bb30c5" />
    </api>
    <api id="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
      <topicdata group="api" />
      <apidata name="ForEach" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Parallel.ForEach" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TLocal" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Concurrent.Partitioner`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="parallelOptions">
          <type api="T:System.Threading.Tasks.ParallelOptions" ref="true" />
        </parameter>
        <parameter name="localInit">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="TLocal" index="1" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="body">
          <type api="T:System.Func`4" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
              <type api="T:System.Threading.Tasks.ParallelLoopState" ref="true" />
              <template name="TLocal" index="1" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
              <template name="TLocal" index="1" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="localFinally">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <template name="TLocal" index="1" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.ParallelLoopResult" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="9d84bcae-02ad-3fd1-c25b-fb5f1730c904" />
    </api>
    <api id="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
      <topicdata group="api" />
      <apidata name="ForEach" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Parallel.ForEach" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="body">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.ParallelLoopResult" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="9445ea10-024d-ba4f-b614-fe1ab47f7343" />
    </api>
    <api id="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
      <topicdata group="api" />
      <apidata name="ForEach" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Parallel.ForEach" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="body">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState})" />
              <type api="T:System.Threading.Tasks.ParallelLoopState" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.ParallelLoopResult" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="aab1223f-524c-7543-a895-396f27207190" />
    </api>
    <api id="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
      <topicdata group="api" />
      <apidata name="ForEach" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Parallel.ForEach" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="body">
          <type api="T:System.Action`3" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})" />
              <type api="T:System.Threading.Tasks.ParallelLoopState" ref="true" />
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.ParallelLoopResult" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="98c8abb7-c294-4a35-8d4d-ef249f9ef93f" />
    </api>
    <api id="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
      <topicdata group="api" />
      <apidata name="ForEach" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Parallel.ForEach" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TLocal" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="localInit">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="TLocal" index="1" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="body">
          <type api="T:System.Func`4" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
              <type api="T:System.Threading.Tasks.ParallelLoopState" ref="true" />
              <template name="TLocal" index="1" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
              <template name="TLocal" index="1" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="localFinally">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <template name="TLocal" index="1" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.ParallelLoopResult" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="66d9e96e-5b17-f51c-932e-cb084da6c3c4" />
    </api>
    <api id="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
      <topicdata group="api" />
      <apidata name="ForEach" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Parallel.ForEach" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TLocal" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="localInit">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="TLocal" index="1" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="body">
          <type api="T:System.Func`5" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
              <type api="T:System.Threading.Tasks.ParallelLoopState" ref="true" />
              <type api="T:System.Int64" ref="false" />
              <template name="TLocal" index="1" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
              <template name="TLocal" index="1" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="localFinally">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <template name="TLocal" index="1" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.ParallelLoopResult" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="c714ee12-c61f-49b8-a65e-5f343bdd589f" />
    </api>
    <api id="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})">
      <topicdata group="api" />
      <apidata name="ForEach" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Parallel.ForEach" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="parallelOptions">
          <type api="T:System.Threading.Tasks.ParallelOptions" ref="true" />
        </parameter>
        <parameter name="body">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.ParallelLoopResult" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="dd864fd6-9250-5b1f-1049-8020ad1fe0a5" />
    </api>
    <api id="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
      <topicdata group="api" />
      <apidata name="ForEach" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Parallel.ForEach" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="parallelOptions">
          <type api="T:System.Threading.Tasks.ParallelOptions" ref="true" />
        </parameter>
        <parameter name="body">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})" />
              <type api="T:System.Threading.Tasks.ParallelLoopState" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.ParallelLoopResult" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="4e79e76c-52b5-57a4-0a61-ee5a6d626d41" />
    </api>
    <api id="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})">
      <topicdata group="api" />
      <apidata name="ForEach" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Parallel.ForEach" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="parallelOptions">
          <type api="T:System.Threading.Tasks.ParallelOptions" ref="true" />
        </parameter>
        <parameter name="body">
          <type api="T:System.Action`3" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState,System.Int64})" />
              <type api="T:System.Threading.Tasks.ParallelLoopState" ref="true" />
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.ParallelLoopResult" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="1feff57a-4b18-7a70-26e9-fe5dab2128ee" />
    </api>
    <api id="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})">
      <topicdata group="api" />
      <apidata name="ForEach" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Parallel.ForEach" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TLocal" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="parallelOptions">
          <type api="T:System.Threading.Tasks.ParallelOptions" ref="true" />
        </parameter>
        <parameter name="localInit">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="TLocal" index="1" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="body">
          <type api="T:System.Func`4" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
              <type api="T:System.Threading.Tasks.ParallelLoopState" ref="true" />
              <template name="TLocal" index="1" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
              <template name="TLocal" index="1" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="localFinally">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <template name="TLocal" index="1" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,``1,``1},System.Action{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.ParallelLoopResult" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="a0eeac4d-e97a-ec5c-9912-8e57b435f2b2" />
    </api>
    <api id="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})">
      <topicdata group="api" />
      <apidata name="ForEach" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Parallel.ForEach" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TSource" />
        <template name="TLocal" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="parallelOptions">
          <type api="T:System.Threading.Tasks.ParallelOptions" ref="true" />
        </parameter>
        <parameter name="localInit">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="TLocal" index="1" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="body">
          <type api="T:System.Func`5" ref="true">
            <specialization>
              <template name="TSource" index="0" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
              <type api="T:System.Threading.Tasks.ParallelLoopState" ref="true" />
              <type api="T:System.Int64" ref="false" />
              <template name="TLocal" index="1" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
              <template name="TLocal" index="1" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="localFinally">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <template name="TLocal" index="1" api="M:System.Threading.Tasks.Parallel.ForEach``2(System.Collections.Generic.IEnumerable{``0},System.Threading.Tasks.ParallelOptions,System.Func{``1},System.Func{``0,System.Threading.Tasks.ParallelLoopState,System.Int64,``1,``1},System.Action{``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.ParallelLoopResult" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="f30164ff-593f-a5d4-e7b4-d7e94f57fefd" />
    </api>
    <api id="M:System.Threading.Tasks.Parallel.Invoke(System.Action[])">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Parallel.Invoke" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="actions" params="true">
          <arrayOf rank="1">
            <type api="T:System.Action" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="c2d98cee-5bcf-418e-7397-2840d5131c57" />
    </api>
    <api id="M:System.Threading.Tasks.Parallel.Invoke(System.Threading.Tasks.ParallelOptions,System.Action[])">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Parallel.Invoke" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parallelOptions">
          <type api="T:System.Threading.Tasks.ParallelOptions" ref="true" />
        </parameter>
        <parameter name="actions" params="true">
          <arrayOf rank="1">
            <type api="T:System.Action" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Parallel" ref="true" />
      </containers>
      <file name="e71a072a-d0cd-585c-a732-c015a707b257" />
    </api>
    <api id="T:System.Threading.Tasks.ParallelLoopResult">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Threading.Tasks.ParallelLoopResult" />
      <apidata name="ParallelLoopResult" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
      </containers>
      <file name="75f858ea-a4ba-ce29-97d7-3952cbd2629f" />
    </api>
    <api id="AllMembers.T:System.Threading.Tasks.ParallelLoopResult">
      <topicdata name="ParallelLoopResult" group="list" subgroup="members" typeTopicId="T:System.Threading.Tasks.ParallelLoopResult" />
      <apidata name="ParallelLoopResult" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="P:System.Threading.Tasks.ParallelLoopResult.IsCompleted" />
        <element api="P:System.Threading.Tasks.ParallelLoopResult.LowestBreakIteration" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.ParallelLoopResult" />
      </containers>
      <file name="01781818-b54c-1d14-d890-b849bd05a994" />
    </api>
    <api id="Methods.T:System.Threading.Tasks.ParallelLoopResult">
      <topicdata name="ParallelLoopResult" group="list" subgroup="Methods" typeTopicId="T:System.Threading.Tasks.ParallelLoopResult" />
      <apidata name="ParallelLoopResult" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.ParallelLoopResult" />
      </containers>
      <file name="12eabf57-bda6-5f89-5f73-2ec032894126" />
    </api>
    <api id="Properties.T:System.Threading.Tasks.ParallelLoopResult">
      <topicdata name="ParallelLoopResult" group="list" subgroup="Properties" typeTopicId="T:System.Threading.Tasks.ParallelLoopResult" />
      <apidata name="ParallelLoopResult" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Threading.Tasks.ParallelLoopResult.IsCompleted" />
        <element api="P:System.Threading.Tasks.ParallelLoopResult.LowestBreakIteration" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.ParallelLoopResult" />
      </containers>
      <file name="9362824c-acc5-c8b6-f6c9-0e81b4db309f" />
    </api>
    <api id="P:System.Threading.Tasks.ParallelLoopResult.IsCompleted">
      <topicdata group="api" />
      <apidata name="IsCompleted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsCompleted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.ParallelLoopResult" ref="false" />
      </containers>
      <file name="d6e48391-0443-9cb6-d269-09d0cb53ddec" />
    </api>
    <api id="P:System.Threading.Tasks.ParallelLoopResult.LowestBreakIteration">
      <topicdata group="api" />
      <apidata name="LowestBreakIteration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LowestBreakIteration" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.ParallelLoopResult" ref="false" />
      </containers>
      <file name="a7473f73-60ca-d137-8841-4434170b97d9" />
    </api>
    <api id="T:System.Threading.Tasks.ParallelLoopState">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Threading.Tasks.ParallelLoopState" />
      <apidata name="ParallelLoopState" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="b94ab809-7d26-fa2e-4080-c7c90d3fb5e1" />
    </api>
    <api id="AllMembers.T:System.Threading.Tasks.ParallelLoopState">
      <topicdata name="ParallelLoopState" group="list" subgroup="members" typeTopicId="T:System.Threading.Tasks.ParallelLoopState" />
      <apidata name="ParallelLoopState" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.Tasks.ParallelLoopState.Break" />
        <element api="P:System.Threading.Tasks.ParallelLoopState.IsExceptional" />
        <element api="P:System.Threading.Tasks.ParallelLoopState.IsStopped" />
        <element api="P:System.Threading.Tasks.ParallelLoopState.LowestBreakIteration" />
        <element api="P:System.Threading.Tasks.ParallelLoopState.ShouldExitCurrentIteration" />
        <element api="M:System.Threading.Tasks.ParallelLoopState.Stop" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.ParallelLoopState" />
      </containers>
      <file name="2f0719a1-3be9-dade-2eed-e004df980c0c" />
    </api>
    <api id="Methods.T:System.Threading.Tasks.ParallelLoopState">
      <topicdata name="ParallelLoopState" group="list" subgroup="Methods" typeTopicId="T:System.Threading.Tasks.ParallelLoopState" />
      <apidata name="ParallelLoopState" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.Tasks.ParallelLoopState.Break" />
        <element api="M:System.Threading.Tasks.ParallelLoopState.Stop" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.ParallelLoopState" />
      </containers>
      <file name="f99d490d-0152-a05e-b50b-9aa7b390ed97" />
    </api>
    <api id="Properties.T:System.Threading.Tasks.ParallelLoopState">
      <topicdata name="ParallelLoopState" group="list" subgroup="Properties" typeTopicId="T:System.Threading.Tasks.ParallelLoopState" />
      <apidata name="ParallelLoopState" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Threading.Tasks.ParallelLoopState.IsExceptional" />
        <element api="P:System.Threading.Tasks.ParallelLoopState.IsStopped" />
        <element api="P:System.Threading.Tasks.ParallelLoopState.LowestBreakIteration" />
        <element api="P:System.Threading.Tasks.ParallelLoopState.ShouldExitCurrentIteration" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.ParallelLoopState" />
      </containers>
      <file name="92d81b9b-5c14-4a80-2d91-f78c2030f56f" />
    </api>
    <api id="M:System.Threading.Tasks.ParallelLoopState.Break">
      <topicdata group="api" />
      <apidata name="Break" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.ParallelLoopState" ref="true" />
      </containers>
      <file name="d5eefd41-74c7-e409-ceb8-97e084edfe67" />
    </api>
    <api id="P:System.Threading.Tasks.ParallelLoopState.IsExceptional">
      <topicdata group="api" />
      <apidata name="IsExceptional" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsExceptional" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.ParallelLoopState" ref="true" />
      </containers>
      <file name="a836abf6-a182-dc00-00ee-a3ca68841525" />
    </api>
    <api id="P:System.Threading.Tasks.ParallelLoopState.IsStopped">
      <topicdata group="api" />
      <apidata name="IsStopped" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsStopped" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.ParallelLoopState" ref="true" />
      </containers>
      <file name="ed1237e5-ef88-dbfe-a0f8-f88b73bf853c" />
    </api>
    <api id="P:System.Threading.Tasks.ParallelLoopState.LowestBreakIteration">
      <topicdata group="api" />
      <apidata name="LowestBreakIteration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LowestBreakIteration" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.ParallelLoopState" ref="true" />
      </containers>
      <file name="66fb2932-6811-6a67-3b73-e33026eac4e7" />
    </api>
    <api id="P:System.Threading.Tasks.ParallelLoopState.ShouldExitCurrentIteration">
      <topicdata group="api" />
      <apidata name="ShouldExitCurrentIteration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ShouldExitCurrentIteration" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.ParallelLoopState" ref="true" />
      </containers>
      <file name="c17f7849-f2a3-9d14-cc6a-64d226939063" />
    </api>
    <api id="M:System.Threading.Tasks.ParallelLoopState.Stop">
      <topicdata group="api" />
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.ParallelLoopState" ref="true" />
      </containers>
      <file name="d3c250a1-e932-9521-c97d-7b2d42a3a317" />
    </api>
    <api id="T:System.Threading.Tasks.ParallelOptions">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Threading.Tasks.ParallelOptions" />
      <apidata name="ParallelOptions" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.Tasks.ParallelOptions.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
      </containers>
      <file name="b1c784a1-5dd9-7f47-797e-e639ac7df201" />
    </api>
    <api id="AllMembers.T:System.Threading.Tasks.ParallelOptions">
      <topicdata name="ParallelOptions" group="list" subgroup="members" typeTopicId="T:System.Threading.Tasks.ParallelOptions" />
      <apidata name="ParallelOptions" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.Tasks.ParallelOptions.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.Tasks.ParallelOptions.#ctor" />
        <element api="P:System.Threading.Tasks.ParallelOptions.CancellationToken" />
        <element api="P:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism" />
        <element api="P:System.Threading.Tasks.ParallelOptions.TaskScheduler" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.ParallelOptions" />
      </containers>
      <file name="a24686f5-9bdd-3adf-1f96-b4569e890728" />
    </api>
    <api id="Methods.T:System.Threading.Tasks.ParallelOptions">
      <topicdata name="ParallelOptions" group="list" subgroup="Methods" typeTopicId="T:System.Threading.Tasks.ParallelOptions" />
      <apidata name="ParallelOptions" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.Tasks.ParallelOptions.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.ParallelOptions" />
      </containers>
      <file name="02e20363-8153-12a2-713f-a41c195d81e0" />
    </api>
    <api id="Properties.T:System.Threading.Tasks.ParallelOptions">
      <topicdata name="ParallelOptions" group="list" subgroup="Properties" typeTopicId="T:System.Threading.Tasks.ParallelOptions" />
      <apidata name="ParallelOptions" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.Tasks.ParallelOptions.#ctor" />
      <elements>
        <element api="P:System.Threading.Tasks.ParallelOptions.CancellationToken" />
        <element api="P:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism" />
        <element api="P:System.Threading.Tasks.ParallelOptions.TaskScheduler" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.ParallelOptions" />
      </containers>
      <file name="4931a48c-e0b4-3062-02e7-3b432c2a32e3" />
    </api>
    <api id="M:System.Threading.Tasks.ParallelOptions.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.ParallelOptions" ref="true" />
      </containers>
      <file name="678ed76e-2ba6-f40e-9ca8-8f45b16b909f" />
    </api>
    <api id="P:System.Threading.Tasks.ParallelOptions.CancellationToken">
      <topicdata group="api" />
      <apidata name="CancellationToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CancellationToken" />
      <setter name="set_CancellationToken" />
      <returns>
        <type api="T:System.Threading.CancellationToken" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.ParallelOptions" ref="true" />
      </containers>
      <file name="11141aa2-9d0a-472c-d9ff-8d26f8eb2f8a" />
    </api>
    <api id="P:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism">
      <topicdata group="api" />
      <apidata name="MaxDegreeOfParallelism" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxDegreeOfParallelism" />
      <setter name="set_MaxDegreeOfParallelism" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.ParallelOptions" ref="true" />
      </containers>
      <file name="09f0682f-64db-7dcb-6af8-666a8c4419f6" />
    </api>
    <api id="P:System.Threading.Tasks.ParallelOptions.TaskScheduler">
      <topicdata group="api" />
      <apidata name="TaskScheduler" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TaskScheduler" />
      <setter name="set_TaskScheduler" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.ParallelOptions" ref="true" />
      </containers>
      <file name="8fd1f766-c337-7e1c-0d15-3526d7686aae" />
    </api>
    <api id="T:System.Threading.Tasks.Task">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Threading.Tasks.Task" />
      <apidata name="Task" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Threading.Tasks.Task`1" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IAsyncResult" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="6e745a04-8cb4-a9ba-45c1-6526f37b957c" />
    </api>
    <api id="AllMembers.T:System.Threading.Tasks.Task">
      <topicdata name="Task" group="list" subgroup="members" typeTopicId="T:System.Threading.Tasks.Task" />
      <apidata name="Task" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Threading.TaskExtensions.IsDispatcherOperationTask(System.Threading.Tasks.Task)" source="extension">
          <apidata name="IsDispatcherOperationTask" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Windows.Presentation" module="System.Windows.Presentation" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.TaskExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Threading.TaskExtensions.DispatcherOperationWait(System.Threading.Tasks.Task)" source="extension" overload="true">
          <apidata name="DispatcherOperationWait" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Windows.Threading.DispatcherOperationStatus" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Windows.Presentation" module="System.Windows.Presentation" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.TaskExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Threading.TaskExtensions.DispatcherOperationWait(System.Threading.Tasks.Task,System.TimeSpan)" source="extension" overload="true">
          <apidata name="DispatcherOperationWait" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="timeout">
              <type api="T:System.TimeSpan" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Threading.DispatcherOperationStatus" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Windows.Presentation" module="System.Windows.Presentation" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.TaskExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.Threading.Tasks.Task.#ctor">
          <element api="M:System.Threading.Tasks.Task.#ctor(System.Action)" />
          <element api="M:System.Threading.Tasks.Task.#ctor(System.Action,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task.#ctor(System.Action,System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.Task.#ctor(System.Action{System.Object},System.Object)" />
          <element api="M:System.Threading.Tasks.Task.#ctor(System.Action,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.Task.#ctor(System.Action{System.Object},System.Object,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task.#ctor(System.Action{System.Object},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.Task.#ctor(System.Action{System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)" />
        </element>
        <element api="P:System.Threading.Tasks.Task.AsyncState" />
        <element api="P:System.Threading.Tasks.Task.CompletedTask" />
        <element api="M:System.Threading.Tasks.Task.ConfigureAwait(System.Boolean)" />
        <element api="Overload:System.Threading.Tasks.Task.ContinueWith">
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task})" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0})" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
        </element>
        <element api="P:System.Threading.Tasks.Task.CreationOptions" />
        <element api="P:System.Threading.Tasks.Task.CurrentId" />
        <element api="Overload:System.Threading.Tasks.Task.Delay">
          <element api="M:System.Threading.Tasks.Task.Delay(System.Int32)" />
          <element api="M:System.Threading.Tasks.Task.Delay(System.TimeSpan)" />
          <element api="M:System.Threading.Tasks.Task.Delay(System.Int32,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task.Delay(System.TimeSpan,System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.Threading.Tasks.Task.Dispose">
          <element api="M:System.Threading.Tasks.Task.Dispose" />
          <element api="M:System.Threading.Tasks.Task.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Threading.Tasks.Task.Exception" />
        <element api="P:System.Threading.Tasks.Task.Factory" />
        <element api="Overload:System.Threading.Tasks.Task.FromCanceled">
          <element api="M:System.Threading.Tasks.Task.FromCanceled(System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task.FromCanceled``1(System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.Threading.Tasks.Task.FromException">
          <element api="M:System.Threading.Tasks.Task.FromException(System.Exception)" />
          <element api="M:System.Threading.Tasks.Task.FromException``1(System.Exception)" />
        </element>
        <element api="M:System.Threading.Tasks.Task.FromResult``1(``0)" />
        <element api="M:System.Threading.Tasks.Task.GetAwaiter" />
        <element api="P:System.Threading.Tasks.Task.Id" />
        <element api="P:System.Threading.Tasks.Task.IsCanceled" />
        <element api="P:System.Threading.Tasks.Task.IsCompleted" />
        <element api="P:System.Threading.Tasks.Task.IsFaulted" />
        <element api="Overload:System.Threading.Tasks.Task.Run">
          <element api="M:System.Threading.Tasks.Task.Run(System.Action)" />
          <element api="M:System.Threading.Tasks.Task.Run``1(System.Func{System.Threading.Tasks.Task{``0}})" />
          <element api="M:System.Threading.Tasks.Task.Run(System.Func{System.Threading.Tasks.Task})" />
          <element api="M:System.Threading.Tasks.Task.Run``1(System.Func{``0})" />
          <element api="M:System.Threading.Tasks.Task.Run(System.Action,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task.Run``1(System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task.Run(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task.Run``1(System.Func{``0},System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.Threading.Tasks.Task.RunSynchronously">
          <element api="M:System.Threading.Tasks.Task.RunSynchronously" />
          <element api="M:System.Threading.Tasks.Task.RunSynchronously(System.Threading.Tasks.TaskScheduler)" />
        </element>
        <element api="Overload:System.Threading.Tasks.Task.Start">
          <element api="M:System.Threading.Tasks.Task.Start" />
          <element api="M:System.Threading.Tasks.Task.Start(System.Threading.Tasks.TaskScheduler)" />
        </element>
        <element api="P:System.Threading.Tasks.Task.Status" />
        <element api="P:System.Threading.Tasks.Task.System#IAsyncResult#AsyncWaitHandle" />
        <element api="P:System.Threading.Tasks.Task.System#IAsyncResult#CompletedSynchronously" />
        <element api="Overload:System.Threading.Tasks.Task.Wait">
          <element api="M:System.Threading.Tasks.Task.Wait" />
          <element api="M:System.Threading.Tasks.Task.Wait(System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task.Wait(System.Int32)" />
          <element api="M:System.Threading.Tasks.Task.Wait(System.TimeSpan)" />
          <element api="M:System.Threading.Tasks.Task.Wait(System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.Threading.Tasks.Task.WaitAll">
          <element api="M:System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[])" />
          <element api="M:System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Int32)" />
          <element api="M:System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.TimeSpan)" />
          <element api="M:System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.Threading.Tasks.Task.WaitAny">
          <element api="M:System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[])" />
          <element api="M:System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Int32)" />
          <element api="M:System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.TimeSpan)" />
          <element api="M:System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.Threading.Tasks.Task.WhenAll">
          <element api="M:System.Threading.Tasks.Task.WhenAll``1(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{``0}})" />
          <element api="M:System.Threading.Tasks.Task.WhenAll(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task})" />
          <element api="M:System.Threading.Tasks.Task.WhenAll(System.Threading.Tasks.Task[])" />
          <element api="M:System.Threading.Tasks.Task.WhenAll``1(System.Threading.Tasks.Task{``0}[])" />
        </element>
        <element api="Overload:System.Threading.Tasks.Task.WhenAny">
          <element api="M:System.Threading.Tasks.Task.WhenAny``1(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{``0}})" />
          <element api="M:System.Threading.Tasks.Task.WhenAny(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task})" />
          <element api="M:System.Threading.Tasks.Task.WhenAny(System.Threading.Tasks.Task[])" />
          <element api="M:System.Threading.Tasks.Task.WhenAny``1(System.Threading.Tasks.Task{``0}[])" />
        </element>
        <element api="M:System.Threading.Tasks.Task.Yield" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" />
      </containers>
      <file name="2f717215-a6ae-0490-f251-b59c52a6c038" />
    </api>
    <api id="Methods.T:System.Threading.Tasks.Task">
      <topicdata name="Task" group="list" subgroup="Methods" typeTopicId="T:System.Threading.Tasks.Task" />
      <apidata name="Task" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Windows.Threading.TaskExtensions.IsDispatcherOperationTask(System.Threading.Tasks.Task)" source="extension">
          <apidata name="IsDispatcherOperationTask" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Windows.Presentation" module="System.Windows.Presentation" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.TaskExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Threading.TaskExtensions.DispatcherOperationWait(System.Threading.Tasks.Task)" source="extension" overload="true">
          <apidata name="DispatcherOperationWait" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Windows.Threading.DispatcherOperationStatus" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Windows.Presentation" module="System.Windows.Presentation" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.TaskExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Threading.TaskExtensions.DispatcherOperationWait(System.Threading.Tasks.Task,System.TimeSpan)" source="extension" overload="true">
          <apidata name="DispatcherOperationWait" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="timeout">
              <type api="T:System.TimeSpan" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Threading.DispatcherOperationStatus" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Windows.Presentation" module="System.Windows.Presentation" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.TaskExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Threading.Tasks.Task.ConfigureAwait(System.Boolean)" />
        <element api="Overload:System.Threading.Tasks.Task.ContinueWith">
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task})" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0})" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
        </element>
        <element api="Overload:System.Threading.Tasks.Task.Delay">
          <element api="M:System.Threading.Tasks.Task.Delay(System.Int32)" />
          <element api="M:System.Threading.Tasks.Task.Delay(System.TimeSpan)" />
          <element api="M:System.Threading.Tasks.Task.Delay(System.Int32,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task.Delay(System.TimeSpan,System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.Threading.Tasks.Task.Dispose">
          <element api="M:System.Threading.Tasks.Task.Dispose" />
          <element api="M:System.Threading.Tasks.Task.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Threading.Tasks.Task.FromCanceled">
          <element api="M:System.Threading.Tasks.Task.FromCanceled(System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task.FromCanceled``1(System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.Threading.Tasks.Task.FromException">
          <element api="M:System.Threading.Tasks.Task.FromException(System.Exception)" />
          <element api="M:System.Threading.Tasks.Task.FromException``1(System.Exception)" />
        </element>
        <element api="M:System.Threading.Tasks.Task.FromResult``1(``0)" />
        <element api="M:System.Threading.Tasks.Task.GetAwaiter" />
        <element api="Overload:System.Threading.Tasks.Task.Run">
          <element api="M:System.Threading.Tasks.Task.Run(System.Action)" />
          <element api="M:System.Threading.Tasks.Task.Run``1(System.Func{System.Threading.Tasks.Task{``0}})" />
          <element api="M:System.Threading.Tasks.Task.Run(System.Func{System.Threading.Tasks.Task})" />
          <element api="M:System.Threading.Tasks.Task.Run``1(System.Func{``0})" />
          <element api="M:System.Threading.Tasks.Task.Run(System.Action,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task.Run``1(System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task.Run(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task.Run``1(System.Func{``0},System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.Threading.Tasks.Task.RunSynchronously">
          <element api="M:System.Threading.Tasks.Task.RunSynchronously" />
          <element api="M:System.Threading.Tasks.Task.RunSynchronously(System.Threading.Tasks.TaskScheduler)" />
        </element>
        <element api="Overload:System.Threading.Tasks.Task.Start">
          <element api="M:System.Threading.Tasks.Task.Start" />
          <element api="M:System.Threading.Tasks.Task.Start(System.Threading.Tasks.TaskScheduler)" />
        </element>
        <element api="Overload:System.Threading.Tasks.Task.Wait">
          <element api="M:System.Threading.Tasks.Task.Wait" />
          <element api="M:System.Threading.Tasks.Task.Wait(System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task.Wait(System.Int32)" />
          <element api="M:System.Threading.Tasks.Task.Wait(System.TimeSpan)" />
          <element api="M:System.Threading.Tasks.Task.Wait(System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.Threading.Tasks.Task.WaitAll">
          <element api="M:System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[])" />
          <element api="M:System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Int32)" />
          <element api="M:System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.TimeSpan)" />
          <element api="M:System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.Threading.Tasks.Task.WaitAny">
          <element api="M:System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[])" />
          <element api="M:System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Int32)" />
          <element api="M:System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.TimeSpan)" />
          <element api="M:System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.Threading.Tasks.Task.WhenAll">
          <element api="M:System.Threading.Tasks.Task.WhenAll``1(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{``0}})" />
          <element api="M:System.Threading.Tasks.Task.WhenAll(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task})" />
          <element api="M:System.Threading.Tasks.Task.WhenAll(System.Threading.Tasks.Task[])" />
          <element api="M:System.Threading.Tasks.Task.WhenAll``1(System.Threading.Tasks.Task{``0}[])" />
        </element>
        <element api="Overload:System.Threading.Tasks.Task.WhenAny">
          <element api="M:System.Threading.Tasks.Task.WhenAny``1(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{``0}})" />
          <element api="M:System.Threading.Tasks.Task.WhenAny(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task})" />
          <element api="M:System.Threading.Tasks.Task.WhenAny(System.Threading.Tasks.Task[])" />
          <element api="M:System.Threading.Tasks.Task.WhenAny``1(System.Threading.Tasks.Task{``0}[])" />
        </element>
        <element api="M:System.Threading.Tasks.Task.Yield" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" />
      </containers>
      <file name="0be03327-07cb-f02d-bfb8-a5f526063aa8" />
    </api>
    <api id="Properties.T:System.Threading.Tasks.Task">
      <topicdata name="Task" group="list" subgroup="Properties" typeTopicId="T:System.Threading.Tasks.Task" />
      <apidata name="Task" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Threading.Tasks.Task.AsyncState" />
        <element api="P:System.Threading.Tasks.Task.CompletedTask" />
        <element api="P:System.Threading.Tasks.Task.CreationOptions" />
        <element api="P:System.Threading.Tasks.Task.CurrentId" />
        <element api="P:System.Threading.Tasks.Task.Exception" />
        <element api="P:System.Threading.Tasks.Task.Factory" />
        <element api="P:System.Threading.Tasks.Task.Id" />
        <element api="P:System.Threading.Tasks.Task.IsCanceled" />
        <element api="P:System.Threading.Tasks.Task.IsCompleted" />
        <element api="P:System.Threading.Tasks.Task.IsFaulted" />
        <element api="P:System.Threading.Tasks.Task.Status" />
        <element api="P:System.Threading.Tasks.Task.System#IAsyncResult#AsyncWaitHandle" />
        <element api="P:System.Threading.Tasks.Task.System#IAsyncResult#CompletedSynchronously" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" />
      </containers>
      <file name="adcb144f-4920-fa93-4502-eda0d57befdf" />
    </api>
    <api id="Overload:System.Threading.Tasks.Task.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.Task" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Threading.Tasks.Task.#ctor(System.Action)" />
        <element api="M:System.Threading.Tasks.Task.#ctor(System.Action,System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.Task.#ctor(System.Action,System.Threading.Tasks.TaskCreationOptions)" />
        <element api="M:System.Threading.Tasks.Task.#ctor(System.Action{System.Object},System.Object)" />
        <element api="M:System.Threading.Tasks.Task.#ctor(System.Action,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)" />
        <element api="M:System.Threading.Tasks.Task.#ctor(System.Action{System.Object},System.Object,System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.Task.#ctor(System.Action{System.Object},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        <element api="M:System.Threading.Tasks.Task.#ctor(System.Action{System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="56d306c9-2bcb-127f-1544-c61bdff03ef1" />
    </api>
    <api id="Overload:System.Threading.Tasks.Task.ContinueWith">
      <topicdata name="ContinueWith" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.Task" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task})" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0})" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskContinuationOptions)" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object)" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskContinuationOptions)" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object)" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.Tasks.TaskContinuationOptions)" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="56581286-c5b2-6c4b-9ab6-087345252fd3" />
    </api>
    <api id="Overload:System.Threading.Tasks.Task.Delay">
      <topicdata name="Delay" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.Task" />
      <apidata name="Delay" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Tasks.Task.Delay(System.Int32)" />
        <element api="M:System.Threading.Tasks.Task.Delay(System.TimeSpan)" />
        <element api="M:System.Threading.Tasks.Task.Delay(System.Int32,System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.Task.Delay(System.TimeSpan,System.Threading.CancellationToken)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="4d069bbc-9899-28d7-d530-3bfab61f91ed" />
    </api>
    <api id="Overload:System.Threading.Tasks.Task.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.Task" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Tasks.Task.Dispose" />
        <element api="M:System.Threading.Tasks.Task.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="ae2a041a-9763-5784-5e55-2c80d1912c8c" />
    </api>
    <api id="Overload:System.Threading.Tasks.Task.FromCanceled">
      <topicdata name="FromCanceled" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.Task" />
      <apidata name="FromCanceled" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Tasks.Task.FromCanceled(System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.Task.FromCanceled``1(System.Threading.CancellationToken)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="ebe9181e-f6e7-bb10-a94f-e7e41b6eb182" />
    </api>
    <api id="Overload:System.Threading.Tasks.Task.FromException">
      <topicdata name="FromException" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.Task" />
      <apidata name="FromException" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Tasks.Task.FromException(System.Exception)" />
        <element api="M:System.Threading.Tasks.Task.FromException``1(System.Exception)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="aa7df888-0d89-17c6-2523-05758014a2d7" />
    </api>
    <api id="Overload:System.Threading.Tasks.Task.Run">
      <topicdata name="Run" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.Task" />
      <apidata name="Run" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Tasks.Task.Run(System.Action)" />
        <element api="M:System.Threading.Tasks.Task.Run``1(System.Func{System.Threading.Tasks.Task{``0}})" />
        <element api="M:System.Threading.Tasks.Task.Run(System.Func{System.Threading.Tasks.Task})" />
        <element api="M:System.Threading.Tasks.Task.Run``1(System.Func{``0})" />
        <element api="M:System.Threading.Tasks.Task.Run(System.Action,System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.Task.Run``1(System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.Task.Run(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.Task.Run``1(System.Func{``0},System.Threading.CancellationToken)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="e204f195-7cfa-3da9-71ee-3298da08baae" />
    </api>
    <api id="Overload:System.Threading.Tasks.Task.RunSynchronously">
      <topicdata name="RunSynchronously" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.Task" />
      <apidata name="RunSynchronously" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Tasks.Task.RunSynchronously" />
        <element api="M:System.Threading.Tasks.Task.RunSynchronously(System.Threading.Tasks.TaskScheduler)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="bdef4788-421d-618d-03b4-1b4342292410" />
    </api>
    <api id="Overload:System.Threading.Tasks.Task.Start">
      <topicdata name="Start" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.Task" />
      <apidata name="Start" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Tasks.Task.Start" />
        <element api="M:System.Threading.Tasks.Task.Start(System.Threading.Tasks.TaskScheduler)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="c5414ecc-3efe-f674-bdf3-5f10d7ab97ab" />
    </api>
    <api id="Overload:System.Threading.Tasks.Task.Wait">
      <topicdata name="Wait" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.Task" />
      <apidata name="Wait" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Tasks.Task.Wait" />
        <element api="M:System.Threading.Tasks.Task.Wait(System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.Task.Wait(System.Int32)" />
        <element api="M:System.Threading.Tasks.Task.Wait(System.TimeSpan)" />
        <element api="M:System.Threading.Tasks.Task.Wait(System.Int32,System.Threading.CancellationToken)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="00f2bae3-994c-5672-9be5-a28646fadceb" />
    </api>
    <api id="Overload:System.Threading.Tasks.Task.WaitAll">
      <topicdata name="WaitAll" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.Task" />
      <apidata name="WaitAll" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[])" />
        <element api="M:System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Int32)" />
        <element api="M:System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.TimeSpan)" />
        <element api="M:System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Int32,System.Threading.CancellationToken)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="49ba024a-c30c-1a3d-60b4-ac26de2ced11" />
    </api>
    <api id="Overload:System.Threading.Tasks.Task.WaitAny">
      <topicdata name="WaitAny" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.Task" />
      <apidata name="WaitAny" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[])" />
        <element api="M:System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Int32)" />
        <element api="M:System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.TimeSpan)" />
        <element api="M:System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Int32,System.Threading.CancellationToken)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="12a1d330-6d3f-baf5-73bb-40b54a40a55c" />
    </api>
    <api id="Overload:System.Threading.Tasks.Task.WhenAll">
      <topicdata name="WhenAll" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.Task" />
      <apidata name="WhenAll" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Tasks.Task.WhenAll``1(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{``0}})" />
        <element api="M:System.Threading.Tasks.Task.WhenAll(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task})" />
        <element api="M:System.Threading.Tasks.Task.WhenAll(System.Threading.Tasks.Task[])" />
        <element api="M:System.Threading.Tasks.Task.WhenAll``1(System.Threading.Tasks.Task{``0}[])" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="fb5ca398-fadb-87c1-b8be-7997587cbb62" />
    </api>
    <api id="Overload:System.Threading.Tasks.Task.WhenAny">
      <topicdata name="WhenAny" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.Task" />
      <apidata name="WhenAny" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Tasks.Task.WhenAny``1(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{``0}})" />
        <element api="M:System.Threading.Tasks.Task.WhenAny(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task})" />
        <element api="M:System.Threading.Tasks.Task.WhenAny(System.Threading.Tasks.Task[])" />
        <element api="M:System.Threading.Tasks.Task.WhenAny``1(System.Threading.Tasks.Task{``0}[])" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="8e9d6b0b-308b-6c36-dd18-82f482998d10" />
    </api>
    <api id="M:System.Threading.Tasks.Task.#ctor(System.Action)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.Task.#ctor" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="447d3e5d-34df-183e-7167-0ba38b53b1b4" />
    </api>
    <api id="M:System.Threading.Tasks.Task.#ctor(System.Action,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.Task.#ctor" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="72d30da2-104d-153d-59f2-aa92e87773a1" />
    </api>
    <api id="M:System.Threading.Tasks.Task.#ctor(System.Action,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.Task.#ctor" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="8a089a28-f35a-f596-280e-7a8d7b0038cd" />
    </api>
    <api id="M:System.Threading.Tasks.Task.#ctor(System.Action,System.Threading.Tasks.TaskCreationOptions)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.Task.#ctor" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action" ref="true" />
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="43c30700-18db-c2a9-084b-70c70d61cc52" />
    </api>
    <api id="M:System.Threading.Tasks.Task.#ctor(System.Action{System.Object},System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.Task.#ctor" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="89e92f43-6eed-c287-333f-e1977ac45533" />
    </api>
    <api id="M:System.Threading.Tasks.Task.#ctor(System.Action{System.Object},System.Object,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.Task.#ctor" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="731d6a12-af98-4579-dc67-76381b9ba394" />
    </api>
    <api id="M:System.Threading.Tasks.Task.#ctor(System.Action{System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.Task.#ctor" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="80c97908-c822-8049-0115-4ac52cac5a81" />
    </api>
    <api id="M:System.Threading.Tasks.Task.#ctor(System.Action{System.Object},System.Object,System.Threading.Tasks.TaskCreationOptions)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.Task.#ctor" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="17f3119f-8f51-0dc2-6b49-14ca326094d0" />
    </api>
    <api id="P:System.Threading.Tasks.Task.AsyncState">
      <topicdata group="api" />
      <apidata name="AsyncState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_AsyncState" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.IAsyncResult.AsyncState">
          <type api="T:System.IAsyncResult" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="af591191-6e25-bbd1-e8b2-adde8b3ee1e9" />
    </api>
    <api id="P:System.Threading.Tasks.Task.CompletedTask">
      <topicdata group="api" />
      <apidata name="CompletedTask" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CompletedTask" />
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="e3c3f166-72e2-91f5-bb99-dcb7d7ac0841" />
    </api>
    <api id="M:System.Threading.Tasks.Task.ConfigureAwait(System.Boolean)">
      <topicdata group="api" />
      <apidata name="ConfigureAwait" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="continueOnCapturedContext">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Runtime.CompilerServices.ConfiguredTaskAwaitable" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="f0b2a69c-ce12-8775-5947-20424dbdc9b8" />
    </api>
    <api id="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task})">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task.ContinueWith" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="continuationAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="f92419e7-d194-54bb-235d-e41c7e9e9446" />
    </api>
    <api id="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task.ContinueWith" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="continuationAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="8896d85a-2dbd-fcbc-ad30-f824babf61a1" />
    </api>
    <api id="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task.ContinueWith" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="continuationAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="5cba466b-90b7-7a52-6311-2497731a40e3" />
    </api>
    <api id="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskContinuationOptions)">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task.ContinueWith" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="continuationAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="fe13a991-4752-78e8-1276-235364d3890a" />
    </api>
    <api id="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task.ContinueWith" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="continuationAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="32a39525-111d-86d3-1fac-e87282bd0e51" />
    </api>
    <api id="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object)">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task.ContinueWith" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="continuationAction">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="fbb7c527-cae5-18aa-073e-189e9ff32b98" />
    </api>
    <api id="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task.ContinueWith" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="continuationAction">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="812d8878-d984-378c-f884-7745c03ea7f5" />
    </api>
    <api id="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task.ContinueWith" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="continuationAction">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="153fd178-a9be-3878-fb42-8f96d38d94f0" />
    </api>
    <api id="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.Tasks.TaskContinuationOptions)">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task.ContinueWith" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="continuationAction">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="0a38afc2-9e64-6f72-e263-306eee6dc59f" />
    </api>
    <api id="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task.ContinueWith" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="continuationAction">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="2c729379-29f3-71eb-807a-4c237c85ee11" />
    </api>
    <api id="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0})">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task.ContinueWith" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
              <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="60781fcf-d422-bd55-a40e-b7b4c11917a2" />
    </api>
    <api id="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task.ContinueWith" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
              <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="f9774a7c-0ac0-d154-b660-0f6ccad1d7ae" />
    </api>
    <api id="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task.ContinueWith" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
              <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="f9c2f880-cfbd-40b4-9183-81cda6194d4b" />
    </api>
    <api id="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskContinuationOptions)">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task.ContinueWith" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
              <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskContinuationOptions)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskContinuationOptions)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="f602595e-c33f-787a-d65d-3b3a7cab20cd" />
    </api>
    <api id="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task.ContinueWith" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
              <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskScheduler)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskScheduler)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="8400c9b3-d5f9-bced-0a74-1962bede2115" />
    </api>
    <api id="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object)">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task.ContinueWith" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="continuationFunction">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
              <type api="T:System.Object" ref="true" />
              <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="7057d089-8476-031a-572d-37d9ac17e5ce" />
    </api>
    <api id="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task.ContinueWith" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="continuationFunction">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
              <type api="T:System.Object" ref="true" />
              <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.CancellationToken)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.CancellationToken)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="dae2da5f-8996-4ae9-d9c4-8dcc0a2b9176" />
    </api>
    <api id="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task.ContinueWith" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="continuationFunction">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
              <type api="T:System.Object" ref="true" />
              <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="b5741064-d2ad-c910-6c0c-7da3cd336c8b" />
    </api>
    <api id="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task.ContinueWith" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="continuationFunction">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
              <type api="T:System.Object" ref="true" />
              <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="b6382281-6e7d-5aa4-f44d-d5d8c63e6c11" />
    </api>
    <api id="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task.ContinueWith" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="continuationFunction">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
              <type api="T:System.Object" ref="true" />
              <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="d468eb62-600f-3ef8-aaa3-454eade3f022" />
    </api>
    <api id="P:System.Threading.Tasks.Task.CreationOptions">
      <topicdata group="api" />
      <apidata name="CreationOptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CreationOptions" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="401c8c69-b16f-eeb4-79d3-39bbdd90c677" />
    </api>
    <api id="P:System.Threading.Tasks.Task.CurrentId">
      <topicdata group="api" />
      <apidata name="CurrentId" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CurrentId" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="c0c97907-48f5-6860-6ab1-928b6c257974" />
    </api>
    <api id="M:System.Threading.Tasks.Task.Delay(System.Int32)">
      <topicdata group="api" />
      <apidata name="Delay" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Task.Delay" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="millisecondsDelay">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="a291b134-4343-6a4f-bb80-0df4a1f54a45" />
    </api>
    <api id="M:System.Threading.Tasks.Task.Delay(System.Int32,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="Delay" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Task.Delay" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="millisecondsDelay">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="9702b85f-82e0-d6b8-947b-19d16ff87923" />
    </api>
    <api id="M:System.Threading.Tasks.Task.Delay(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Delay" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Task.Delay" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="delay">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="fb71a687-9b5b-8443-8c07-4d79b29c99cc" />
    </api>
    <api id="M:System.Threading.Tasks.Task.Delay(System.TimeSpan,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="Delay" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Task.Delay" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="delay">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="85ae70b0-d39d-b7f7-094d-8d1a551e9691" />
    </api>
    <api id="M:System.Threading.Tasks.Task.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="db75a69d-39a0-211f-5ef5-bbe3666f4cd2" />
    </api>
    <api id="M:System.Threading.Tasks.Task.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Threading.Tasks.Task.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="e732d429-1478-8d89-82f7-9739fdb9eb79" />
    </api>
    <api id="P:System.Threading.Tasks.Task.Exception">
      <topicdata group="api" />
      <apidata name="Exception" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Exception" />
      <returns>
        <type api="T:System.AggregateException" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="3f78dc0b-d42c-9558-4a68-34fa6c0fdc61" />
    </api>
    <api id="P:System.Threading.Tasks.Task.Factory">
      <topicdata group="api" />
      <apidata name="Factory" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Factory" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="02cb44bd-ef41-3a99-76a6-75e73bb2639d" />
    </api>
    <api id="M:System.Threading.Tasks.Task.FromCanceled(System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="FromCanceled" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Task.FromCanceled" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="fbe4c53d-5a14-2fc3-c6b5-9e3278c340ed" />
    </api>
    <api id="M:System.Threading.Tasks.Task.FromCanceled``1(System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="FromCanceled" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Task.FromCanceled" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.FromCanceled``1(System.Threading.CancellationToken)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="bb251ec5-6e15-d551-5501-d47b01a533be" />
    </api>
    <api id="M:System.Threading.Tasks.Task.FromException(System.Exception)">
      <topicdata group="api" />
      <apidata name="FromException" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Task.FromException" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="3d1efe55-dbe0-2146-47d1-d1d60191ec94" />
    </api>
    <api id="M:System.Threading.Tasks.Task.FromException``1(System.Exception)">
      <topicdata group="api" />
      <apidata name="FromException" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Task.FromException" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.FromException``1(System.Exception)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="e5c51d23-ff96-d114-e983-20ccda12529b" />
    </api>
    <api id="M:System.Threading.Tasks.Task.FromResult``1(``0)">
      <topicdata group="api" />
      <apidata name="FromResult" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="result">
          <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.FromResult``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.FromResult``1(``0)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="e786a311-cad7-4ae6-66dc-a947c5a85e51" />
    </api>
    <api id="M:System.Threading.Tasks.Task.GetAwaiter">
      <topicdata group="api" />
      <apidata name="GetAwaiter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Runtime.CompilerServices.TaskAwaiter" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="4fec6598-abb8-74ca-b7cd-d98c206b7b33" />
    </api>
    <api id="P:System.Threading.Tasks.Task.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Id" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="bc644878-c24d-af94-197a-8c241725b54c" />
    </api>
    <api id="P:System.Threading.Tasks.Task.IsCanceled">
      <topicdata group="api" />
      <apidata name="IsCanceled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsCanceled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="111ecd37-77bb-97b1-ad5d-602cd0a4b4cf" />
    </api>
    <api id="P:System.Threading.Tasks.Task.IsCompleted">
      <topicdata group="api" />
      <apidata name="IsCompleted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsCompleted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.IAsyncResult.IsCompleted">
          <type api="T:System.IAsyncResult" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="ab168a8d-bf86-8a7a-c1a3-24794f97fbee" />
    </api>
    <api id="P:System.Threading.Tasks.Task.IsFaulted">
      <topicdata group="api" />
      <apidata name="IsFaulted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsFaulted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="5c49c0e9-f44a-dfd4-30ce-560ab237e0db" />
    </api>
    <api id="M:System.Threading.Tasks.Task.Run(System.Action)">
      <topicdata group="api" />
      <apidata name="Run" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Task.Run" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="f301fc89-88bb-d9ee-717f-17e776fb3c78" />
    </api>
    <api id="M:System.Threading.Tasks.Task.Run(System.Action,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="Run" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Task.Run" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="3cc5aa5f-0b59-6f08-ee77-d96004675b9e" />
    </api>
    <api id="M:System.Threading.Tasks.Task.Run``1(System.Func{System.Threading.Tasks.Task{``0}})">
      <topicdata group="api" />
      <apidata name="Run" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Task.Run" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="function">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.Run``1(System.Func{System.Threading.Tasks.Task{``0}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.Run``1(System.Func{System.Threading.Tasks.Task{``0}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="dfb70e2b-db73-16d7-ce6a-43bd886dfde6" />
    </api>
    <api id="M:System.Threading.Tasks.Task.Run``1(System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="Run" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Task.Run" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="function">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.Run``1(System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.Run``1(System.Func{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="9e659b3d-7918-f40b-410a-98b504137b98" />
    </api>
    <api id="M:System.Threading.Tasks.Task.Run(System.Func{System.Threading.Tasks.Task})">
      <topicdata group="api" />
      <apidata name="Run" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Task.Run" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="function">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="57171f10-bffb-7525-86a1-6f55cb8eed01" />
    </api>
    <api id="M:System.Threading.Tasks.Task.Run(System.Func{System.Threading.Tasks.Task},System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="Run" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Task.Run" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="function">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="d9b4b20f-2526-b999-ef47-de076f45db99" />
    </api>
    <api id="M:System.Threading.Tasks.Task.Run``1(System.Func{``0})">
      <topicdata group="api" />
      <apidata name="Run" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Task.Run" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="function">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.Run``1(System.Func{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.Run``1(System.Func{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="e4ffe0c3-f070-7b8b-65cc-1665927a9ebd" />
    </api>
    <api id="M:System.Threading.Tasks.Task.Run``1(System.Func{``0},System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="Run" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Task.Run" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="function">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.Run``1(System.Func{``0},System.Threading.CancellationToken)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.Run``1(System.Func{``0},System.Threading.CancellationToken)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="4c6274db-19e2-05c6-589a-9b988d5b8cc5" />
    </api>
    <api id="M:System.Threading.Tasks.Task.RunSynchronously">
      <topicdata group="api" />
      <apidata name="RunSynchronously" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task.RunSynchronously" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="8b3fea4a-07df-779c-314c-e34b824b2881" />
    </api>
    <api id="M:System.Threading.Tasks.Task.RunSynchronously(System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="RunSynchronously" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task.RunSynchronously" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="05c578cb-a344-546f-edfd-698e874388c0" />
    </api>
    <api id="M:System.Threading.Tasks.Task.Start">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task.Start" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="dc8731af-6368-8d25-1662-e77dfbe98b5f" />
    </api>
    <api id="M:System.Threading.Tasks.Task.Start(System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task.Start" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="238bf358-02f9-a458-4a3b-c5142eaefa41" />
    </api>
    <api id="P:System.Threading.Tasks.Task.Status">
      <topicdata group="api" />
      <apidata name="Status" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Status" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="393c1e77-4a53-7741-62f9-41ea0c957a26" />
    </api>
    <api id="P:System.Threading.Tasks.Task.System#IAsyncResult#AsyncWaitHandle">
      <topicdata group="api" eiiName="IAsyncResult.AsyncWaitHandle" />
      <apidata name="AsyncWaitHandle" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.IAsyncResult.AsyncWaitHandle" />
      <returns>
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </returns>
      <implements>
        <member api="P:System.IAsyncResult.AsyncWaitHandle">
          <type api="T:System.IAsyncResult" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="1bc0a283-b49d-adbc-833c-acb419d4b58b" />
    </api>
    <api id="P:System.Threading.Tasks.Task.System#IAsyncResult#CompletedSynchronously">
      <topicdata group="api" eiiName="IAsyncResult.CompletedSynchronously" />
      <apidata name="CompletedSynchronously" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.IAsyncResult.CompletedSynchronously" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.IAsyncResult.CompletedSynchronously">
          <type api="T:System.IAsyncResult" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="a262654f-47dd-804b-d50a-85028eafd257" />
    </api>
    <api id="M:System.Threading.Tasks.Task.Wait">
      <topicdata group="api" />
      <apidata name="Wait" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task.Wait" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="199efe1b-4fe4-fa4c-627f-ed6a6792345a" />
    </api>
    <api id="M:System.Threading.Tasks.Task.Wait(System.Int32)">
      <topicdata group="api" />
      <apidata name="Wait" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task.Wait" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="a877e7f8-286e-29b8-cff4-45fa988c7ce7" />
    </api>
    <api id="M:System.Threading.Tasks.Task.Wait(System.Int32,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="Wait" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task.Wait" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="ac279495-fa16-fa52-d2c7-709d6867e76b" />
    </api>
    <api id="M:System.Threading.Tasks.Task.Wait(System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="Wait" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task.Wait" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="380d14d4-fdf7-0c1b-df10-8664797007f2" />
    </api>
    <api id="M:System.Threading.Tasks.Task.Wait(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Wait" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task.Wait" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="03575685-a20b-782f-0cbb-d1356695a366" />
    </api>
    <api id="M:System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[])">
      <topicdata group="api" />
      <apidata name="WaitAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Task.WaitAll" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tasks" params="true">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="f45ca77c-c615-bf2d-2613-923bbe6bbfb3" />
    </api>
    <api id="M:System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Int32)">
      <topicdata group="api" />
      <apidata name="WaitAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Task.WaitAll" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="9574922f-85c5-a787-68a6-6fa8b470a9a7" />
    </api>
    <api id="M:System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Int32,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="WaitAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Task.WaitAll" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="fab3b672-b35e-9556-a8ee-8313f2cc5d28" />
    </api>
    <api id="M:System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="WaitAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Task.WaitAll" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="22579a69-d774-8a40-ede8-c68cb6e878df" />
    </api>
    <api id="M:System.Threading.Tasks.Task.WaitAll(System.Threading.Tasks.Task[],System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="WaitAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Task.WaitAll" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="7d6609f7-1018-f8a6-c6e9-2e85f3c93e01" />
    </api>
    <api id="M:System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[])">
      <topicdata group="api" />
      <apidata name="WaitAny" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Task.WaitAny" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tasks" params="true">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="c8a4028d-6698-073f-7531-7a9d27f79b31" />
    </api>
    <api id="M:System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Int32)">
      <topicdata group="api" />
      <apidata name="WaitAny" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Task.WaitAny" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="3915bac6-8999-85b5-b42a-c89de6910884" />
    </api>
    <api id="M:System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Int32,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="WaitAny" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Task.WaitAny" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="millisecondsTimeout">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="8a726eba-698a-f9ba-945a-a844cea6fe4f" />
    </api>
    <api id="M:System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="WaitAny" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Task.WaitAny" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="3e6bc7e0-bebb-658d-f45e-6c9a9b0a5e67" />
    </api>
    <api id="M:System.Threading.Tasks.Task.WaitAny(System.Threading.Tasks.Task[],System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="WaitAny" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Task.WaitAny" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="2ef6bc75-ebcb-936e-65d9-c060f3ecc3cc" />
    </api>
    <api id="M:System.Threading.Tasks.Task.WhenAll``1(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{``0}})">
      <topicdata group="api" />
      <apidata name="WhenAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Task.WhenAll" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="tasks">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.WhenAll``1(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{``0}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <arrayOf rank="1">
              <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.WhenAll``1(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{``0}})" />
            </arrayOf>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="183fd4b6-e36d-67a8-ece8-ca08423ad5cc" />
    </api>
    <api id="M:System.Threading.Tasks.Task.WhenAll(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task})">
      <topicdata group="api" />
      <apidata name="WhenAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Task.WhenAll" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tasks">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="6d1c3569-68a9-d1e5-1975-aa83fcaf4b17" />
    </api>
    <api id="M:System.Threading.Tasks.Task.WhenAll(System.Threading.Tasks.Task[])">
      <topicdata group="api" />
      <apidata name="WhenAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Task.WhenAll" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tasks" params="true">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="3d1a9d92-d898-0199-1ac0-f20df4c0222d" />
    </api>
    <api id="M:System.Threading.Tasks.Task.WhenAll``1(System.Threading.Tasks.Task{``0}[])">
      <topicdata group="api" />
      <apidata name="WhenAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Task.WhenAll" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="tasks" params="true">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.WhenAll``1(System.Threading.Tasks.Task{``0}[])" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <arrayOf rank="1">
              <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.WhenAll``1(System.Threading.Tasks.Task{``0}[])" />
            </arrayOf>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="a59a774a-bbad-9972-d309-8b77d4f466a4" />
    </api>
    <api id="M:System.Threading.Tasks.Task.WhenAny``1(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{``0}})">
      <topicdata group="api" />
      <apidata name="WhenAny" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Task.WhenAny" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="tasks">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.WhenAny``1(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{``0}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.WhenAny``1(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task{``0}})" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="61edaad7-dd4b-a2e2-c51b-ded76aa90cbe" />
    </api>
    <api id="M:System.Threading.Tasks.Task.WhenAny(System.Collections.Generic.IEnumerable{System.Threading.Tasks.Task})">
      <topicdata group="api" />
      <apidata name="WhenAny" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Task.WhenAny" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tasks">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="c65861f1-3587-f99d-4b01-ef13c0703eb1" />
    </api>
    <api id="M:System.Threading.Tasks.Task.WhenAny(System.Threading.Tasks.Task[])">
      <topicdata group="api" />
      <apidata name="WhenAny" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Task.WhenAny" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tasks" params="true">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="33162976-772c-30a1-f5f5-f65f89a50a24" />
    </api>
    <api id="M:System.Threading.Tasks.Task.WhenAny``1(System.Threading.Tasks.Task{``0}[])">
      <topicdata group="api" />
      <apidata name="WhenAny" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.Task.WhenAny" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="tasks" params="true">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.WhenAny``1(System.Threading.Tasks.Task{``0}[])" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Threading.Tasks.Task.WhenAny``1(System.Threading.Tasks.Task{``0}[])" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="8edf2870-c43b-b0ea-bd6c-c9bc9951cd14" />
    </api>
    <api id="M:System.Threading.Tasks.Task.Yield">
      <topicdata group="api" />
      <apidata name="Yield" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Runtime.CompilerServices.YieldAwaitable" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </containers>
      <file name="2d481f83-d81b-1f14-d54c-6c24a7617a95" />
    </api>
    <api id="T:System.Threading.Tasks.Task`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Threading.Tasks.Task`1" />
      <apidata name="Task" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Threading.Tasks.Task" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TResult" />
      </templates>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="7fb7a75c-f83d-c69f-11b3-68fd5c67c3cd" />
    </api>
    <api id="AllMembers.T:System.Threading.Tasks.Task`1">
      <topicdata name="Task" group="list" subgroup="members" typeTopicId="T:System.Threading.Tasks.Task`1" />
      <apidata name="Task" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Threading.Tasks.Task.AsyncState" />
        <element api="Overload:System.Threading.Tasks.Task`1.ContinueWith">
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task})" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}})" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0})" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0})" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object)" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object)" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
        </element>
        <element api="P:System.Threading.Tasks.Task.CreationOptions" />
        <element api="Overload:System.Threading.Tasks.Task`1.Dispose">
          <element api="M:System.Threading.Tasks.Task.Dispose" />
          <element api="M:System.Threading.Tasks.Task.Dispose(System.Boolean)" />
        </element>
        <element api="P:System.Threading.Tasks.Task.Exception" />
        <element api="P:System.Threading.Tasks.Task.Id" />
        <element api="P:System.Threading.Tasks.Task.IsCanceled" />
        <element api="P:System.Threading.Tasks.Task.IsCompleted" />
        <element api="P:System.Threading.Tasks.Task.IsFaulted" />
        <element api="Overload:System.Threading.Tasks.Task`1.RunSynchronously">
          <element api="M:System.Threading.Tasks.Task.RunSynchronously" />
          <element api="M:System.Threading.Tasks.Task.RunSynchronously(System.Threading.Tasks.TaskScheduler)" />
        </element>
        <element api="Overload:System.Threading.Tasks.Task`1.Start">
          <element api="M:System.Threading.Tasks.Task.Start" />
          <element api="M:System.Threading.Tasks.Task.Start(System.Threading.Tasks.TaskScheduler)" />
        </element>
        <element api="P:System.Threading.Tasks.Task.Status" />
        <element api="P:System.Threading.Tasks.Task.System#IAsyncResult#AsyncWaitHandle" />
        <element api="P:System.Threading.Tasks.Task.System#IAsyncResult#CompletedSynchronously" />
        <element api="Overload:System.Threading.Tasks.Task`1.Wait">
          <element api="M:System.Threading.Tasks.Task.Wait" />
          <element api="M:System.Threading.Tasks.Task.Wait(System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task.Wait(System.Int32)" />
          <element api="M:System.Threading.Tasks.Task.Wait(System.TimeSpan)" />
          <element api="M:System.Threading.Tasks.Task.Wait(System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.Windows.Threading.TaskExtensions.IsDispatcherOperationTask(System.Threading.Tasks.Task)" source="extension">
          <apidata name="IsDispatcherOperationTask" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Windows.Presentation" module="System.Windows.Presentation" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.TaskExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Threading.TaskExtensions.DispatcherOperationWait(System.Threading.Tasks.Task)" source="extension" overload="true">
          <apidata name="DispatcherOperationWait" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Windows.Threading.DispatcherOperationStatus" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Windows.Presentation" module="System.Windows.Presentation" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.TaskExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Threading.TaskExtensions.DispatcherOperationWait(System.Threading.Tasks.Task,System.TimeSpan)" source="extension" overload="true">
          <apidata name="DispatcherOperationWait" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="timeout">
              <type api="T:System.TimeSpan" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Threading.DispatcherOperationStatus" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Windows.Presentation" module="System.Windows.Presentation" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.TaskExtensions" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.Threading.Tasks.Task`1.#ctor">
          <element api="M:System.Threading.Tasks.Task`1.#ctor(System.Func{`0})" />
          <element api="M:System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object)" />
          <element api="M:System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)" />
        </element>
        <element api="M:System.Threading.Tasks.Task`1.ConfigureAwait(System.Boolean)" />
        <element api="P:System.Threading.Tasks.Task`1.Factory" />
        <element api="M:System.Threading.Tasks.Task`1.GetAwaiter" />
        <element api="P:System.Threading.Tasks.Task`1.Result" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" />
      </containers>
      <file name="9d94daf7-f16c-6f90-b00f-48321638e292" />
    </api>
    <api id="Methods.T:System.Threading.Tasks.Task`1">
      <topicdata name="Task" group="list" subgroup="Methods" typeTopicId="T:System.Threading.Tasks.Task`1" />
      <apidata name="Task" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Threading.Tasks.Task`1.ContinueWith">
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task})" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}})" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0})" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0})" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object)" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object)" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
        </element>
        <element api="Overload:System.Threading.Tasks.Task`1.Dispose">
          <element api="M:System.Threading.Tasks.Task.Dispose" />
          <element api="M:System.Threading.Tasks.Task.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Threading.Tasks.Task`1.RunSynchronously">
          <element api="M:System.Threading.Tasks.Task.RunSynchronously" />
          <element api="M:System.Threading.Tasks.Task.RunSynchronously(System.Threading.Tasks.TaskScheduler)" />
        </element>
        <element api="Overload:System.Threading.Tasks.Task`1.Start">
          <element api="M:System.Threading.Tasks.Task.Start" />
          <element api="M:System.Threading.Tasks.Task.Start(System.Threading.Tasks.TaskScheduler)" />
        </element>
        <element api="Overload:System.Threading.Tasks.Task`1.Wait">
          <element api="M:System.Threading.Tasks.Task.Wait" />
          <element api="M:System.Threading.Tasks.Task.Wait(System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.Task.Wait(System.Int32)" />
          <element api="M:System.Threading.Tasks.Task.Wait(System.TimeSpan)" />
          <element api="M:System.Threading.Tasks.Task.Wait(System.Int32,System.Threading.CancellationToken)" />
        </element>
        <element api="M:System.Windows.Threading.TaskExtensions.IsDispatcherOperationTask(System.Threading.Tasks.Task)" source="extension">
          <apidata name="IsDispatcherOperationTask" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Windows.Presentation" module="System.Windows.Presentation" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.TaskExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Threading.TaskExtensions.DispatcherOperationWait(System.Threading.Tasks.Task)" source="extension" overload="true">
          <apidata name="DispatcherOperationWait" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Windows.Threading.DispatcherOperationStatus" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Windows.Presentation" module="System.Windows.Presentation" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.TaskExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Windows.Threading.TaskExtensions.DispatcherOperationWait(System.Threading.Tasks.Task,System.TimeSpan)" source="extension" overload="true">
          <apidata name="DispatcherOperationWait" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="timeout">
              <type api="T:System.TimeSpan" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Windows.Threading.DispatcherOperationStatus" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Windows.Presentation" module="System.Windows.Presentation" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Windows.Threading" />
            <type api="T:System.Windows.Threading.TaskExtensions" ref="true" />
          </containers>
        </element>
        <element api="M:System.Threading.Tasks.Task`1.ConfigureAwait(System.Boolean)" />
        <element api="M:System.Threading.Tasks.Task`1.GetAwaiter" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" />
      </containers>
      <file name="77ac99f1-ed54-8810-a0ef-1675312f0320" />
    </api>
    <api id="Properties.T:System.Threading.Tasks.Task`1">
      <topicdata name="Task" group="list" subgroup="Properties" typeTopicId="T:System.Threading.Tasks.Task`1" />
      <apidata name="Task" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Threading.Tasks.Task.AsyncState" />
        <element api="P:System.Threading.Tasks.Task.CreationOptions" />
        <element api="P:System.Threading.Tasks.Task.Exception" />
        <element api="P:System.Threading.Tasks.Task.Id" />
        <element api="P:System.Threading.Tasks.Task.IsCanceled" />
        <element api="P:System.Threading.Tasks.Task.IsCompleted" />
        <element api="P:System.Threading.Tasks.Task.IsFaulted" />
        <element api="P:System.Threading.Tasks.Task.Status" />
        <element api="P:System.Threading.Tasks.Task.System#IAsyncResult#AsyncWaitHandle" />
        <element api="P:System.Threading.Tasks.Task.System#IAsyncResult#CompletedSynchronously" />
        <element api="P:System.Threading.Tasks.Task`1.Factory" />
        <element api="P:System.Threading.Tasks.Task`1.Result" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" />
      </containers>
      <file name="f91e3f18-7ee1-3549-c575-4fd7edfb0211" />
    </api>
    <api id="Overload:System.Threading.Tasks.Task`1.ContinueWith">
      <topicdata name="ContinueWith" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.Task`1" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task})" />
        <element api="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}})" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0})" />
        <element api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0})" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskContinuationOptions)" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object)" />
        <element api="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskContinuationOptions)" />
        <element api="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object)" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskContinuationOptions)" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object)" />
        <element api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskContinuationOptions)" />
        <element api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object)" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.Tasks.TaskContinuationOptions)" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.Tasks.TaskContinuationOptions)" />
        <element api="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)" />
        <element api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith(System.Action{System.Threading.Tasks.Task,System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.Task.ContinueWith``1(System.Func{System.Threading.Tasks.Task,System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </containers>
      <file name="1ee9c31e-d7c0-6780-8782-c2fd2c5a6c22" />
    </api>
    <api id="Overload:System.Threading.Tasks.Task`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.Task`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Threading.Tasks.Task`1.#ctor(System.Func{`0})" />
        <element api="M:System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.Tasks.TaskCreationOptions)" />
        <element api="M:System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object)" />
        <element api="M:System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)" />
        <element api="M:System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        <element api="M:System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </containers>
      <file name="be93a060-1748-2d9f-b9da-86d8400b9e5d" />
    </api>
    <api id="M:System.Threading.Tasks.Task`1.#ctor(System.Func{`0})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.Task`1.#ctor" />
      <parameters>
        <parameter name="function">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="T:System.Threading.Tasks.Task`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </containers>
      <file name="ad7bfb37-d084-21dc-b6d3-e251204802b5" />
    </api>
    <api id="M:System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.Task`1.#ctor" />
      <parameters>
        <parameter name="function">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="T:System.Threading.Tasks.Task`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </containers>
      <file name="6f642bb1-fa37-4d52-13f6-ec7a64b6add6" />
    </api>
    <api id="M:System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.Task`1.#ctor" />
      <parameters>
        <parameter name="function">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="T:System.Threading.Tasks.Task`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </containers>
      <file name="6329536d-2935-7e83-f86e-def871d71e9a" />
    </api>
    <api id="M:System.Threading.Tasks.Task`1.#ctor(System.Func{`0},System.Threading.Tasks.TaskCreationOptions)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.Task`1.#ctor" />
      <parameters>
        <parameter name="function">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="T:System.Threading.Tasks.Task`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </containers>
      <file name="b13973e6-db6a-09df-7378-ca4b612bf9f3" />
    </api>
    <api id="M:System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.Task`1.#ctor" />
      <parameters>
        <parameter name="function">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
              <template name="TResult" index="0" api="T:System.Threading.Tasks.Task`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </containers>
      <file name="f829467d-2a4a-7bff-66ca-97cdc3bf084b" />
    </api>
    <api id="M:System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.Task`1.#ctor" />
      <parameters>
        <parameter name="function">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
              <template name="TResult" index="0" api="T:System.Threading.Tasks.Task`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </containers>
      <file name="89852872-eebb-f7f6-8fa2-07ff3812bce3" />
    </api>
    <api id="M:System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.Task`1.#ctor" />
      <parameters>
        <parameter name="function">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
              <template name="TResult" index="0" api="T:System.Threading.Tasks.Task`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </containers>
      <file name="dc68d080-1a8f-1bcc-60fd-282bed353490" />
    </api>
    <api id="M:System.Threading.Tasks.Task`1.#ctor(System.Func{System.Object,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.Task`1.#ctor" />
      <parameters>
        <parameter name="function">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
              <template name="TResult" index="0" api="T:System.Threading.Tasks.Task`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </containers>
      <file name="db9f6423-4e7d-823d-adcb-fd0b2c5bdb02" />
    </api>
    <api id="M:System.Threading.Tasks.Task`1.ConfigureAwait(System.Boolean)">
      <topicdata group="api" />
      <apidata name="ConfigureAwait" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="continueOnCapturedContext">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1" ref="false">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.Task`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </containers>
      <file name="a875ef07-37fa-942c-0904-4e1266bb8418" />
    </api>
    <api id="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}})">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task`1.ContinueWith" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="continuationAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TResult" index="0" api="T:System.Threading.Tasks.Task`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </containers>
      <file name="b8bafe09-ca27-1231-d374-00725027e9cb" />
    </api>
    <api id="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task`1.ContinueWith" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="continuationAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TResult" index="0" api="T:System.Threading.Tasks.Task`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </containers>
      <file name="1966ecf0-7fec-516a-0715-838e14fa07b6" />
    </api>
    <api id="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task`1.ContinueWith" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="continuationAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TResult" index="0" api="T:System.Threading.Tasks.Task`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </containers>
      <file name="cd5e0d5e-a1e7-6a6d-6a07-fdbc7602f75a" />
    </api>
    <api id="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskContinuationOptions)">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task`1.ContinueWith" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="continuationAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TResult" index="0" api="T:System.Threading.Tasks.Task`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </containers>
      <file name="2f4175c5-dc0d-f876-b99e-d833683c4862" />
    </api>
    <api id="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0}},System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task`1.ContinueWith" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="continuationAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TResult" index="0" api="T:System.Threading.Tasks.Task`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </containers>
      <file name="325cb0fa-9e04-748b-9da5-414af71db091" />
    </api>
    <api id="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object)">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task`1.ContinueWith" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="continuationAction">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TResult" index="0" api="T:System.Threading.Tasks.Task`1" />
                </specialization>
              </type>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </containers>
      <file name="82fed7c9-a698-13fb-54a7-d1d6141fca00" />
    </api>
    <api id="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task`1.ContinueWith" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="continuationAction">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TResult" index="0" api="T:System.Threading.Tasks.Task`1" />
                </specialization>
              </type>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </containers>
      <file name="eb1df562-5d27-a7db-9405-1a68542dad48" />
    </api>
    <api id="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task`1.ContinueWith" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="continuationAction">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TResult" index="0" api="T:System.Threading.Tasks.Task`1" />
                </specialization>
              </type>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </containers>
      <file name="b64654ee-e243-e491-bf50-4ad7fba8915f" />
    </api>
    <api id="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.Tasks.TaskContinuationOptions)">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task`1.ContinueWith" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="continuationAction">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TResult" index="0" api="T:System.Threading.Tasks.Task`1" />
                </specialization>
              </type>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </containers>
      <file name="4d309b85-00be-e07c-22c5-d008eee7958d" />
    </api>
    <api id="M:System.Threading.Tasks.Task`1.ContinueWith(System.Action{System.Threading.Tasks.Task{`0},System.Object},System.Object,System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task`1.ContinueWith" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="continuationAction">
          <type api="T:System.Action`2" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TResult" index="0" api="T:System.Threading.Tasks.Task`1" />
                </specialization>
              </type>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </containers>
      <file name="ea685611-9e2e-4090-86c2-eb097ee80cb4" />
    </api>
    <api id="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0})">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task`1.ContinueWith" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TNewResult" />
      </templates>
      <parameters>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TResult" index="0" api="T:System.Threading.Tasks.Task`1" />
                </specialization>
              </type>
              <template name="TNewResult" index="0" api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TNewResult" index="0" api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </containers>
      <file name="49245dc7-48d8-ec96-5be1-b6f2464bb652" />
    </api>
    <api id="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task`1.ContinueWith" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TNewResult" />
      </templates>
      <parameters>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TResult" index="0" api="T:System.Threading.Tasks.Task`1" />
                </specialization>
              </type>
              <template name="TNewResult" index="0" api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TNewResult" index="0" api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </containers>
      <file name="25dc9e32-6dfe-7f1f-9699-ce398f72231a" />
    </api>
    <api id="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task`1.ContinueWith" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TNewResult" />
      </templates>
      <parameters>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TResult" index="0" api="T:System.Threading.Tasks.Task`1" />
                </specialization>
              </type>
              <template name="TNewResult" index="0" api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TNewResult" index="0" api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </containers>
      <file name="718f826f-241c-7125-de94-af817c4c2c78" />
    </api>
    <api id="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskContinuationOptions)">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task`1.ContinueWith" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TNewResult" />
      </templates>
      <parameters>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TResult" index="0" api="T:System.Threading.Tasks.Task`1" />
                </specialization>
              </type>
              <template name="TNewResult" index="0" api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskContinuationOptions)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TNewResult" index="0" api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskContinuationOptions)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </containers>
      <file name="f66b5090-0951-b88a-8880-0d4889649c63" />
    </api>
    <api id="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task`1.ContinueWith" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TNewResult" />
      </templates>
      <parameters>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TResult" index="0" api="T:System.Threading.Tasks.Task`1" />
                </specialization>
              </type>
              <template name="TNewResult" index="0" api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskScheduler)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TNewResult" index="0" api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},``0},System.Threading.Tasks.TaskScheduler)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </containers>
      <file name="04e294a2-03da-7e17-655b-7bddce9d69a5" />
    </api>
    <api id="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object)">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task`1.ContinueWith" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TNewResult" />
      </templates>
      <parameters>
        <parameter name="continuationFunction">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TResult" index="0" api="T:System.Threading.Tasks.Task`1" />
                </specialization>
              </type>
              <type api="T:System.Object" ref="true" />
              <template name="TNewResult" index="0" api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TNewResult" index="0" api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </containers>
      <file name="188a56f5-1fd2-68ff-d678-330c231b7221" />
    </api>
    <api id="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task`1.ContinueWith" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TNewResult" />
      </templates>
      <parameters>
        <parameter name="continuationFunction">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TResult" index="0" api="T:System.Threading.Tasks.Task`1" />
                </specialization>
              </type>
              <type api="T:System.Object" ref="true" />
              <template name="TNewResult" index="0" api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TNewResult" index="0" api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </containers>
      <file name="54e1d3e3-0a8a-8ebf-e161-cd62e13ed9d7" />
    </api>
    <api id="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task`1.ContinueWith" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TNewResult" />
      </templates>
      <parameters>
        <parameter name="continuationFunction">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TResult" index="0" api="T:System.Threading.Tasks.Task`1" />
                </specialization>
              </type>
              <type api="T:System.Object" ref="true" />
              <template name="TNewResult" index="0" api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TNewResult" index="0" api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </containers>
      <file name="7bb1d9fe-692c-a651-d543-6b00ce7f844b" />
    </api>
    <api id="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task`1.ContinueWith" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TNewResult" />
      </templates>
      <parameters>
        <parameter name="continuationFunction">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TResult" index="0" api="T:System.Threading.Tasks.Task`1" />
                </specialization>
              </type>
              <type api="T:System.Object" ref="true" />
              <template name="TNewResult" index="0" api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TNewResult" index="0" api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskContinuationOptions)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </containers>
      <file name="7f20154b-0c90-7267-92a5-7239162474a0" />
    </api>
    <api id="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="ContinueWith" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.Task`1.ContinueWith" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TNewResult" />
      </templates>
      <parameters>
        <parameter name="continuationFunction">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TResult" index="0" api="T:System.Threading.Tasks.Task`1" />
                </specialization>
              </type>
              <type api="T:System.Object" ref="true" />
              <template name="TNewResult" index="0" api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TNewResult" index="0" api="M:System.Threading.Tasks.Task`1.ContinueWith``1(System.Func{System.Threading.Tasks.Task{`0},System.Object,``0},System.Object,System.Threading.Tasks.TaskScheduler)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </containers>
      <file name="a85eab9a-9d3b-8660-f5f4-d1c8bb1d1752" />
    </api>
    <api id="P:System.Threading.Tasks.Task`1.Factory">
      <topicdata group="api" />
      <apidata name="Factory" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Factory" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.Task`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </containers>
      <file name="2d8885c9-047d-3c41-59ba-12d058469cfa" />
    </api>
    <api id="M:System.Threading.Tasks.Task`1.GetAwaiter">
      <topicdata group="api" />
      <apidata name="GetAwaiter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Runtime.CompilerServices.TaskAwaiter`1" ref="false">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.Task`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </containers>
      <file name="f639d6e1-668b-5a71-6606-881f1a27c067" />
    </api>
    <api id="P:System.Threading.Tasks.Task`1.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Result" />
      <returns>
        <template name="TResult" index="0" api="T:System.Threading.Tasks.Task`1" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.Task`1" ref="true" />
      </containers>
      <file name="b0906682-249f-19e7-128e-711a6ac4b544" />
    </api>
    <api id="T:System.Threading.Tasks.TaskCanceledException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Threading.Tasks.TaskCanceledException" />
      <apidata name="TaskCanceledException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.Tasks.TaskCanceledException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.OperationCanceledException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
      </containers>
      <file name="a3b7ed30-d218-fa21-af41-316bc3909503" />
    </api>
    <api id="AllMembers.T:System.Threading.Tasks.TaskCanceledException">
      <topicdata name="TaskCanceledException" group="list" subgroup="members" typeTopicId="T:System.Threading.Tasks.TaskCanceledException" />
      <apidata name="TaskCanceledException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.Tasks.TaskCanceledException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="P:System.OperationCanceledException.CancellationToken" />
        <element api="Overload:System.Threading.Tasks.TaskCanceledException.#ctor">
          <element api="M:System.Threading.Tasks.TaskCanceledException.#ctor" />
          <element api="M:System.Threading.Tasks.TaskCanceledException.#ctor(System.String)" />
          <element api="M:System.Threading.Tasks.TaskCanceledException.#ctor(System.Threading.Tasks.Task)" />
          <element api="M:System.Threading.Tasks.TaskCanceledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Threading.Tasks.TaskCanceledException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="P:System.Threading.Tasks.TaskCanceledException.Task" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCanceledException" />
      </containers>
      <file name="ea12ddb6-3937-dff9-70d4-d274b755f0f5" />
    </api>
    <api id="Methods.T:System.Threading.Tasks.TaskCanceledException">
      <topicdata name="TaskCanceledException" group="list" subgroup="Methods" typeTopicId="T:System.Threading.Tasks.TaskCanceledException" />
      <apidata name="TaskCanceledException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.Tasks.TaskCanceledException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCanceledException" />
      </containers>
      <file name="fa5c2ecc-5694-5c1f-caa4-4f57ca4a131a" />
    </api>
    <api id="Properties.T:System.Threading.Tasks.TaskCanceledException">
      <topicdata name="TaskCanceledException" group="list" subgroup="Properties" typeTopicId="T:System.Threading.Tasks.TaskCanceledException" />
      <apidata name="TaskCanceledException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.Tasks.TaskCanceledException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.OperationCanceledException.CancellationToken" />
        <element api="P:System.Threading.Tasks.TaskCanceledException.Task" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCanceledException" />
      </containers>
      <file name="97a94e6b-4be3-1abd-576d-45d11f67c19e" />
    </api>
    <api id="Events.T:System.Threading.Tasks.TaskCanceledException">
      <topicdata name="TaskCanceledException" group="list" subgroup="Events" typeTopicId="T:System.Threading.Tasks.TaskCanceledException" />
      <apidata name="TaskCanceledException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.Tasks.TaskCanceledException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCanceledException" />
      </containers>
      <file name="92b34cc8-e28f-8a61-3a71-e8908b08cbd1" />
    </api>
    <api id="Overload:System.Threading.Tasks.TaskCanceledException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.TaskCanceledException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Threading.Tasks.TaskCanceledException.#ctor" />
        <element api="M:System.Threading.Tasks.TaskCanceledException.#ctor(System.String)" />
        <element api="M:System.Threading.Tasks.TaskCanceledException.#ctor(System.Threading.Tasks.Task)" />
        <element api="M:System.Threading.Tasks.TaskCanceledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Threading.Tasks.TaskCanceledException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCanceledException" ref="true" />
      </containers>
      <file name="c37c71fe-c60c-3a30-fb61-7f450ea3b234" />
    </api>
    <api id="M:System.Threading.Tasks.TaskCanceledException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.TaskCanceledException.#ctor" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCanceledException" ref="true" />
      </containers>
      <file name="7d486298-f4f0-7164-c092-071f7c0d0f63" />
    </api>
    <api id="M:System.Threading.Tasks.TaskCanceledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Threading.Tasks.TaskCanceledException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCanceledException" ref="true" />
      </containers>
      <file name="6ad0555e-d774-a3fe-9b5c-93e4ebaf7542" />
    </api>
    <api id="M:System.Threading.Tasks.TaskCanceledException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.TaskCanceledException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCanceledException" ref="true" />
      </containers>
      <file name="d40a11c6-ba66-703e-2976-0f7f4fd71604" />
    </api>
    <api id="M:System.Threading.Tasks.TaskCanceledException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.TaskCanceledException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCanceledException" ref="true" />
      </containers>
      <file name="a40b35d6-40d6-f282-9443-12cbf9a980a0" />
    </api>
    <api id="M:System.Threading.Tasks.TaskCanceledException.#ctor(System.Threading.Tasks.Task)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.TaskCanceledException.#ctor" />
      <parameters>
        <parameter name="task">
          <type api="T:System.Threading.Tasks.Task" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCanceledException" ref="true" />
      </containers>
      <file name="a0334a26-4a7c-4bda-1869-632107903104" />
    </api>
    <api id="P:System.Threading.Tasks.TaskCanceledException.Task">
      <topicdata group="api" />
      <apidata name="Task" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Task" />
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCanceledException" ref="true" />
      </containers>
      <file name="7ca36fd1-24b5-df18-29d0-baba5986ca15" />
    </api>
    <api id="T:System.Threading.Tasks.TaskCompletionSource`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Threading.Tasks.TaskCompletionSource`1" />
      <apidata name="TaskCompletionSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.Tasks.TaskCompletionSource`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TResult" />
      </templates>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="0404bf94-6b7d-25d3-03a2-de055059628c" />
    </api>
    <api id="AllMembers.T:System.Threading.Tasks.TaskCompletionSource`1">
      <topicdata name="TaskCompletionSource" group="list" subgroup="members" typeTopicId="T:System.Threading.Tasks.TaskCompletionSource`1" />
      <apidata name="TaskCompletionSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.Tasks.TaskCompletionSource`1.#ctor" />
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Threading.Tasks.TaskCompletionSource`1.#ctor">
          <element api="M:System.Threading.Tasks.TaskCompletionSource`1.#ctor" />
          <element api="M:System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object)" />
          <element api="M:System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        </element>
        <element api="M:System.Threading.Tasks.TaskCompletionSource`1.SetCanceled" />
        <element api="Overload:System.Threading.Tasks.TaskCompletionSource`1.SetException">
          <element api="M:System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Collections.Generic.IEnumerable{System.Exception})" />
          <element api="M:System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Exception)" />
        </element>
        <element api="M:System.Threading.Tasks.TaskCompletionSource`1.SetResult(`0)" />
        <element api="P:System.Threading.Tasks.TaskCompletionSource`1.Task" />
        <element api="Overload:System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled">
          <element api="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled" />
          <element api="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled(System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.Threading.Tasks.TaskCompletionSource`1.TrySetException">
          <element api="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Collections.Generic.IEnumerable{System.Exception})" />
          <element api="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Exception)" />
        </element>
        <element api="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetResult(`0)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCompletionSource`1" />
      </containers>
      <file name="c7354b74-1da1-76c1-78ae-08011e65fe42" />
    </api>
    <api id="Methods.T:System.Threading.Tasks.TaskCompletionSource`1">
      <topicdata name="TaskCompletionSource" group="list" subgroup="Methods" typeTopicId="T:System.Threading.Tasks.TaskCompletionSource`1" />
      <apidata name="TaskCompletionSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.Tasks.TaskCompletionSource`1.#ctor" />
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.Tasks.TaskCompletionSource`1.SetCanceled" />
        <element api="Overload:System.Threading.Tasks.TaskCompletionSource`1.SetException">
          <element api="M:System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Collections.Generic.IEnumerable{System.Exception})" />
          <element api="M:System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Exception)" />
        </element>
        <element api="M:System.Threading.Tasks.TaskCompletionSource`1.SetResult(`0)" />
        <element api="Overload:System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled">
          <element api="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled" />
          <element api="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled(System.Threading.CancellationToken)" />
        </element>
        <element api="Overload:System.Threading.Tasks.TaskCompletionSource`1.TrySetException">
          <element api="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Collections.Generic.IEnumerable{System.Exception})" />
          <element api="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Exception)" />
        </element>
        <element api="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetResult(`0)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCompletionSource`1" />
      </containers>
      <file name="a485effa-9581-7d1f-33f9-e83868ebdaf8" />
    </api>
    <api id="Properties.T:System.Threading.Tasks.TaskCompletionSource`1">
      <topicdata name="TaskCompletionSource" group="list" subgroup="Properties" typeTopicId="T:System.Threading.Tasks.TaskCompletionSource`1" />
      <apidata name="TaskCompletionSource" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.Tasks.TaskCompletionSource`1.#ctor" />
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Threading.Tasks.TaskCompletionSource`1.Task" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCompletionSource`1" />
      </containers>
      <file name="02792dd7-5302-1115-a198-1068f9201742" />
    </api>
    <api id="Overload:System.Threading.Tasks.TaskCompletionSource`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.TaskCompletionSource`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Threading.Tasks.TaskCompletionSource`1.#ctor" />
        <element api="M:System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object)" />
        <element api="M:System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Threading.Tasks.TaskCreationOptions)" />
        <element api="M:System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCompletionSource`1" ref="true" />
      </containers>
      <file name="eeb5eeb0-c604-fffe-a280-d86e566fc746" />
    </api>
    <api id="Overload:System.Threading.Tasks.TaskCompletionSource`1.SetException">
      <topicdata name="SetException" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.TaskCompletionSource`1" />
      <apidata name="SetException" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Collections.Generic.IEnumerable{System.Exception})" />
        <element api="M:System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Exception)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCompletionSource`1" ref="true" />
      </containers>
      <file name="48a0ff21-fcfe-1e40-6f2e-25d3ff7d0234" />
    </api>
    <api id="Overload:System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled">
      <topicdata name="TrySetCanceled" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.TaskCompletionSource`1" />
      <apidata name="TrySetCanceled" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled" />
        <element api="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled(System.Threading.CancellationToken)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCompletionSource`1" ref="true" />
      </containers>
      <file name="3f729dae-9152-0c3a-d7ab-03da3c904c35" />
    </api>
    <api id="Overload:System.Threading.Tasks.TaskCompletionSource`1.TrySetException">
      <topicdata name="TrySetException" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.TaskCompletionSource`1" />
      <apidata name="TrySetException" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Collections.Generic.IEnumerable{System.Exception})" />
        <element api="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Exception)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCompletionSource`1" ref="true" />
      </containers>
      <file name="96e97d70-4ea2-c980-884f-843902fa4796" />
    </api>
    <api id="M:System.Threading.Tasks.TaskCompletionSource`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.TaskCompletionSource`1.#ctor" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCompletionSource`1" ref="true" />
      </containers>
      <file name="c86c2666-0f62-f566-4b68-08afcc293f3d" />
    </api>
    <api id="M:System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.TaskCompletionSource`1.#ctor" />
      <parameters>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCompletionSource`1" ref="true" />
      </containers>
      <file name="17d41e9f-95a2-47c1-a89a-27346dc4fb4f" />
    </api>
    <api id="M:System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Object,System.Threading.Tasks.TaskCreationOptions)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.TaskCompletionSource`1.#ctor" />
      <parameters>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCompletionSource`1" ref="true" />
      </containers>
      <file name="f86eb2f4-c00a-0fc7-ca17-5b8474c24d0c" />
    </api>
    <api id="M:System.Threading.Tasks.TaskCompletionSource`1.#ctor(System.Threading.Tasks.TaskCreationOptions)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.TaskCompletionSource`1.#ctor" />
      <parameters>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCompletionSource`1" ref="true" />
      </containers>
      <file name="63df5eae-fcd3-3068-f116-db7a1c3f3af9" />
    </api>
    <api id="M:System.Threading.Tasks.TaskCompletionSource`1.SetCanceled">
      <topicdata group="api" />
      <apidata name="SetCanceled" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCompletionSource`1" ref="true" />
      </containers>
      <file name="8862dd32-d7ab-1fef-edea-be7d48669e29" />
    </api>
    <api id="M:System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Collections.Generic.IEnumerable{System.Exception})">
      <topicdata group="api" />
      <apidata name="SetException" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskCompletionSource`1.SetException" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="exceptions">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Exception" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCompletionSource`1" ref="true" />
      </containers>
      <file name="e84e97db-2c43-6d3d-0c2b-09b69a79cc6b" />
    </api>
    <api id="M:System.Threading.Tasks.TaskCompletionSource`1.SetException(System.Exception)">
      <topicdata group="api" />
      <apidata name="SetException" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskCompletionSource`1.SetException" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCompletionSource`1" ref="true" />
      </containers>
      <file name="9f0a64a8-546d-bd33-b9e0-c9c6935c3bce" />
    </api>
    <api id="M:System.Threading.Tasks.TaskCompletionSource`1.SetResult(`0)">
      <topicdata group="api" />
      <apidata name="SetResult" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskCompletionSource`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCompletionSource`1" ref="true" />
      </containers>
      <file name="dc0d0e81-51b0-f11f-31eb-4fb267ffb10b" />
    </api>
    <api id="P:System.Threading.Tasks.TaskCompletionSource`1.Task">
      <topicdata group="api" />
      <apidata name="Task" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Task" />
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskCompletionSource`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCompletionSource`1" ref="true" />
      </containers>
      <file name="7638fe14-a4fb-7a60-451b-d9a8104b1646" />
    </api>
    <api id="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled">
      <topicdata group="api" />
      <apidata name="TrySetCanceled" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCompletionSource`1" ref="true" />
      </containers>
      <file name="e8d0d12a-e66f-8dc9-660b-490105466e2e" />
    </api>
    <api id="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled(System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="TrySetCanceled" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskCompletionSource`1.TrySetCanceled" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCompletionSource`1" ref="true" />
      </containers>
      <file name="53f925b0-a1e3-aa3d-9ba9-d2696fb996bd" />
    </api>
    <api id="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Collections.Generic.IEnumerable{System.Exception})">
      <topicdata group="api" />
      <apidata name="TrySetException" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskCompletionSource`1.TrySetException" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="exceptions">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Exception" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCompletionSource`1" ref="true" />
      </containers>
      <file name="9e5ea84d-e537-0b9e-0a5a-b9be82e989a5" />
    </api>
    <api id="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetException(System.Exception)">
      <topicdata group="api" />
      <apidata name="TrySetException" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskCompletionSource`1.TrySetException" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCompletionSource`1" ref="true" />
      </containers>
      <file name="e2aa20b7-2245-7225-14a9-0282210f9965" />
    </api>
    <api id="M:System.Threading.Tasks.TaskCompletionSource`1.TrySetResult(`0)">
      <topicdata group="api" />
      <apidata name="TrySetResult" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskCompletionSource`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCompletionSource`1" ref="true" />
      </containers>
      <file name="09448ef5-6130-f67b-a414-d69f116ddd6b" />
    </api>
    <api id="T:System.Threading.Tasks.TaskContinuationOptions">
      <topicdata group="api" />
      <apidata name="TaskContinuationOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="F:System.Threading.Tasks.TaskContinuationOptions.None" />
        <element api="F:System.Threading.Tasks.TaskContinuationOptions.PreferFairness" />
        <element api="F:System.Threading.Tasks.TaskContinuationOptions.LongRunning" />
        <element api="F:System.Threading.Tasks.TaskContinuationOptions.AttachedToParent" />
        <element api="F:System.Threading.Tasks.TaskContinuationOptions.DenyChildAttach" />
        <element api="F:System.Threading.Tasks.TaskContinuationOptions.HideScheduler" />
        <element api="F:System.Threading.Tasks.TaskContinuationOptions.LazyCancellation" />
        <element api="F:System.Threading.Tasks.TaskContinuationOptions.RunContinuationsAsynchronously" />
        <element api="F:System.Threading.Tasks.TaskContinuationOptions.NotOnRanToCompletion" />
        <element api="F:System.Threading.Tasks.TaskContinuationOptions.NotOnFaulted" />
        <element api="F:System.Threading.Tasks.TaskContinuationOptions.NotOnCanceled" />
        <element api="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnRanToCompletion" />
        <element api="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnFaulted" />
        <element api="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled" />
        <element api="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="cb3930a1-ef7b-52ff-d1bf-2b1c2c05f98f" />
    </api>
    <api id="F:System.Threading.Tasks.TaskContinuationOptions.AttachedToParent">
      <topicdata group="api" notopic="" />
      <apidata name="AttachedToParent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
      </containers>
      <file name="136bc0e8-aeff-7da8-7c4f-91035d2f7777" />
    </api>
    <api id="F:System.Threading.Tasks.TaskContinuationOptions.DenyChildAttach">
      <topicdata group="api" notopic="" />
      <apidata name="DenyChildAttach" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
      </containers>
      <file name="94652dcb-9229-220b-ccd1-65728b45c811" />
    </api>
    <api id="F:System.Threading.Tasks.TaskContinuationOptions.ExecuteSynchronously">
      <topicdata group="api" notopic="" />
      <apidata name="ExecuteSynchronously" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
      </returns>
      <value>524288</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
      </containers>
      <file name="4c0cd82d-65f8-ce1f-3a85-678946082327" />
    </api>
    <api id="F:System.Threading.Tasks.TaskContinuationOptions.HideScheduler">
      <topicdata group="api" notopic="" />
      <apidata name="HideScheduler" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
      </containers>
      <file name="1bbbf134-aa74-53cd-c082-a25d7229072b" />
    </api>
    <api id="F:System.Threading.Tasks.TaskContinuationOptions.LazyCancellation">
      <topicdata group="api" notopic="" />
      <apidata name="LazyCancellation" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
      </containers>
      <file name="7b2d885a-3f85-3842-011a-020683120312" />
    </api>
    <api id="F:System.Threading.Tasks.TaskContinuationOptions.LongRunning">
      <topicdata group="api" notopic="" />
      <apidata name="LongRunning" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
      </containers>
      <file name="9dc2b95e-8924-9b05-95fb-6cb6cfe01748" />
    </api>
    <api id="F:System.Threading.Tasks.TaskContinuationOptions.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
      </containers>
      <file name="3d2faaa3-6ae7-ee3d-6986-18f9c66b29e7" />
    </api>
    <api id="F:System.Threading.Tasks.TaskContinuationOptions.NotOnCanceled">
      <topicdata group="api" notopic="" />
      <apidata name="NotOnCanceled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
      </returns>
      <value>262144</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
      </containers>
      <file name="5f4e9f59-1e66-f052-0c59-1184241a629f" />
    </api>
    <api id="F:System.Threading.Tasks.TaskContinuationOptions.NotOnFaulted">
      <topicdata group="api" notopic="" />
      <apidata name="NotOnFaulted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
      </returns>
      <value>131072</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
      </containers>
      <file name="47b09a6d-9892-33df-1348-ced06e2bc97e" />
    </api>
    <api id="F:System.Threading.Tasks.TaskContinuationOptions.NotOnRanToCompletion">
      <topicdata group="api" notopic="" />
      <apidata name="NotOnRanToCompletion" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
      </returns>
      <value>65536</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
      </containers>
      <file name="425a0ee8-3f64-4a9a-8399-49af4ed6ccb1" />
    </api>
    <api id="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnCanceled">
      <topicdata group="api" notopic="" />
      <apidata name="OnlyOnCanceled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
      </returns>
      <value>196608</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
      </containers>
      <file name="1cb6d77b-845c-5e1b-8a5a-36519a1b4bc6" />
    </api>
    <api id="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnFaulted">
      <topicdata group="api" notopic="" />
      <apidata name="OnlyOnFaulted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
      </returns>
      <value>327680</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
      </containers>
      <file name="cdde1ac0-a879-67e2-df18-d59df52993b0" />
    </api>
    <api id="F:System.Threading.Tasks.TaskContinuationOptions.OnlyOnRanToCompletion">
      <topicdata group="api" notopic="" />
      <apidata name="OnlyOnRanToCompletion" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
      </returns>
      <value>393216</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
      </containers>
      <file name="77f83203-53a2-9502-ff12-233fbb7fa02f" />
    </api>
    <api id="F:System.Threading.Tasks.TaskContinuationOptions.PreferFairness">
      <topicdata group="api" notopic="" />
      <apidata name="PreferFairness" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
      </containers>
      <file name="ff461fdf-11c4-a4e0-5b8a-1470899b88cf" />
    </api>
    <api id="F:System.Threading.Tasks.TaskContinuationOptions.RunContinuationsAsynchronously">
      <topicdata group="api" notopic="" />
      <apidata name="RunContinuationsAsynchronously" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
      </returns>
      <value>64</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
      </containers>
      <file name="c8bc0fef-4b20-c356-3507-3f54d38b70ff" />
    </api>
    <api id="T:System.Threading.Tasks.TaskCreationOptions">
      <topicdata group="api" />
      <apidata name="TaskCreationOptions" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="F:System.Threading.Tasks.TaskCreationOptions.None" />
        <element api="F:System.Threading.Tasks.TaskCreationOptions.PreferFairness" />
        <element api="F:System.Threading.Tasks.TaskCreationOptions.LongRunning" />
        <element api="F:System.Threading.Tasks.TaskCreationOptions.AttachedToParent" />
        <element api="F:System.Threading.Tasks.TaskCreationOptions.DenyChildAttach" />
        <element api="F:System.Threading.Tasks.TaskCreationOptions.HideScheduler" />
        <element api="F:System.Threading.Tasks.TaskCreationOptions.RunContinuationsAsynchronously" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="177eb117-14ae-b068-4d89-9ef4953379e1" />
    </api>
    <api id="F:System.Threading.Tasks.TaskCreationOptions.AttachedToParent">
      <topicdata group="api" notopic="" />
      <apidata name="AttachedToParent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
      </containers>
      <file name="da14187c-e09b-8ee2-9e3a-7183726e02ee" />
    </api>
    <api id="F:System.Threading.Tasks.TaskCreationOptions.DenyChildAttach">
      <topicdata group="api" notopic="" />
      <apidata name="DenyChildAttach" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
      </containers>
      <file name="00db1ce8-71c5-862f-5bac-9c574d7dcc1b" />
    </api>
    <api id="F:System.Threading.Tasks.TaskCreationOptions.HideScheduler">
      <topicdata group="api" notopic="" />
      <apidata name="HideScheduler" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
      </containers>
      <file name="32c67c98-a337-80ad-46af-53c49f7c7bad" />
    </api>
    <api id="F:System.Threading.Tasks.TaskCreationOptions.LongRunning">
      <topicdata group="api" notopic="" />
      <apidata name="LongRunning" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
      </containers>
      <file name="cbe68fa3-53c4-0a34-3604-10a7be573024" />
    </api>
    <api id="F:System.Threading.Tasks.TaskCreationOptions.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
      </containers>
      <file name="a04772dc-229b-40ff-e507-a9060af2f18e" />
    </api>
    <api id="F:System.Threading.Tasks.TaskCreationOptions.PreferFairness">
      <topicdata group="api" notopic="" />
      <apidata name="PreferFairness" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
      </containers>
      <file name="454b6ae8-5cb0-f889-bb3b-4f33d959def1" />
    </api>
    <api id="F:System.Threading.Tasks.TaskCreationOptions.RunContinuationsAsynchronously">
      <topicdata group="api" notopic="" />
      <apidata name="RunContinuationsAsynchronously" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
      </returns>
      <value>64</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
      </containers>
      <file name="b9a04b8a-2bea-f826-0a6f-1f49e4b80212" />
    </api>
    <api id="T:System.Threading.Tasks.TaskExtensions">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Threading.Tasks.TaskExtensions" />
      <apidata name="TaskExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="bb0c580c-8e6f-928d-20ee-297fd209221f" />
    </api>
    <api id="AllMembers.T:System.Threading.Tasks.TaskExtensions">
      <topicdata name="TaskExtensions" group="list" subgroup="members" typeTopicId="T:System.Threading.Tasks.TaskExtensions" />
      <apidata name="TaskExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Threading.Tasks.TaskExtensions.Unwrap">
          <element api="M:System.Threading.Tasks.TaskExtensions.Unwrap``1(System.Threading.Tasks.Task{System.Threading.Tasks.Task{``0}})" />
          <element api="M:System.Threading.Tasks.TaskExtensions.Unwrap(System.Threading.Tasks.Task{System.Threading.Tasks.Task})" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskExtensions" />
      </containers>
      <file name="aec3fb58-9c6c-e12a-86a0-9bb859c9e7c9" />
    </api>
    <api id="Methods.T:System.Threading.Tasks.TaskExtensions">
      <topicdata name="TaskExtensions" group="list" subgroup="Methods" typeTopicId="T:System.Threading.Tasks.TaskExtensions" />
      <apidata name="TaskExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:System.Threading.Tasks.TaskExtensions.Unwrap">
          <element api="M:System.Threading.Tasks.TaskExtensions.Unwrap``1(System.Threading.Tasks.Task{System.Threading.Tasks.Task{``0}})" />
          <element api="M:System.Threading.Tasks.TaskExtensions.Unwrap(System.Threading.Tasks.Task{System.Threading.Tasks.Task})" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskExtensions" />
      </containers>
      <file name="4ac63f30-05cf-9f3f-644b-805ffbd8f3c5" />
    </api>
    <api id="Overload:System.Threading.Tasks.TaskExtensions.Unwrap">
      <topicdata name="Unwrap" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.TaskExtensions" />
      <apidata name="Unwrap" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Tasks.TaskExtensions.Unwrap``1(System.Threading.Tasks.Task{System.Threading.Tasks.Task{``0}})" />
        <element api="M:System.Threading.Tasks.TaskExtensions.Unwrap(System.Threading.Tasks.Task{System.Threading.Tasks.Task})" />
      </elements>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskExtensions" ref="true" />
      </containers>
      <file name="4a736d11-168a-1ed5-3ae0-0c9d1b0331d2" />
    </api>
    <api id="M:System.Threading.Tasks.TaskExtensions.Unwrap``1(System.Threading.Tasks.Task{System.Threading.Tasks.Task{``0}})">
      <topicdata group="api" />
      <apidata name="Unwrap" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.TaskExtensions.Unwrap" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="task">
          <type api="T:System.Threading.Tasks.Task`1" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskExtensions.Unwrap``1(System.Threading.Tasks.Task{System.Threading.Tasks.Task{``0}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskExtensions.Unwrap``1(System.Threading.Tasks.Task{System.Threading.Tasks.Task{``0}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="9accf7e4-c2f0-0123-7873-573ddc5c390a" />
    </api>
    <api id="M:System.Threading.Tasks.TaskExtensions.Unwrap(System.Threading.Tasks.Task{System.Threading.Tasks.Task})">
      <topicdata group="api" />
      <apidata name="Unwrap" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Threading.Tasks.TaskExtensions.Unwrap" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="task">
          <type api="T:System.Threading.Tasks.Task`1" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="960105d9-eca8-d097-af8f-f4d2ff828ad4" />
    </api>
    <api id="T:System.Threading.Tasks.TaskFactory">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Threading.Tasks.TaskFactory" />
      <apidata name="TaskFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.Tasks.TaskFactory.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="5c940a30-d282-d996-6e6d-aa8cb9bced36" />
    </api>
    <api id="AllMembers.T:System.Threading.Tasks.TaskFactory">
      <topicdata name="TaskFactory" group="list" subgroup="members" typeTopicId="T:System.Threading.Tasks.TaskFactory" />
      <apidata name="TaskFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.Tasks.TaskFactory.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Threading.Tasks.TaskFactory.#ctor">
          <element api="M:System.Threading.Tasks.TaskFactory.#ctor" />
          <element api="M:System.Threading.Tasks.TaskFactory.#ctor(System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory.#ctor(System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.TaskFactory.#ctor(System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.#ctor(System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
        </element>
        <element api="P:System.Threading.Tasks.TaskFactory.CancellationToken" />
        <element api="P:System.Threading.Tasks.TaskFactory.ContinuationOptions" />
        <element api="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAll">
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]})" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0})" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]})" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1})" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]},System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
        </element>
        <element api="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAny">
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task})" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0})" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}})" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1})" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
        </element>
        <element api="P:System.Threading.Tasks.TaskFactory.CreationOptions" />
        <element api="Overload:System.Threading.Tasks.TaskFactory.FromAsync">
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult})" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0})" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``0},System.Object)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0},System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,System.Object)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``1},``0,System.Object)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``1},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,System.Object)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2},``0,``1,System.Object)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,``2,System.Object)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        </element>
        <element api="P:System.Threading.Tasks.TaskFactory.Scheduler" />
        <element api="Overload:System.Threading.Tasks.TaskFactory.StartNew">
          <element api="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action)" />
          <element api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0})" />
          <element api="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action,System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object)" />
          <element api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0},System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object)" />
          <element api="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
        </element>
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" />
      </containers>
      <file name="8fd567e1-becd-e1e8-d76c-e1c5935bfce9" />
    </api>
    <api id="Methods.T:System.Threading.Tasks.TaskFactory">
      <topicdata name="TaskFactory" group="list" subgroup="Methods" typeTopicId="T:System.Threading.Tasks.TaskFactory" />
      <apidata name="TaskFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.Tasks.TaskFactory.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAll">
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]})" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0})" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]})" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1})" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]},System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
        </element>
        <element api="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAny">
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task})" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0})" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}})" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1})" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
        </element>
        <element api="Overload:System.Threading.Tasks.TaskFactory.FromAsync">
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult})" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0})" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``0},System.Object)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0},System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,System.Object)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``1},``0,System.Object)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``1},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,System.Object)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2},``0,``1,System.Object)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,``2,System.Object)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        </element>
        <element api="Overload:System.Threading.Tasks.TaskFactory.StartNew">
          <element api="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action)" />
          <element api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0})" />
          <element api="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action,System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object)" />
          <element api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0},System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object)" />
          <element api="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
        </element>
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" />
      </containers>
      <file name="c218f9af-7fec-d6f1-1489-a52469c96a7a" />
    </api>
    <api id="Properties.T:System.Threading.Tasks.TaskFactory">
      <topicdata name="TaskFactory" group="list" subgroup="Properties" typeTopicId="T:System.Threading.Tasks.TaskFactory" />
      <apidata name="TaskFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.Tasks.TaskFactory.#ctor" />
      <elements>
        <element api="P:System.Threading.Tasks.TaskFactory.CancellationToken" />
        <element api="P:System.Threading.Tasks.TaskFactory.ContinuationOptions" />
        <element api="P:System.Threading.Tasks.TaskFactory.CreationOptions" />
        <element api="P:System.Threading.Tasks.TaskFactory.Scheduler" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" />
      </containers>
      <file name="248fb313-9955-524b-a995-aa652f514cc0" />
    </api>
    <api id="Overload:System.Threading.Tasks.TaskFactory.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.TaskFactory" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Threading.Tasks.TaskFactory.#ctor" />
        <element api="M:System.Threading.Tasks.TaskFactory.#ctor(System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.TaskFactory.#ctor(System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.TaskFactory.#ctor(System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions)" />
        <element api="M:System.Threading.Tasks.TaskFactory.#ctor(System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="2e375a66-475a-5ee7-8739-699545f3ceef" />
    </api>
    <api id="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAll">
      <topicdata name="ContinueWhenAll" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.TaskFactory" />
      <apidata name="ContinueWhenAll" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]})" />
        <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0})" />
        <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]})" />
        <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1})" />
        <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]},System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]},System.Threading.Tasks.TaskContinuationOptions)" />
        <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.Tasks.TaskContinuationOptions)" />
        <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.Tasks.TaskContinuationOptions)" />
        <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.Tasks.TaskContinuationOptions)" />
        <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="0d9e92e5-b03c-e489-5b24-88202f1598a0" />
    </api>
    <api id="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAny">
      <topicdata name="ContinueWhenAny" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.TaskFactory" />
      <apidata name="ContinueWhenAny" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task})" />
        <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0})" />
        <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}})" />
        <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1})" />
        <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskContinuationOptions)" />
        <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskContinuationOptions)" />
        <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.Tasks.TaskContinuationOptions)" />
        <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.Tasks.TaskContinuationOptions)" />
        <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="c59297f5-5535-8ca9-2bf2-8f02d7612f3b" />
    </api>
    <api id="Overload:System.Threading.Tasks.TaskFactory.FromAsync">
      <topicdata name="FromAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.TaskFactory" />
      <apidata name="FromAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult})" />
        <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0})" />
        <element api="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object)" />
        <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``0},System.Object)" />
        <element api="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions)" />
        <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0},System.Threading.Tasks.TaskCreationOptions)" />
        <element api="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,System.Object)" />
        <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``1},``0,System.Object)" />
        <element api="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``1},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,System.Object)" />
        <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2},``0,``1,System.Object)" />
        <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,``2,System.Object)" />
        <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object)" />
        <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        <element api="M:System.Threading.Tasks.TaskFactory.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="e1cf8876-c25d-09d7-e86e-e0db8b884c35" />
    </api>
    <api id="Overload:System.Threading.Tasks.TaskFactory.StartNew">
      <topicdata name="StartNew" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.TaskFactory" />
      <apidata name="StartNew" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action)" />
        <element api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0})" />
        <element api="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action,System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action,System.Threading.Tasks.TaskCreationOptions)" />
        <element api="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object)" />
        <element api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0},System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0},System.Threading.Tasks.TaskCreationOptions)" />
        <element api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object)" />
        <element api="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object,System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        <element api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        <element api="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="7d927859-8867-2540-f4dd-bd514f22c657" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.TaskFactory.#ctor" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="860c410a-e38e-9209-b977-4e8c0c7b40d9" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.#ctor(System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.TaskFactory.#ctor" />
      <parameters>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="bef7c484-1ff7-25ee-24fa-2c85ae21a885" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.#ctor(System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.TaskFactory.#ctor" />
      <parameters>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="882c23ec-9404-5889-812e-a7b8616b0cf3" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.#ctor(System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.TaskFactory.#ctor" />
      <parameters>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="7ca1a2bd-8abf-47d4-08a7-1be3057c33a2" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.#ctor(System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.TaskFactory.#ctor" />
      <parameters>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="6a2d6c0d-7baa-5749-ce04-8d26534aa0dd" />
    </api>
    <api id="P:System.Threading.Tasks.TaskFactory.CancellationToken">
      <topicdata group="api" />
      <apidata name="CancellationToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CancellationToken" />
      <returns>
        <type api="T:System.Threading.CancellationToken" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="9b9460f4-ec23-bfdc-6d75-0e1f9a5a3f6a" />
    </api>
    <api id="P:System.Threading.Tasks.TaskFactory.ContinuationOptions">
      <topicdata group="api" />
      <apidata name="ContinuationOptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ContinuationOptions" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="3fa4d42e-6fc2-7b58-b1eb-0c3000bf2673" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]})">
      <topicdata group="api" />
      <apidata name="ContinueWhenAll" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAll" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="continuationAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <arrayOf rank="1">
                <type api="T:System.Threading.Tasks.Task" ref="true" />
              </arrayOf>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="b7faed59-7737-42f2-59ae-96b1e62a9eae" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]},System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="ContinueWhenAll" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAll" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="continuationAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <arrayOf rank="1">
                <type api="T:System.Threading.Tasks.Task" ref="true" />
              </arrayOf>
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="52f12292-846f-a06a-543b-23b8d2b2f79e" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="ContinueWhenAll" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAll" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="continuationAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <arrayOf rank="1">
                <type api="T:System.Threading.Tasks.Task" ref="true" />
              </arrayOf>
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="4545fbff-d9b7-8607-2f44-3dd8fd8b3843" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task[]},System.Threading.Tasks.TaskContinuationOptions)">
      <topicdata group="api" />
      <apidata name="ContinueWhenAll" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAll" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="continuationAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <arrayOf rank="1">
                <type api="T:System.Threading.Tasks.Task" ref="true" />
              </arrayOf>
            </specialization>
          </type>
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="c94b5050-205f-eb40-8eda-1b19932b8038" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0})">
      <topicdata group="api" />
      <apidata name="ContinueWhenAll" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAll" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <arrayOf rank="1">
                <type api="T:System.Threading.Tasks.Task" ref="true" />
              </arrayOf>
              <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="9e6fdff0-311f-a264-d322-5bf15a5716f2" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="ContinueWhenAll" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAll" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <arrayOf rank="1">
                <type api="T:System.Threading.Tasks.Task" ref="true" />
              </arrayOf>
              <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.CancellationToken)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.CancellationToken)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="b0c99928-d9ba-e0c3-9a8b-f794d1484e03" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="ContinueWhenAll" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAll" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <arrayOf rank="1">
                <type api="T:System.Threading.Tasks.Task" ref="true" />
              </arrayOf>
              <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="e9679c24-2b39-78f1-25a6-7f7c3a417950" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.Tasks.TaskContinuationOptions)">
      <topicdata group="api" />
      <apidata name="ContinueWhenAll" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAll" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <arrayOf rank="1">
                <type api="T:System.Threading.Tasks.Task" ref="true" />
              </arrayOf>
              <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.Tasks.TaskContinuationOptions)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],``0},System.Threading.Tasks.TaskContinuationOptions)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="cf7dedbd-5741-c3bb-a1b5-d8e85cdee0a6" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]})">
      <topicdata group="api" />
      <apidata name="ContinueWhenAll" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAll" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAntecedentResult" />
      </templates>
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]})" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="continuationAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <arrayOf rank="1">
                <type api="T:System.Threading.Tasks.Task`1" ref="true">
                  <specialization>
                    <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]})" />
                  </specialization>
                </type>
              </arrayOf>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="1a9667ac-6aa3-b0ec-0d4f-0fa0b00aa945" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="ContinueWhenAll" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAll" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAntecedentResult" />
      </templates>
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.CancellationToken)" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="continuationAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <arrayOf rank="1">
                <type api="T:System.Threading.Tasks.Task`1" ref="true">
                  <specialization>
                    <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.CancellationToken)" />
                  </specialization>
                </type>
              </arrayOf>
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="5c176e0d-e0aa-6737-ddcc-0a3fa2704900" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="ContinueWhenAll" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAll" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAntecedentResult" />
      </templates>
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="continuationAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <arrayOf rank="1">
                <type api="T:System.Threading.Tasks.Task`1" ref="true">
                  <specialization>
                    <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
                  </specialization>
                </type>
              </arrayOf>
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="562f8974-99c1-08eb-23fb-e40967268a9f" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.Tasks.TaskContinuationOptions)">
      <topicdata group="api" />
      <apidata name="ContinueWhenAll" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAll" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAntecedentResult" />
      </templates>
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.Tasks.TaskContinuationOptions)" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="continuationAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <arrayOf rank="1">
                <type api="T:System.Threading.Tasks.Task`1" ref="true">
                  <specialization>
                    <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}[]},System.Threading.Tasks.TaskContinuationOptions)" />
                  </specialization>
                </type>
              </arrayOf>
            </specialization>
          </type>
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="8b3c5b07-4f70-4101-4b87-aac632354b43" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1})">
      <topicdata group="api" />
      <apidata name="ContinueWhenAll" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAll" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAntecedentResult" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1})" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <arrayOf rank="1">
                <type api="T:System.Threading.Tasks.Task`1" ref="true">
                  <specialization>
                    <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1})" />
                  </specialization>
                </type>
              </arrayOf>
              <template name="TResult" index="1" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="1" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="1bd621b9-56d6-37c5-1ece-2bdcc8af1f08" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="ContinueWhenAll" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAll" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAntecedentResult" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.CancellationToken)" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <arrayOf rank="1">
                <type api="T:System.Threading.Tasks.Task`1" ref="true">
                  <specialization>
                    <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.CancellationToken)" />
                  </specialization>
                </type>
              </arrayOf>
              <template name="TResult" index="1" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.CancellationToken)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="1" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.CancellationToken)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="a7fc1194-154f-891a-e661-00ee28dd661b" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="ContinueWhenAll" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAll" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAntecedentResult" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <arrayOf rank="1">
                <type api="T:System.Threading.Tasks.Task`1" ref="true">
                  <specialization>
                    <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
                  </specialization>
                </type>
              </arrayOf>
              <template name="TResult" index="1" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="1" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="7397f733-c966-0789-02df-2124e1abccde" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.Tasks.TaskContinuationOptions)">
      <topicdata group="api" />
      <apidata name="ContinueWhenAll" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAll" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAntecedentResult" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.Tasks.TaskContinuationOptions)" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <arrayOf rank="1">
                <type api="T:System.Threading.Tasks.Task`1" ref="true">
                  <specialization>
                    <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.Tasks.TaskContinuationOptions)" />
                  </specialization>
                </type>
              </arrayOf>
              <template name="TResult" index="1" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.Tasks.TaskContinuationOptions)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="1" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAll``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],``1},System.Threading.Tasks.TaskContinuationOptions)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="ff04879a-1fc5-2829-ca26-ee30262f45fa" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task})">
      <topicdata group="api" />
      <apidata name="ContinueWhenAny" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAny" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="continuationAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="cc4fe6e9-29bc-f0d0-ceee-a597faf466fd" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="ContinueWhenAny" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAny" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="continuationAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="a003ab5b-54ad-1e5a-ab11-edbdb4c314fd" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="ContinueWhenAny" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAny" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="continuationAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="340bfbf2-b36a-29a3-defe-b1a83882440c" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny(System.Threading.Tasks.Task[],System.Action{System.Threading.Tasks.Task},System.Threading.Tasks.TaskContinuationOptions)">
      <topicdata group="api" />
      <apidata name="ContinueWhenAny" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAny" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="continuationAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="6d5881f0-642c-1793-6f28-29e209db1aa1" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0})">
      <topicdata group="api" />
      <apidata name="ContinueWhenAny" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAny" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
              <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="300d137f-c536-c1db-5b50-1de56f7fb0b0" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="ContinueWhenAny" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAny" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
              <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="9d6bd37b-720d-d8ff-bebd-6dc1afe9e9e0" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="ContinueWhenAny" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAny" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
              <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="31ee7c1d-5dc6-0029-507f-1c2608cda9a4" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskContinuationOptions)">
      <topicdata group="api" />
      <apidata name="ContinueWhenAny" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAny" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
              <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskContinuationOptions)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,``0},System.Threading.Tasks.TaskContinuationOptions)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="200c3603-bdcd-c09e-98db-ff971cc83168" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}})">
      <topicdata group="api" />
      <apidata name="ContinueWhenAny" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAny" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAntecedentResult" />
      </templates>
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}})" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="continuationAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="90f196a3-7782-c180-5814-63eafc9cc5c5" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="ContinueWhenAny" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAny" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAntecedentResult" />
      </templates>
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="continuationAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="341e07d2-1fc8-92f1-676d-f86d7cc31946" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="ContinueWhenAny" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAny" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAntecedentResult" />
      </templates>
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="continuationAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="d70459bf-c76c-b324-b08f-3e4dbff3b096" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.Tasks.TaskContinuationOptions)">
      <topicdata group="api" />
      <apidata name="ContinueWhenAny" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAny" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAntecedentResult" />
      </templates>
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.Tasks.TaskContinuationOptions)" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="continuationAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Action{System.Threading.Tasks.Task{``0}},System.Threading.Tasks.TaskContinuationOptions)" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="f9fc92f8-30e3-224a-6409-3af8c43caf98" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1})">
      <topicdata group="api" />
      <apidata name="ContinueWhenAny" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAny" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAntecedentResult" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1})" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1})" />
                </specialization>
              </type>
              <template name="TResult" index="1" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="1" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="c549e454-a031-5a4f-7a4a-34f9045cf662" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="ContinueWhenAny" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAny" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAntecedentResult" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.CancellationToken)" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.CancellationToken)" />
                </specialization>
              </type>
              <template name="TResult" index="1" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.CancellationToken)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="1" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.CancellationToken)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="dc3b43d2-af0a-0f6a-f785-e62d7318f214" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="ContinueWhenAny" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAny" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAntecedentResult" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
                </specialization>
              </type>
              <template name="TResult" index="1" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="1" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="beef76fd-78d0-f1f9-7ed4-35aecea4492b" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.Tasks.TaskContinuationOptions)">
      <topicdata group="api" />
      <apidata name="ContinueWhenAny" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.ContinueWhenAny" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAntecedentResult" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.Tasks.TaskContinuationOptions)" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.Tasks.TaskContinuationOptions)" />
                </specialization>
              </type>
              <template name="TResult" index="1" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.Tasks.TaskContinuationOptions)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="1" api="M:System.Threading.Tasks.TaskFactory.ContinueWhenAny``2(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},``1},System.Threading.Tasks.TaskContinuationOptions)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="496f7b22-0ce4-cf2d-be7e-8e7195f946dd" />
    </api>
    <api id="P:System.Threading.Tasks.TaskFactory.CreationOptions">
      <topicdata group="api" />
      <apidata name="CreationOptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CreationOptions" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="98be52b3-63e2-63f4-f388-0f6c511082b4" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object)">
      <topicdata group="api" />
      <apidata name="FromAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.FromAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="beginMethod">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <type api="T:System.AsyncCallback" ref="true" />
              <type api="T:System.Object" ref="true" />
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="endMethod">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="830341c2-6969-34a9-480a-a14ba793faf4" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},System.Object,System.Threading.Tasks.TaskCreationOptions)">
      <topicdata group="api" />
      <apidata name="FromAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.FromAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="beginMethod">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <type api="T:System.AsyncCallback" ref="true" />
              <type api="T:System.Object" ref="true" />
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="endMethod">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="496aca76-09d4-ded1-807a-015b0dbd1635" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``0},System.Object)">
      <topicdata group="api" />
      <apidata name="FromAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.FromAsync" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="beginMethod">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <type api="T:System.AsyncCallback" ref="true" />
              <type api="T:System.Object" ref="true" />
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="endMethod">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
              <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``0},System.Object)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``0},System.Object)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="5599fc81-5914-c216-bc3d-a4a0624aa8ad" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``0},System.Object,System.Threading.Tasks.TaskCreationOptions)">
      <topicdata group="api" />
      <apidata name="FromAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.FromAsync" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="beginMethod">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <type api="T:System.AsyncCallback" ref="true" />
              <type api="T:System.Object" ref="true" />
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="endMethod">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
              <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="27a3af28-38c5-ee1d-814b-23968e28e49c" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,System.Object)">
      <topicdata group="api" />
      <apidata name="FromAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.FromAsync" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TArg1" />
      </templates>
      <parameters>
        <parameter name="beginMethod">
          <type api="T:System.Func`4" ref="true">
            <specialization>
              <template name="TArg1" index="0" api="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,System.Object)" />
              <type api="T:System.AsyncCallback" ref="true" />
              <type api="T:System.Object" ref="true" />
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="endMethod">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg1">
          <template name="TArg1" index="0" api="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,System.Object)" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="a2b29bb9-63ed-f3d0-095d-d0549c89fa37" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)">
      <topicdata group="api" />
      <apidata name="FromAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.FromAsync" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TArg1" />
      </templates>
      <parameters>
        <parameter name="beginMethod">
          <type api="T:System.Func`4" ref="true">
            <specialization>
              <template name="TArg1" index="0" api="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
              <type api="T:System.AsyncCallback" ref="true" />
              <type api="T:System.Object" ref="true" />
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="endMethod">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg1">
          <template name="TArg1" index="0" api="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="9154986a-faa8-7740-5b5e-cb2752ce3ce5" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``1},``0,System.Object)">
      <topicdata group="api" />
      <apidata name="FromAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.FromAsync" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TArg1" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="beginMethod">
          <type api="T:System.Func`4" ref="true">
            <specialization>
              <template name="TArg1" index="0" api="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``1},``0,System.Object)" />
              <type api="T:System.AsyncCallback" ref="true" />
              <type api="T:System.Object" ref="true" />
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="endMethod">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
              <template name="TResult" index="1" api="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``1},``0,System.Object)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg1">
          <template name="TArg1" index="0" api="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``1},``0,System.Object)" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="1" api="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``1},``0,System.Object)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="350d7233-1535-c160-6326-b0e0603407d6" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``1},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)">
      <topicdata group="api" />
      <apidata name="FromAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.FromAsync" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TArg1" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="beginMethod">
          <type api="T:System.Func`4" ref="true">
            <specialization>
              <template name="TArg1" index="0" api="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``1},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
              <type api="T:System.AsyncCallback" ref="true" />
              <type api="T:System.Object" ref="true" />
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="endMethod">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
              <template name="TResult" index="1" api="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``1},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg1">
          <template name="TArg1" index="0" api="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``1},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="1" api="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``1},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="9f52566d-e38c-5eb3-d516-5625fa0cbbff" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,System.Object)">
      <topicdata group="api" />
      <apidata name="FromAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.FromAsync" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TArg1" />
        <template name="TArg2" />
      </templates>
      <parameters>
        <parameter name="beginMethod">
          <type api="T:System.Func`5" ref="true">
            <specialization>
              <template name="TArg1" index="0" api="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,System.Object)" />
              <template name="TArg2" index="1" api="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,System.Object)" />
              <type api="T:System.AsyncCallback" ref="true" />
              <type api="T:System.Object" ref="true" />
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="endMethod">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg1">
          <template name="TArg1" index="0" api="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,System.Object)" />
        </parameter>
        <parameter name="arg2">
          <template name="TArg2" index="1" api="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,System.Object)" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="0acaf0ba-16f2-2ac6-3fb8-ff1674bbaa1e" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)">
      <topicdata group="api" />
      <apidata name="FromAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.FromAsync" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TArg1" />
        <template name="TArg2" />
      </templates>
      <parameters>
        <parameter name="beginMethod">
          <type api="T:System.Func`5" ref="true">
            <specialization>
              <template name="TArg1" index="0" api="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
              <template name="TArg2" index="1" api="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
              <type api="T:System.AsyncCallback" ref="true" />
              <type api="T:System.Object" ref="true" />
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="endMethod">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg1">
          <template name="TArg1" index="0" api="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        </parameter>
        <parameter name="arg2">
          <template name="TArg2" index="1" api="M:System.Threading.Tasks.TaskFactory.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="ef12202b-2f80-e082-9b07-f505d68fcedd" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2},``0,``1,System.Object)">
      <topicdata group="api" />
      <apidata name="FromAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.FromAsync" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TArg1" />
        <template name="TArg2" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="beginMethod">
          <type api="T:System.Func`5" ref="true">
            <specialization>
              <template name="TArg1" index="0" api="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2},``0,``1,System.Object)" />
              <template name="TArg2" index="1" api="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2},``0,``1,System.Object)" />
              <type api="T:System.AsyncCallback" ref="true" />
              <type api="T:System.Object" ref="true" />
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="endMethod">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
              <template name="TResult" index="2" api="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2},``0,``1,System.Object)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg1">
          <template name="TArg1" index="0" api="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2},``0,``1,System.Object)" />
        </parameter>
        <parameter name="arg2">
          <template name="TArg2" index="1" api="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2},``0,``1,System.Object)" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="2" api="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2},``0,``1,System.Object)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="56efe9c0-17da-7670-2b80-95fea4e62fdb" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)">
      <topicdata group="api" />
      <apidata name="FromAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.FromAsync" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TArg1" />
        <template name="TArg2" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="beginMethod">
          <type api="T:System.Func`5" ref="true">
            <specialization>
              <template name="TArg1" index="0" api="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
              <template name="TArg2" index="1" api="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
              <type api="T:System.AsyncCallback" ref="true" />
              <type api="T:System.Object" ref="true" />
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="endMethod">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
              <template name="TResult" index="2" api="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg1">
          <template name="TArg1" index="0" api="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        </parameter>
        <parameter name="arg2">
          <template name="TArg2" index="1" api="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="2" api="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``2},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="1406c84d-0358-23f8-3cc3-0acbc61259d6" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,``2,System.Object)">
      <topicdata group="api" />
      <apidata name="FromAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.FromAsync" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TArg1" />
        <template name="TArg2" />
        <template name="TArg3" />
      </templates>
      <parameters>
        <parameter name="beginMethod">
          <type api="T:System.Func`6" ref="true">
            <specialization>
              <template name="TArg1" index="0" api="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,``2,System.Object)" />
              <template name="TArg2" index="1" api="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,``2,System.Object)" />
              <template name="TArg3" index="2" api="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,``2,System.Object)" />
              <type api="T:System.AsyncCallback" ref="true" />
              <type api="T:System.Object" ref="true" />
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="endMethod">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg1">
          <template name="TArg1" index="0" api="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,``2,System.Object)" />
        </parameter>
        <parameter name="arg2">
          <template name="TArg2" index="1" api="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,``2,System.Object)" />
        </parameter>
        <parameter name="arg3">
          <template name="TArg3" index="2" api="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,``2,System.Object)" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="603a8431-50ee-568d-c7c8-45e3c3759e38" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)">
      <topicdata group="api" />
      <apidata name="FromAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.FromAsync" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TArg1" />
        <template name="TArg2" />
        <template name="TArg3" />
      </templates>
      <parameters>
        <parameter name="beginMethod">
          <type api="T:System.Func`6" ref="true">
            <specialization>
              <template name="TArg1" index="0" api="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
              <template name="TArg2" index="1" api="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
              <template name="TArg3" index="2" api="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
              <type api="T:System.AsyncCallback" ref="true" />
              <type api="T:System.Object" ref="true" />
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="endMethod">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg1">
          <template name="TArg1" index="0" api="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        </parameter>
        <parameter name="arg2">
          <template name="TArg2" index="1" api="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        </parameter>
        <parameter name="arg3">
          <template name="TArg3" index="2" api="M:System.Threading.Tasks.TaskFactory.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Action{System.IAsyncResult},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="51c400f3-3e73-ebcd-0447-f86e34ab7827" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object)">
      <topicdata group="api" />
      <apidata name="FromAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.FromAsync" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TArg1" />
        <template name="TArg2" />
        <template name="TArg3" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="beginMethod">
          <type api="T:System.Func`6" ref="true">
            <specialization>
              <template name="TArg1" index="0" api="M:System.Threading.Tasks.TaskFactory.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object)" />
              <template name="TArg2" index="1" api="M:System.Threading.Tasks.TaskFactory.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object)" />
              <template name="TArg3" index="2" api="M:System.Threading.Tasks.TaskFactory.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object)" />
              <type api="T:System.AsyncCallback" ref="true" />
              <type api="T:System.Object" ref="true" />
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="endMethod">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
              <template name="TResult" index="3" api="M:System.Threading.Tasks.TaskFactory.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg1">
          <template name="TArg1" index="0" api="M:System.Threading.Tasks.TaskFactory.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object)" />
        </parameter>
        <parameter name="arg2">
          <template name="TArg2" index="1" api="M:System.Threading.Tasks.TaskFactory.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object)" />
        </parameter>
        <parameter name="arg3">
          <template name="TArg3" index="2" api="M:System.Threading.Tasks.TaskFactory.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object)" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="3" api="M:System.Threading.Tasks.TaskFactory.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="8a6cf849-2da1-8ffc-26a0-a3b78f7aee99" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)">
      <topicdata group="api" />
      <apidata name="FromAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.FromAsync" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TArg1" />
        <template name="TArg2" />
        <template name="TArg3" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="beginMethod">
          <type api="T:System.Func`6" ref="true">
            <specialization>
              <template name="TArg1" index="0" api="M:System.Threading.Tasks.TaskFactory.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
              <template name="TArg2" index="1" api="M:System.Threading.Tasks.TaskFactory.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
              <template name="TArg3" index="2" api="M:System.Threading.Tasks.TaskFactory.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
              <type api="T:System.AsyncCallback" ref="true" />
              <type api="T:System.Object" ref="true" />
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="endMethod">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
              <template name="TResult" index="3" api="M:System.Threading.Tasks.TaskFactory.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg1">
          <template name="TArg1" index="0" api="M:System.Threading.Tasks.TaskFactory.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        </parameter>
        <parameter name="arg2">
          <template name="TArg2" index="1" api="M:System.Threading.Tasks.TaskFactory.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        </parameter>
        <parameter name="arg3">
          <template name="TArg3" index="2" api="M:System.Threading.Tasks.TaskFactory.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="3" api="M:System.Threading.Tasks.TaskFactory.FromAsync``4(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,``3},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="cff5f502-c25a-44ab-03f2-530218b954ab" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult})">
      <topicdata group="api" />
      <apidata name="FromAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.FromAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
        <parameter name="endMethod">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="b0b1972b-2331-0c4f-63ff-72c5b685c4be" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions)">
      <topicdata group="api" />
      <apidata name="FromAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.FromAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
        <parameter name="endMethod">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="93a2a6b8-65a1-074f-13ab-28b3cfc24081" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="FromAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.FromAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
        <parameter name="endMethod">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="4f7fc6ff-ac29-4d10-c487-81c613c3974b" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0})">
      <topicdata group="api" />
      <apidata name="FromAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.FromAsync" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
        <parameter name="endMethod">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
              <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="85fdeaa0-e774-7b65-b32a-cd4052c42a7e" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0},System.Threading.Tasks.TaskCreationOptions)">
      <topicdata group="api" />
      <apidata name="FromAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.FromAsync" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
        <parameter name="endMethod">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
              <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0},System.Threading.Tasks.TaskCreationOptions)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0},System.Threading.Tasks.TaskCreationOptions)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="a6388a73-cf5e-5448-04fa-4236e1b2f75d" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="FromAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.FromAsync" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
        <parameter name="endMethod">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
              <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.FromAsync``1(System.IAsyncResult,System.Func{System.IAsyncResult,``0},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="6bfe3c03-1eea-369a-8860-fce90eec079e" />
    </api>
    <api id="P:System.Threading.Tasks.TaskFactory.Scheduler">
      <topicdata group="api" />
      <apidata name="Scheduler" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Scheduler" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="ed3a1a3e-61d5-997f-612d-d3ddb6132d1b" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action)">
      <topicdata group="api" />
      <apidata name="StartNew" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.StartNew" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="94456efb-931d-2916-c76a-3ffefc764b6f" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="StartNew" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.StartNew" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="100504a4-8bd7-49ba-499e-fb421189daa9" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="StartNew" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.StartNew" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="1a531a09-b3d8-b65b-3c26-c4dbaaf7d72b" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action,System.Threading.Tasks.TaskCreationOptions)">
      <topicdata group="api" />
      <apidata name="StartNew" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.StartNew" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action" ref="true" />
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="11c1b4c4-fe54-b7e6-8b52-b53389d76a56" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object)">
      <topicdata group="api" />
      <apidata name="StartNew" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.StartNew" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="a9e95762-7814-6b0f-abf5-a4c86b784a51" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="StartNew" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.StartNew" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="0077c920-aeb3-a0dc-cfb2-aff5462fc021" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="StartNew" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.StartNew" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="18fc4584-46ea-537b-556c-b3470a1f0c3d" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.StartNew(System.Action{System.Object},System.Object,System.Threading.Tasks.TaskCreationOptions)">
      <topicdata group="api" />
      <apidata name="StartNew" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.StartNew" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="f62c2521-c64e-46be-753f-7eaef62f0f3d" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0})">
      <topicdata group="api" />
      <apidata name="StartNew" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.StartNew" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="function">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="a9d66907-94fd-66f3-bf47-2f2e8d0fd8f3" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0},System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="StartNew" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.StartNew" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="function">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0},System.Threading.CancellationToken)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0},System.Threading.CancellationToken)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="dba17393-009d-610a-3844-80dca204db7d" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="StartNew" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.StartNew" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="function">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="32c007d1-fc04-e134-3281-c619ef7dc12d" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0},System.Threading.Tasks.TaskCreationOptions)">
      <topicdata group="api" />
      <apidata name="StartNew" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.StartNew" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="function">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0},System.Threading.Tasks.TaskCreationOptions)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{``0},System.Threading.Tasks.TaskCreationOptions)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="5602c25d-1ed3-c852-0b27-96040243d5f9" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object)">
      <topicdata group="api" />
      <apidata name="StartNew" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.StartNew" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="function">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
              <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="596e7cbe-210d-d5d8-6d04-0d028c5fe708" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="StartNew" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.StartNew" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="function">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
              <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.CancellationToken)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.CancellationToken)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="436791e7-e67b-0abe-2f53-a631a2529e10" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="StartNew" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.StartNew" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="function">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
              <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="28933cc3-fb38-8e06-eb06-e090e0cb672e" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.Tasks.TaskCreationOptions)">
      <topicdata group="api" />
      <apidata name="StartNew" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory.StartNew" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="function">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
              <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="M:System.Threading.Tasks.TaskFactory.StartNew``1(System.Func{System.Object,``0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory" ref="true" />
      </containers>
      <file name="341044ad-7899-9182-2a73-05ad7ace4075" />
    </api>
    <api id="T:System.Threading.Tasks.TaskFactory`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Threading.Tasks.TaskFactory`1" />
      <apidata name="TaskFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.Tasks.TaskFactory`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TResult" />
      </templates>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="1046aefe-4fbd-a424-5dc1-075f4a259189" />
    </api>
    <api id="AllMembers.T:System.Threading.Tasks.TaskFactory`1">
      <topicdata name="TaskFactory" group="list" subgroup="members" typeTopicId="T:System.Threading.Tasks.TaskFactory`1" />
      <apidata name="TaskFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.Tasks.TaskFactory`1.#ctor" />
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Threading.Tasks.TaskFactory`1.#ctor">
          <element api="M:System.Threading.Tasks.TaskFactory`1.#ctor" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
        </element>
        <element api="P:System.Threading.Tasks.TaskFactory`1.CancellationToken" />
        <element api="P:System.Threading.Tasks.TaskFactory`1.ContinuationOptions" />
        <element api="Overload:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll">
          <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0})" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0})" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
        </element>
        <element api="Overload:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny">
          <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0})" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0})" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
        </element>
        <element api="P:System.Threading.Tasks.TaskFactory`1.CreationOptions" />
        <element api="Overload:System.Threading.Tasks.TaskFactory`1.FromAsync">
          <element api="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0})" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},System.Object)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0},System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,System.Object)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        </element>
        <element api="P:System.Threading.Tasks.TaskFactory`1.Scheduler" />
        <element api="Overload:System.Threading.Tasks.TaskFactory`1.StartNew">
          <element api="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0})" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
        </element>
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" />
      </containers>
      <file name="b030fe9c-200b-cafd-6796-8870116e8607" />
    </api>
    <api id="Methods.T:System.Threading.Tasks.TaskFactory`1">
      <topicdata name="TaskFactory" group="list" subgroup="Methods" typeTopicId="T:System.Threading.Tasks.TaskFactory`1" />
      <apidata name="TaskFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.Tasks.TaskFactory`1.#ctor" />
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll">
          <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0})" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0})" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
        </element>
        <element api="Overload:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny">
          <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0})" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0})" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.Tasks.TaskContinuationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
        </element>
        <element api="Overload:System.Threading.Tasks.TaskFactory`1.FromAsync">
          <element api="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0})" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},System.Object)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0},System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,System.Object)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        </element>
        <element api="Overload:System.Threading.Tasks.TaskFactory`1.StartNew">
          <element api="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0})" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
          <element api="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
        </element>
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" />
      </containers>
      <file name="b040347a-dc3a-ac17-8324-031b906b0de4" />
    </api>
    <api id="Properties.T:System.Threading.Tasks.TaskFactory`1">
      <topicdata name="TaskFactory" group="list" subgroup="Properties" typeTopicId="T:System.Threading.Tasks.TaskFactory`1" />
      <apidata name="TaskFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Threading.Tasks.TaskFactory`1.#ctor" />
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:System.Threading.Tasks.TaskFactory`1.CancellationToken" />
        <element api="P:System.Threading.Tasks.TaskFactory`1.ContinuationOptions" />
        <element api="P:System.Threading.Tasks.TaskFactory`1.CreationOptions" />
        <element api="P:System.Threading.Tasks.TaskFactory`1.Scheduler" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" />
      </containers>
      <file name="4a0b86f4-871e-dceb-2217-8418890b86a9" />
    </api>
    <api id="Overload:System.Threading.Tasks.TaskFactory`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.TaskFactory`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Threading.Tasks.TaskFactory`1.#ctor" />
        <element api="M:System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions)" />
        <element api="M:System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="fb5f17fa-2d6e-4a20-6d4c-d5302a9782a8" />
    </api>
    <api id="Overload:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll">
      <topicdata name="ContinueWhenAll" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.TaskFactory`1" />
      <apidata name="ContinueWhenAll" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0})" />
        <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0})" />
        <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.Tasks.TaskContinuationOptions)" />
        <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.Tasks.TaskContinuationOptions)" />
        <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="ef10305b-198a-c784-f55d-bbb8bcd061d9" />
    </api>
    <api id="Overload:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny">
      <topicdata name="ContinueWhenAny" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.TaskFactory`1" />
      <apidata name="ContinueWhenAny" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0})" />
        <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0})" />
        <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.Tasks.TaskContinuationOptions)" />
        <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.Tasks.TaskContinuationOptions)" />
        <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="6eb91f6e-d490-888b-c806-fee63f8b31cd" />
    </api>
    <api id="Overload:System.Threading.Tasks.TaskFactory`1.FromAsync">
      <topicdata name="FromAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.TaskFactory`1" />
      <apidata name="FromAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0})" />
        <element api="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},System.Object)" />
        <element api="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0},System.Threading.Tasks.TaskCreationOptions)" />
        <element api="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        <element api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,System.Object)" />
        <element api="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        <element api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object)" />
        <element api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        <element api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object)" />
        <element api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="b3daae9b-306e-bc9c-f35c-fc3cdda23bf4" />
    </api>
    <api id="Overload:System.Threading.Tasks.TaskFactory`1.StartNew">
      <topicdata name="StartNew" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.TaskFactory`1" />
      <apidata name="StartNew" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0})" />
        <element api="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.Tasks.TaskCreationOptions)" />
        <element api="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object)" />
        <element api="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken)" />
        <element api="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        <element api="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
        <element api="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="8b2db2ec-4433-cbd8-c42d-a505926c1820" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.TaskFactory`1.#ctor" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="cb049830-4627-c591-4992-6b2d9758cd38" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.TaskFactory`1.#ctor" />
      <parameters>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="fffabfa3-5e38-da92-04ec-537797912637" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.TaskFactory`1.#ctor" />
      <parameters>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="159628e1-dbac-793f-d32a-21de8b0db20d" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskContinuationOptions)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.TaskFactory`1.#ctor" />
      <parameters>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="2ed1feb9-6ef4-2386-0705-ebf2f51e66da" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.#ctor(System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.TaskFactory`1.#ctor" />
      <parameters>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="7f812fac-773a-0fd7-d06e-60ac410a0505" />
    </api>
    <api id="P:System.Threading.Tasks.TaskFactory`1.CancellationToken">
      <topicdata group="api" />
      <apidata name="CancellationToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CancellationToken" />
      <returns>
        <type api="T:System.Threading.CancellationToken" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="1759d1ba-926c-ad91-ceba-46cdbafe1917" />
    </api>
    <api id="P:System.Threading.Tasks.TaskFactory`1.ContinuationOptions">
      <topicdata group="api" />
      <apidata name="ContinuationOptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ContinuationOptions" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="336145ad-0582-68b0-9852-b67bc16a9025" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0})">
      <topicdata group="api" />
      <apidata name="ContinueWhenAll" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <arrayOf rank="1">
                <type api="T:System.Threading.Tasks.Task" ref="true" />
              </arrayOf>
              <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="b67554af-93e5-3965-3584-045d42c9a746" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="ContinueWhenAll" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <arrayOf rank="1">
                <type api="T:System.Threading.Tasks.Task" ref="true" />
              </arrayOf>
              <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="038d7932-77f3-3c10-d670-086b8dd97be2" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="ContinueWhenAll" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <arrayOf rank="1">
                <type api="T:System.Threading.Tasks.Task" ref="true" />
              </arrayOf>
              <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="9e277052-68f5-8837-fd6a-4a59d0a9fb22" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task[],`0},System.Threading.Tasks.TaskContinuationOptions)">
      <topicdata group="api" />
      <apidata name="ContinueWhenAll" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <arrayOf rank="1">
                <type api="T:System.Threading.Tasks.Task" ref="true" />
              </arrayOf>
              <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="14a9fd7c-c236-4c42-8da6-9b823f844b8e" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0})">
      <topicdata group="api" />
      <apidata name="ContinueWhenAll" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAntecedentResult" />
      </templates>
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0})" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <arrayOf rank="1">
                <type api="T:System.Threading.Tasks.Task`1" ref="true">
                  <specialization>
                    <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0})" />
                  </specialization>
                </type>
              </arrayOf>
              <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="89869fa4-2686-c50e-e38e-62613047e87f" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="ContinueWhenAll" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAntecedentResult" />
      </templates>
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.CancellationToken)" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <arrayOf rank="1">
                <type api="T:System.Threading.Tasks.Task`1" ref="true">
                  <specialization>
                    <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.CancellationToken)" />
                  </specialization>
                </type>
              </arrayOf>
              <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="d7eee5d6-4d45-d8d8-d105-c7cee7771a41" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="ContinueWhenAll" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAntecedentResult" />
      </templates>
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <arrayOf rank="1">
                <type api="T:System.Threading.Tasks.Task`1" ref="true">
                  <specialization>
                    <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
                  </specialization>
                </type>
              </arrayOf>
              <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="b4309330-5c2a-6188-e0cf-c217fbf36b88" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.Tasks.TaskContinuationOptions)">
      <topicdata group="api" />
      <apidata name="ContinueWhenAll" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAntecedentResult" />
      </templates>
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.Tasks.TaskContinuationOptions)" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <arrayOf rank="1">
                <type api="T:System.Threading.Tasks.Task`1" ref="true">
                  <specialization>
                    <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAll``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0}[],`0},System.Threading.Tasks.TaskContinuationOptions)" />
                  </specialization>
                </type>
              </arrayOf>
              <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="aa276c9e-3e8e-30ba-03e5-fda168661d21" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0})">
      <topicdata group="api" />
      <apidata name="ContinueWhenAny" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
              <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="ac4dd5be-1b73-8b96-03ed-e7d08a5c07ca" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="ContinueWhenAny" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
              <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="cda32bb8-6e5c-5eee-2a22-7d9743027bee" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="ContinueWhenAny" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
              <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="383e0048-68e2-3a4c-7e84-a85ac9a09c2d" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny(System.Threading.Tasks.Task[],System.Func{System.Threading.Tasks.Task,`0},System.Threading.Tasks.TaskContinuationOptions)">
      <topicdata group="api" />
      <apidata name="ContinueWhenAny" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task" ref="true" />
              <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="fd39e336-70f6-d56e-d1b6-aa035df1daad" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0})">
      <topicdata group="api" />
      <apidata name="ContinueWhenAny" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAntecedentResult" />
      </templates>
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0})" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0})" />
                </specialization>
              </type>
              <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="f9f41785-4654-1647-cfc2-5b64be19e8e0" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="ContinueWhenAny" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAntecedentResult" />
      </templates>
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.CancellationToken)" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.CancellationToken)" />
                </specialization>
              </type>
              <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="98aec50b-d6a0-dbb8-07af-beaf23db56f4" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="ContinueWhenAny" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAntecedentResult" />
      </templates>
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskContinuationOptions,System.Threading.Tasks.TaskScheduler)" />
                </specialization>
              </type>
              <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="9cf752c7-cb83-885e-5915-81be172462f0" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.Tasks.TaskContinuationOptions)">
      <topicdata group="api" />
      <apidata name="ContinueWhenAny" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TAntecedentResult" />
      </templates>
      <parameters>
        <parameter name="tasks">
          <arrayOf rank="1">
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.Tasks.TaskContinuationOptions)" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="continuationFunction">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Threading.Tasks.Task`1" ref="true">
                <specialization>
                  <template name="TAntecedentResult" index="0" api="M:System.Threading.Tasks.TaskFactory`1.ContinueWhenAny``1(System.Threading.Tasks.Task{``0}[],System.Func{System.Threading.Tasks.Task{``0},`0},System.Threading.Tasks.TaskContinuationOptions)" />
                </specialization>
              </type>
              <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="continuationOptions">
          <type api="T:System.Threading.Tasks.TaskContinuationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="6ab3dc2e-9253-98e3-7987-2c35601ff104" />
    </api>
    <api id="P:System.Threading.Tasks.TaskFactory`1.CreationOptions">
      <topicdata group="api" />
      <apidata name="CreationOptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CreationOptions" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="1ca1f737-dd9c-a020-e484-8849a09d00a1" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},System.Object)">
      <topicdata group="api" />
      <apidata name="FromAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory`1.FromAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="beginMethod">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <type api="T:System.AsyncCallback" ref="true" />
              <type api="T:System.Object" ref="true" />
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="endMethod">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
              <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="63f06be7-9f2e-5815-4c7b-b5af721dfc55" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.Func{System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)">
      <topicdata group="api" />
      <apidata name="FromAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory`1.FromAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="beginMethod">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <type api="T:System.AsyncCallback" ref="true" />
              <type api="T:System.Object" ref="true" />
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="endMethod">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
              <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="1e751187-1c96-a5e8-8210-0be8898a09b9" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,System.Object)">
      <topicdata group="api" />
      <apidata name="FromAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory`1.FromAsync" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TArg1" />
      </templates>
      <parameters>
        <parameter name="beginMethod">
          <type api="T:System.Func`4" ref="true">
            <specialization>
              <template name="TArg1" index="0" api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,System.Object)" />
              <type api="T:System.AsyncCallback" ref="true" />
              <type api="T:System.Object" ref="true" />
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="endMethod">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
              <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg1">
          <template name="TArg1" index="0" api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,System.Object)" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="c5bdd18f-22eb-40fb-1ac5-dfd8e5a373a1" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)">
      <topicdata group="api" />
      <apidata name="FromAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory`1.FromAsync" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TArg1" />
      </templates>
      <parameters>
        <parameter name="beginMethod">
          <type api="T:System.Func`4" ref="true">
            <specialization>
              <template name="TArg1" index="0" api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
              <type api="T:System.AsyncCallback" ref="true" />
              <type api="T:System.Object" ref="true" />
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="endMethod">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
              <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg1">
          <template name="TArg1" index="0" api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``1(System.Func{``0,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="39f16395-0f23-65f7-262e-572992e02d72" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object)">
      <topicdata group="api" />
      <apidata name="FromAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory`1.FromAsync" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TArg1" />
        <template name="TArg2" />
      </templates>
      <parameters>
        <parameter name="beginMethod">
          <type api="T:System.Func`5" ref="true">
            <specialization>
              <template name="TArg1" index="0" api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object)" />
              <template name="TArg2" index="1" api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object)" />
              <type api="T:System.AsyncCallback" ref="true" />
              <type api="T:System.Object" ref="true" />
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="endMethod">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
              <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg1">
          <template name="TArg1" index="0" api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object)" />
        </parameter>
        <parameter name="arg2">
          <template name="TArg2" index="1" api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object)" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="2dc6386a-f16a-110a-dae3-c9332489efed" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)">
      <topicdata group="api" />
      <apidata name="FromAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory`1.FromAsync" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TArg1" />
        <template name="TArg2" />
      </templates>
      <parameters>
        <parameter name="beginMethod">
          <type api="T:System.Func`5" ref="true">
            <specialization>
              <template name="TArg1" index="0" api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
              <template name="TArg2" index="1" api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
              <type api="T:System.AsyncCallback" ref="true" />
              <type api="T:System.Object" ref="true" />
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="endMethod">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
              <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg1">
          <template name="TArg1" index="0" api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        </parameter>
        <parameter name="arg2">
          <template name="TArg2" index="1" api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``2(System.Func{``0,``1,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="dc577448-8bdc-a704-c7fc-9fefc4426d5d" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object)">
      <topicdata group="api" />
      <apidata name="FromAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory`1.FromAsync" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TArg1" />
        <template name="TArg2" />
        <template name="TArg3" />
      </templates>
      <parameters>
        <parameter name="beginMethod">
          <type api="T:System.Func`6" ref="true">
            <specialization>
              <template name="TArg1" index="0" api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object)" />
              <template name="TArg2" index="1" api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object)" />
              <template name="TArg3" index="2" api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object)" />
              <type api="T:System.AsyncCallback" ref="true" />
              <type api="T:System.Object" ref="true" />
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="endMethod">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
              <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg1">
          <template name="TArg1" index="0" api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object)" />
        </parameter>
        <parameter name="arg2">
          <template name="TArg2" index="1" api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object)" />
        </parameter>
        <parameter name="arg3">
          <template name="TArg3" index="2" api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object)" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="224b6465-b6fb-b357-e15e-03c66876c604" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)">
      <topicdata group="api" />
      <apidata name="FromAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory`1.FromAsync" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TArg1" />
        <template name="TArg2" />
        <template name="TArg3" />
      </templates>
      <parameters>
        <parameter name="beginMethod">
          <type api="T:System.Func`6" ref="true">
            <specialization>
              <template name="TArg1" index="0" api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
              <template name="TArg2" index="1" api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
              <template name="TArg3" index="2" api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
              <type api="T:System.AsyncCallback" ref="true" />
              <type api="T:System.Object" ref="true" />
              <type api="T:System.IAsyncResult" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="endMethod">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
              <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg1">
          <template name="TArg1" index="0" api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        </parameter>
        <parameter name="arg2">
          <template name="TArg2" index="1" api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        </parameter>
        <parameter name="arg3">
          <template name="TArg3" index="2" api="M:System.Threading.Tasks.TaskFactory`1.FromAsync``3(System.Func{``0,``1,``2,System.AsyncCallback,System.Object,System.IAsyncResult},System.Func{System.IAsyncResult,`0},``0,``1,``2,System.Object,System.Threading.Tasks.TaskCreationOptions)" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="a495442c-e8a3-1fc9-050c-fba1392f503c" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0})">
      <topicdata group="api" />
      <apidata name="FromAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory`1.FromAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
        <parameter name="endMethod">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
              <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="6d912122-a0e9-e6e8-7be4-4e204ba13809" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0},System.Threading.Tasks.TaskCreationOptions)">
      <topicdata group="api" />
      <apidata name="FromAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory`1.FromAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
        <parameter name="endMethod">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
              <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="f0f9ccef-758b-8f02-f715-9cfacec83b68" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.FromAsync(System.IAsyncResult,System.Func{System.IAsyncResult,`0},System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="FromAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory`1.FromAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
        <parameter name="endMethod">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.IAsyncResult" ref="true" />
              <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="014d5abe-d241-798d-f050-327e627245c3" />
    </api>
    <api id="P:System.Threading.Tasks.TaskFactory`1.Scheduler">
      <topicdata group="api" />
      <apidata name="Scheduler" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Scheduler" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="a76bd2c6-bc84-f923-e8c5-71af8f50d353" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0})">
      <topicdata group="api" />
      <apidata name="StartNew" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory`1.StartNew" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="function">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="69f2007f-75b7-0ef9-2aa5-81e0ab8ff1ba" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="StartNew" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory`1.StartNew" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="function">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="f05a4300-3f5a-50c2-82c3-c82fae730683" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="StartNew" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory`1.StartNew" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="function">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="5cc93105-f36c-1373-127b-5899b0a08fbe" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{`0},System.Threading.Tasks.TaskCreationOptions)">
      <topicdata group="api" />
      <apidata name="StartNew" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory`1.StartNew" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="function">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="4997e1f7-0c18-18e7-776f-0a5719fbe91a" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object)">
      <topicdata group="api" />
      <apidata name="StartNew" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory`1.StartNew" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="function">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
              <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="14e0dd31-d018-6fda-ff9a-8118be34cde1" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="StartNew" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory`1.StartNew" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="function">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
              <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="4f9efa70-6b7c-2b67-ae13-d162ba0efbac" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.CancellationToken,System.Threading.Tasks.TaskCreationOptions,System.Threading.Tasks.TaskScheduler)">
      <topicdata group="api" />
      <apidata name="StartNew" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory`1.StartNew" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="function">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
              <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
        <parameter name="scheduler">
          <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="f4066da7-daac-cc31-429d-f9f80e1e0a04" />
    </api>
    <api id="M:System.Threading.Tasks.TaskFactory`1.StartNew(System.Func{System.Object,`0},System.Object,System.Threading.Tasks.TaskCreationOptions)">
      <topicdata group="api" />
      <apidata name="StartNew" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Threading.Tasks.TaskFactory`1.StartNew" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="function">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
              <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="creationOptions">
          <type api="T:System.Threading.Tasks.TaskCreationOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <template name="TResult" index="0" api="T:System.Threading.Tasks.TaskFactory`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskFactory`1" ref="true" />
      </containers>
      <file name="f2d54718-f536-d4d9-2adb-60fcbd7125bb" />
    </api>
    <api id="T:System.Threading.Tasks.TaskScheduler">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Threading.Tasks.TaskScheduler" />
      <apidata name="TaskScheduler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
          <argument>
            <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
            <enumValue>
              <field name="LinkDemand" />
            </enumValue>
          </argument>
          <assignment name="Synchronization">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
          <assignment name="ExternalThreading">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="6f4a6ab7-9677-282f-8ff3-c2d785809605" />
    </api>
    <api id="AllMembers.T:System.Threading.Tasks.TaskScheduler">
      <topicdata name="TaskScheduler" group="list" subgroup="members" typeTopicId="T:System.Threading.Tasks.TaskScheduler" />
      <apidata name="TaskScheduler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.Tasks.TaskScheduler.#ctor" />
        <element api="P:System.Threading.Tasks.TaskScheduler.Current" />
        <element api="P:System.Threading.Tasks.TaskScheduler.Default" />
        <element api="M:System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext" />
        <element api="M:System.Threading.Tasks.TaskScheduler.GetScheduledTasks" />
        <element api="P:System.Threading.Tasks.TaskScheduler.Id" />
        <element api="P:System.Threading.Tasks.TaskScheduler.MaximumConcurrencyLevel" />
        <element api="M:System.Threading.Tasks.TaskScheduler.QueueTask(System.Threading.Tasks.Task)" />
        <element api="M:System.Threading.Tasks.TaskScheduler.TryDequeue(System.Threading.Tasks.Task)" />
        <element api="M:System.Threading.Tasks.TaskScheduler.TryExecuteTask(System.Threading.Tasks.Task)" />
        <element api="M:System.Threading.Tasks.TaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)" />
        <element api="E:System.Threading.Tasks.TaskScheduler.UnobservedTaskException" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskScheduler" />
      </containers>
      <file name="f97df7b9-1e09-da5c-27d2-a5ef0de98586" />
    </api>
    <api id="Methods.T:System.Threading.Tasks.TaskScheduler">
      <topicdata name="TaskScheduler" group="list" subgroup="Methods" typeTopicId="T:System.Threading.Tasks.TaskScheduler" />
      <apidata name="TaskScheduler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext" />
        <element api="M:System.Threading.Tasks.TaskScheduler.GetScheduledTasks" />
        <element api="M:System.Threading.Tasks.TaskScheduler.QueueTask(System.Threading.Tasks.Task)" />
        <element api="M:System.Threading.Tasks.TaskScheduler.TryDequeue(System.Threading.Tasks.Task)" />
        <element api="M:System.Threading.Tasks.TaskScheduler.TryExecuteTask(System.Threading.Tasks.Task)" />
        <element api="M:System.Threading.Tasks.TaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskScheduler" />
      </containers>
      <file name="551f3f39-b6a7-e878-9f4d-c329c70a4ceb" />
    </api>
    <api id="Properties.T:System.Threading.Tasks.TaskScheduler">
      <topicdata name="TaskScheduler" group="list" subgroup="Properties" typeTopicId="T:System.Threading.Tasks.TaskScheduler" />
      <apidata name="TaskScheduler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Threading.Tasks.TaskScheduler.Current" />
        <element api="P:System.Threading.Tasks.TaskScheduler.Default" />
        <element api="P:System.Threading.Tasks.TaskScheduler.Id" />
        <element api="P:System.Threading.Tasks.TaskScheduler.MaximumConcurrencyLevel" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskScheduler" />
      </containers>
      <file name="958d34c4-75ee-4b69-d5ce-0c858f1dec49" />
    </api>
    <api id="Events.T:System.Threading.Tasks.TaskScheduler">
      <topicdata name="TaskScheduler" group="list" subgroup="Events" typeTopicId="T:System.Threading.Tasks.TaskScheduler" />
      <apidata name="TaskScheduler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.Threading.Tasks.TaskScheduler.UnobservedTaskException" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskScheduler" />
      </containers>
      <file name="351b1f76-5dfe-1f6c-3234-590f33679f4f" />
    </api>
    <api id="M:System.Threading.Tasks.TaskScheduler.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
      </containers>
      <file name="a98bc615-7424-bfcc-cae7-1745a3af7d97" />
    </api>
    <api id="P:System.Threading.Tasks.TaskScheduler.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
      </containers>
      <file name="bcee1d3b-6aaa-9009-2261-fb770bfab24e" />
    </api>
    <api id="P:System.Threading.Tasks.TaskScheduler.Default">
      <topicdata group="api" />
      <apidata name="Default" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Default" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
      </containers>
      <file name="b38ca3d4-08e3-1855-0fb9-a50684d9b7ef" />
    </api>
    <api id="M:System.Threading.Tasks.TaskScheduler.FromCurrentSynchronizationContext">
      <topicdata group="api" />
      <apidata name="FromCurrentSynchronizationContext" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
      </containers>
      <file name="1e0c79a8-8660-5dae-8de5-1f8c8613e52d" />
    </api>
    <api id="M:System.Threading.Tasks.TaskScheduler.GetScheduledTasks">
      <topicdata group="api" />
      <apidata name="GetScheduledTasks" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="2f256400-55c5-c37c-b58c-b369a67587a0" />
    </api>
    <api id="P:System.Threading.Tasks.TaskScheduler.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Id" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
      </containers>
      <file name="ef6858b5-5060-01ed-3959-ff2b6dc39f73" />
    </api>
    <api id="P:System.Threading.Tasks.TaskScheduler.MaximumConcurrencyLevel">
      <topicdata group="api" />
      <apidata name="MaximumConcurrencyLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_MaximumConcurrencyLevel" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
      </containers>
      <file name="f4cc2b83-2eb3-d069-4ea8-7643bd0f1c16" />
    </api>
    <api id="M:System.Threading.Tasks.TaskScheduler.QueueTask(System.Threading.Tasks.Task)">
      <topicdata group="api" />
      <apidata name="QueueTask" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="task">
          <type api="T:System.Threading.Tasks.Task" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="36c42414-e9ff-3608-1435-d812ce19f6f4" />
    </api>
    <api id="M:System.Threading.Tasks.TaskScheduler.TryDequeue(System.Threading.Tasks.Task)">
      <topicdata group="api" />
      <apidata name="TryDequeue" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="task">
          <type api="T:System.Threading.Tasks.Task" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="e10db4d4-df09-dc6a-c5fc-c2ea765ffec2" />
    </api>
    <api id="M:System.Threading.Tasks.TaskScheduler.TryExecuteTask(System.Threading.Tasks.Task)">
      <topicdata group="api" />
      <apidata name="TryExecuteTask" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="task">
          <type api="T:System.Threading.Tasks.Task" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="02be4e17-78e8-b1ac-9554-9a04d08643ae" />
    </api>
    <api id="M:System.Threading.Tasks.TaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)">
      <topicdata group="api" />
      <apidata name="TryExecuteTaskInline" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="task">
          <type api="T:System.Threading.Tasks.Task" ref="true" />
        </parameter>
        <parameter name="taskWasPreviouslyQueued">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="20a9b11b-0ff7-624e-c6dd-3a7dccc9eda5" />
    </api>
    <api id="E:System.Threading.Tasks.TaskScheduler.UnobservedTaskException">
      <topicdata group="api" />
      <apidata name="UnobservedTaskException" group="member" subgroup="event" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_UnobservedTaskException">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </adder>
      <remover name="remove_UnobservedTaskException">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </remover>
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Threading.Tasks.UnobservedTaskExceptionEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Threading.Tasks.UnobservedTaskExceptionEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskScheduler" ref="true" />
      </containers>
      <file name="36db9ce5-c85b-ca2b-8da4-d9805dd0369b" />
    </api>
    <api id="T:System.Threading.Tasks.TaskSchedulerException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Threading.Tasks.TaskSchedulerException" />
      <apidata name="TaskSchedulerException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.Tasks.TaskSchedulerException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
      </containers>
      <file name="681a176d-78ca-5fe9-560d-c827390156c3" />
    </api>
    <api id="AllMembers.T:System.Threading.Tasks.TaskSchedulerException">
      <topicdata name="TaskSchedulerException" group="list" subgroup="members" typeTopicId="T:System.Threading.Tasks.TaskSchedulerException" />
      <apidata name="TaskSchedulerException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.Tasks.TaskSchedulerException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.Threading.Tasks.TaskSchedulerException.#ctor">
          <element api="M:System.Threading.Tasks.TaskSchedulerException.#ctor" />
          <element api="M:System.Threading.Tasks.TaskSchedulerException.#ctor(System.Exception)" />
          <element api="M:System.Threading.Tasks.TaskSchedulerException.#ctor(System.String)" />
          <element api="M:System.Threading.Tasks.TaskSchedulerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.Threading.Tasks.TaskSchedulerException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskSchedulerException" />
      </containers>
      <file name="0ebab866-48bd-d095-060c-700e0bcd8eb2" />
    </api>
    <api id="Methods.T:System.Threading.Tasks.TaskSchedulerException">
      <topicdata name="TaskSchedulerException" group="list" subgroup="Methods" typeTopicId="T:System.Threading.Tasks.TaskSchedulerException" />
      <apidata name="TaskSchedulerException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.Tasks.TaskSchedulerException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskSchedulerException" />
      </containers>
      <file name="7c74b0ca-6559-7bc2-0f15-1b48b25222f9" />
    </api>
    <api id="Properties.T:System.Threading.Tasks.TaskSchedulerException">
      <topicdata name="TaskSchedulerException" group="list" subgroup="Properties" typeTopicId="T:System.Threading.Tasks.TaskSchedulerException" />
      <apidata name="TaskSchedulerException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.Tasks.TaskSchedulerException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskSchedulerException" />
      </containers>
      <file name="4e27f517-756e-2ec1-58fd-0882a652e879" />
    </api>
    <api id="Events.T:System.Threading.Tasks.TaskSchedulerException">
      <topicdata name="TaskSchedulerException" group="list" subgroup="Events" typeTopicId="T:System.Threading.Tasks.TaskSchedulerException" />
      <apidata name="TaskSchedulerException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.Threading.Tasks.TaskSchedulerException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskSchedulerException" />
      </containers>
      <file name="5f9ac0db-ee78-5528-96aa-c43936f71d24" />
    </api>
    <api id="Overload:System.Threading.Tasks.TaskSchedulerException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Threading.Tasks.TaskSchedulerException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Threading.Tasks.TaskSchedulerException.#ctor" />
        <element api="M:System.Threading.Tasks.TaskSchedulerException.#ctor(System.Exception)" />
        <element api="M:System.Threading.Tasks.TaskSchedulerException.#ctor(System.String)" />
        <element api="M:System.Threading.Tasks.TaskSchedulerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Threading.Tasks.TaskSchedulerException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskSchedulerException" ref="true" />
      </containers>
      <file name="236d56f8-8e23-f592-5914-ee754f6263c6" />
    </api>
    <api id="M:System.Threading.Tasks.TaskSchedulerException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.TaskSchedulerException.#ctor" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskSchedulerException" ref="true" />
      </containers>
      <file name="18da2b99-e96e-7880-7d36-e990d0e38380" />
    </api>
    <api id="M:System.Threading.Tasks.TaskSchedulerException.#ctor(System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.TaskSchedulerException.#ctor" />
      <parameters>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskSchedulerException" ref="true" />
      </containers>
      <file name="93e55947-1ee7-4243-46bb-d2811a5bc854" />
    </api>
    <api id="M:System.Threading.Tasks.TaskSchedulerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Threading.Tasks.TaskSchedulerException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskSchedulerException" ref="true" />
      </containers>
      <file name="5521bbcb-6597-3e63-453c-c2436c4f7e8f" />
    </api>
    <api id="M:System.Threading.Tasks.TaskSchedulerException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.TaskSchedulerException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskSchedulerException" ref="true" />
      </containers>
      <file name="132b2f9e-5d72-2ffd-3413-21e4c0bcce85" />
    </api>
    <api id="M:System.Threading.Tasks.TaskSchedulerException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Threading.Tasks.TaskSchedulerException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskSchedulerException" ref="true" />
      </containers>
      <file name="d557ebcf-578f-be8d-ec53-47c5449a9279" />
    </api>
    <api id="T:System.Threading.Tasks.TaskStatus">
      <topicdata group="api" />
      <apidata name="TaskStatus" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Threading.Tasks.TaskStatus.Created" />
        <element api="F:System.Threading.Tasks.TaskStatus.WaitingForActivation" />
        <element api="F:System.Threading.Tasks.TaskStatus.WaitingToRun" />
        <element api="F:System.Threading.Tasks.TaskStatus.Running" />
        <element api="F:System.Threading.Tasks.TaskStatus.WaitingForChildrenToComplete" />
        <element api="F:System.Threading.Tasks.TaskStatus.RanToCompletion" />
        <element api="F:System.Threading.Tasks.TaskStatus.Canceled" />
        <element api="F:System.Threading.Tasks.TaskStatus.Faulted" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
      </containers>
      <file name="538e5879-824a-26b8-4e53-7150eb18ded9" />
    </api>
    <api id="F:System.Threading.Tasks.TaskStatus.Canceled">
      <topicdata group="api" notopic="" />
      <apidata name="Canceled" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskStatus" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskStatus" ref="false" />
      </containers>
      <file name="862f74c0-e95e-11be-e376-0e1d6a942784" />
    </api>
    <api id="F:System.Threading.Tasks.TaskStatus.Created">
      <topicdata group="api" notopic="" />
      <apidata name="Created" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskStatus" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskStatus" ref="false" />
      </containers>
      <file name="d6ab4545-79d5-9108-d509-b6bf445fe3e6" />
    </api>
    <api id="F:System.Threading.Tasks.TaskStatus.Faulted">
      <topicdata group="api" notopic="" />
      <apidata name="Faulted" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskStatus" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskStatus" ref="false" />
      </containers>
      <file name="909303a8-89df-2a28-5e52-44a991035f22" />
    </api>
    <api id="F:System.Threading.Tasks.TaskStatus.RanToCompletion">
      <topicdata group="api" notopic="" />
      <apidata name="RanToCompletion" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskStatus" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskStatus" ref="false" />
      </containers>
      <file name="c09fe672-11e8-d2b3-c7f4-ec351468f35d" />
    </api>
    <api id="F:System.Threading.Tasks.TaskStatus.Running">
      <topicdata group="api" notopic="" />
      <apidata name="Running" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskStatus" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskStatus" ref="false" />
      </containers>
      <file name="ec368fea-3360-13be-5eb0-851a56494daf" />
    </api>
    <api id="F:System.Threading.Tasks.TaskStatus.WaitingForActivation">
      <topicdata group="api" notopic="" />
      <apidata name="WaitingForActivation" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskStatus" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskStatus" ref="false" />
      </containers>
      <file name="8f9079cd-50c6-e40b-a314-e015487f59ec" />
    </api>
    <api id="F:System.Threading.Tasks.TaskStatus.WaitingForChildrenToComplete">
      <topicdata group="api" notopic="" />
      <apidata name="WaitingForChildrenToComplete" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskStatus" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskStatus" ref="false" />
      </containers>
      <file name="35684f18-166e-a87b-51df-33a0f1410b37" />
    </api>
    <api id="F:System.Threading.Tasks.TaskStatus.WaitingToRun">
      <topicdata group="api" notopic="" />
      <apidata name="WaitingToRun" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskStatus" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.TaskStatus" ref="false" />
      </containers>
      <file name="a4f0a851-119d-6a8a-fc9f-a7e98820221f" />
    </api>
    <api id="T:System.Threading.Tasks.UnobservedTaskExceptionEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Threading.Tasks.UnobservedTaskExceptionEventArgs" />
      <apidata name="UnobservedTaskExceptionEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
      </containers>
      <file name="a3cd672e-c430-e6c4-b090-9135a8388a65" />
    </api>
    <api id="AllMembers.T:System.Threading.Tasks.UnobservedTaskExceptionEventArgs">
      <topicdata name="UnobservedTaskExceptionEventArgs" group="list" subgroup="members" typeTopicId="T:System.Threading.Tasks.UnobservedTaskExceptionEventArgs" />
      <apidata name="UnobservedTaskExceptionEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.#ctor(System.AggregateException)" />
        <element api="P:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Exception" />
        <element api="P:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Observed" />
        <element api="M:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.SetObserved" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.UnobservedTaskExceptionEventArgs" />
      </containers>
      <file name="b918a41f-9059-576c-601e-e0e718119f67" />
    </api>
    <api id="Methods.T:System.Threading.Tasks.UnobservedTaskExceptionEventArgs">
      <topicdata name="UnobservedTaskExceptionEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Threading.Tasks.UnobservedTaskExceptionEventArgs" />
      <apidata name="UnobservedTaskExceptionEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.SetObserved" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.UnobservedTaskExceptionEventArgs" />
      </containers>
      <file name="85e26ed3-cbf5-c936-0e74-b814cc97a620" />
    </api>
    <api id="Properties.T:System.Threading.Tasks.UnobservedTaskExceptionEventArgs">
      <topicdata name="UnobservedTaskExceptionEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Threading.Tasks.UnobservedTaskExceptionEventArgs" />
      <apidata name="UnobservedTaskExceptionEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Exception" />
        <element api="P:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Observed" />
      </elements>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.UnobservedTaskExceptionEventArgs" />
      </containers>
      <file name="cc0e88ba-a746-a9c6-449b-73812a95d460" />
    </api>
    <api id="M:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.#ctor(System.AggregateException)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="exception">
          <type api="T:System.AggregateException" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.UnobservedTaskExceptionEventArgs" ref="true" />
      </containers>
      <file name="5d5488b8-a1b1-a46c-c922-2175c4884a73" />
    </api>
    <api id="P:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Exception">
      <topicdata group="api" />
      <apidata name="Exception" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Exception" />
      <returns>
        <type api="T:System.AggregateException" ref="true" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.UnobservedTaskExceptionEventArgs" ref="true" />
      </containers>
      <file name="ba3e4858-e5f0-e04d-fe5b-2f41fa34806a" />
    </api>
    <api id="P:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Observed">
      <topicdata group="api" />
      <apidata name="Observed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Observed" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.UnobservedTaskExceptionEventArgs" ref="true" />
      </containers>
      <file name="58117f95-47b9-ee20-22a9-2ed6b0fbf4fa" />
    </api>
    <api id="M:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.SetObserved">
      <topicdata group="api" />
      <apidata name="SetObserved" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Threading.Tasks" />
        <type api="T:System.Threading.Tasks.UnobservedTaskExceptionEventArgs" ref="true" />
      </containers>
      <file name="75b8570e-3c00-7b0f-da64-7503676302aa" />
    </api>
  </apis>
</reflection>