<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="Microsoft.VisualC.STLCLR">
      <assemblydata version="2.0.0.0" culture="" key="002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.VisualC.STLCLR</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>STLCLR cross assembly library</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTrademarkAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>STLCLR</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:Microsoft.VisualC.StlClr">
      <topicdata group="api" />
      <apidata name="Microsoft.VisualC.StlClr" group="namespace" />
      <elements>
        <element api="T:Microsoft.VisualC.StlClr.IDeque`1" />
        <element api="T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1" />
        <element api="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" />
        <element api="T:Microsoft.VisualC.StlClr.UnaryDelegate`2" />
        <element api="T:Microsoft.VisualC.StlClr.BinaryDelegate`3" />
        <element api="T:Microsoft.VisualC.StlClr.IList`1" />
        <element api="T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1" />
        <element api="T:Microsoft.VisualC.StlClr.ListEnumerator`1" />
        <element api="T:Microsoft.VisualC.StlClr.IQueue`2" />
        <element api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" />
        <element api="T:Microsoft.VisualC.StlClr.IStack`2" />
        <element api="T:Microsoft.VisualC.StlClr.GenericPair`2" />
        <element api="T:Microsoft.VisualC.StlClr.IVector`1" />
        <element api="T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1" />
        <element api="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" />
        <element api="T:Microsoft.VisualC.StlClr.IHash`2" />
        <element api="T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2" />
        <element api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" />
        <element api="T:Microsoft.VisualC.StlClr.ITree`2" />
        <element api="T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2" />
        <element api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" />
      </elements>
      <file name="1c622a1c-bb46-5f0f-cb9c-12c28d92e515" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.BinaryDelegate`3">
      <topicdata group="api" />
      <apidata name="BinaryDelegate" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TArg1" />
        <template name="TArg2" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="A_0">
          <template name="TArg1" index="0" api="T:Microsoft.VisualC.StlClr.BinaryDelegate`3" />
        </parameter>
        <parameter name="A_1">
          <template name="TArg2" index="1" api="T:Microsoft.VisualC.StlClr.BinaryDelegate`3" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="2" api="T:Microsoft.VisualC.StlClr.BinaryDelegate`3" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="30ebf8b6-8514-a96c-f646-f59bf93ea6e0" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.DequeEnumerator`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.DequeEnumerator`1" />
      <apidata name="DequeEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="06826e3e-2348-883e-dceb-dffb25b5c116" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.DequeEnumerator`1">
      <topicdata name="DequeEnumerator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" />
      <apidata name="DequeEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.#ctor(Microsoft.VisualC.StlClr.IDeque{`0},System.Int32)" />
        <element api="P:Microsoft.VisualC.StlClr.DequeEnumerator`1.Current" />
        <element api="Overload:Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose">
          <element api="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose" />
          <element api="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose(System.Boolean)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" />
      </containers>
      <file name="6288b41f-b470-eaca-aadd-ebb0c8e747c8" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.DequeEnumerator`1">
      <topicdata name="DequeEnumerator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" />
      <apidata name="DequeEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose">
          <element api="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose" />
          <element api="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose(System.Boolean)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" />
      </containers>
      <file name="a6e4f8cd-78bd-e431-eea2-7c89c90c870b" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.DequeEnumerator`1">
      <topicdata name="DequeEnumerator" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" />
      <apidata name="DequeEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.DequeEnumerator`1.Current" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" />
      </containers>
      <file name="fd8bd8e4-d69b-3a87-3f44-47d8b0c8421f" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.DequeEnumerator`1" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose" />
        <element api="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" ref="true" />
      </containers>
      <file name="0cf1c5ed-4aee-9696-9524-7afec91689f5" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.#ctor(Microsoft.VisualC.StlClr.IDeque{`0},System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="_Cont">
          <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_First">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" ref="true" />
      </containers>
      <file name="5938dd2b-a514-24e9-3734-ab0e7eb21534" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.DequeEnumerator`1.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Current" />
      <setter name="set_Current" />
      <returns>
        <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IEnumerator`1.Current">
          <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" ref="true" />
      </containers>
      <file name="188653dd-ff7a-f061-a2ed-64065f70684e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose" />
      <proceduredata virtual="true" final="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" ref="true" />
      </containers>
      <file name="2cb44c6a-af77-6315-3ff7-f45293570031" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:Microsoft.VisualC.StlClr.DequeEnumerator`1.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="A_0">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" ref="true" />
      </containers>
      <file name="8c5ef224-e85a-fb19-e61f-ed93d990f09f" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.MoveNext">
          <type api="T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerator.MoveNext">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" ref="true" />
      </containers>
      <file name="5f3d5388-e83b-3c38-2aa6-3e53bba4a260" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.DequeEnumerator`1.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.Reset">
          <type api="T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <implements>
        <member api="M:System.Collections.IEnumerator.Reset">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" ref="true" />
      </containers>
      <file name="0241b829-39da-bfd6-4fe4-c1102df9444e" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1" />
      <apidata name="DequeEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Microsoft.VisualC.StlClr.DequeEnumerator`1" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="eb6b5cdf-1558-e267-5b41-7e774292b6c1" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1">
      <topicdata name="DequeEnumeratorBase" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1" />
      <apidata name="DequeEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.#ctor(Microsoft.VisualC.StlClr.IDeque{`0},System.Int32)" />
        <element api="P:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.Current" />
        <element api="M:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1" />
      </containers>
      <file name="bb89f4f2-f68b-ec58-4c42-b36ce5e2ade4" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1">
      <topicdata name="DequeEnumeratorBase" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1" />
      <apidata name="DequeEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1" />
      </containers>
      <file name="dfd77d6a-e196-e287-fb46-acd84b90d09c" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1">
      <topicdata name="DequeEnumeratorBase" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1" />
      <apidata name="DequeEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.Current" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1" />
      </containers>
      <file name="85e81e44-ba57-9efe-0734-5c0e9068dfc2" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.#ctor(Microsoft.VisualC.StlClr.IDeque{`0},System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="_Cont">
          <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_First">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1" ref="true" />
      </containers>
      <file name="0ce49f7b-144b-d324-7cea-1167f3ff2411" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Current" />
      <setter name="set_Current" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IEnumerator.Current">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1" ref="true" />
      </containers>
      <file name="99f71003-c3a6-40e6-cc40-e7af29d29ff3" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerator.MoveNext">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1" ref="true" />
      </containers>
      <file name="75663694-bfcc-66c7-7ba0-0fe5a908819b" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:System.Collections.IEnumerator.Reset">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.DequeEnumeratorBase`1" ref="true" />
      </containers>
      <file name="43534edf-df97-09fa-0295-5e048b428ab2" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.GenericPair`2">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.GenericPair`2" />
      <apidata name="GenericPair" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TValue1" />
        <template name="TValue2" />
      </templates>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="c72364c1-f676-6c58-03c9-1608359b0f27" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.GenericPair`2">
      <topicdata name="GenericPair" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.GenericPair`2" />
      <apidata name="GenericPair" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor" />
      <templates>
        <template name="TValue1" />
        <template name="TValue2" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.GenericPair`2.#ctor">
          <element api="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor" />
          <element api="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor(`0)" />
          <element api="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor(Microsoft.VisualC.StlClr.GenericPair{`0,`1}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
          <element api="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor(System.Collections.Generic.KeyValuePair{`0,`1}@)" />
          <element api="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor(`0,`1)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.GenericPair`2.Equals(System.Object)" />
        <element api="F:Microsoft.VisualC.StlClr.GenericPair`2.first" />
        <element api="M:Microsoft.VisualC.StlClr.GenericPair`2.op_Assign(Microsoft.VisualC.StlClr.GenericPair{`0,`1}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="F:Microsoft.VisualC.StlClr.GenericPair`2.second" />
        <element api="M:Microsoft.VisualC.StlClr.GenericPair`2.swap(Microsoft.VisualC.StlClr.GenericPair{`0,`1}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" />
      </containers>
      <file name="04553aa8-eff5-1ea2-dfac-445c61c15ef8" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.GenericPair`2">
      <topicdata name="GenericPair" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.GenericPair`2" />
      <apidata name="GenericPair" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor" />
      <templates>
        <template name="TValue1" />
        <template name="TValue2" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.GenericPair`2.Equals(System.Object)" />
        <element api="M:Microsoft.VisualC.StlClr.GenericPair`2.swap(Microsoft.VisualC.StlClr.GenericPair{`0,`1}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" />
      </containers>
      <file name="e808c8ed-542f-340d-16bb-653427113299" />
    </api>
    <api id="Operators.T:Microsoft.VisualC.StlClr.GenericPair`2">
      <topicdata name="GenericPair" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:Microsoft.VisualC.StlClr.GenericPair`2" />
      <apidata name="GenericPair" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor" />
      <templates>
        <template name="TValue1" />
        <template name="TValue2" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.GenericPair`2.op_Assign(Microsoft.VisualC.StlClr.GenericPair{`0,`1}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" />
      </containers>
      <file name="19b6a660-a2fc-4c3c-0823-e35137a710ca" />
    </api>
    <api id="Fields.T:Microsoft.VisualC.StlClr.GenericPair`2">
      <topicdata name="GenericPair" group="list" subgroup="Fields" typeTopicId="T:Microsoft.VisualC.StlClr.GenericPair`2" />
      <apidata name="GenericPair" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor" />
      <templates>
        <template name="TValue1" />
        <template name="TValue2" />
      </templates>
      <elements>
        <element api="F:Microsoft.VisualC.StlClr.GenericPair`2.first" />
        <element api="F:Microsoft.VisualC.StlClr.GenericPair`2.second" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" />
      </containers>
      <file name="df54caab-c278-433a-b748-45b5847bd994" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.GenericPair`2.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.GenericPair`2" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor" />
        <element api="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor(Microsoft.VisualC.StlClr.GenericPair{`0,`1}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)" />
        <element api="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor(System.Collections.Generic.KeyValuePair{`0,`1}@)" />
        <element api="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor(`0,`1)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true" />
      </containers>
      <file name="23d4ea65-e472-a86f-e715-7aad4c5ede48" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.GenericPair`2.#ctor" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true" />
      </containers>
      <file name="fffe5037-37b4-6c96-35e0-6ecc38ecfd26" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor(Microsoft.VisualC.StlClr.GenericPair{`0,`1}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.GenericPair`2.#ctor" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true">
            <specialization>
              <template name="TValue1" index="0" api="T:Microsoft.VisualC.StlClr.GenericPair`2" />
              <template name="TValue2" index="1" api="T:Microsoft.VisualC.StlClr.GenericPair`2" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true" />
      </containers>
      <file name="57aa02d7-cd74-cb9b-6f5c-550f02c3c967" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor(System.Collections.Generic.KeyValuePair{`0,`1}@)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.GenericPair`2.#ctor" />
      <parameters>
        <parameter name="_Right">
          <referenceTo>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <template name="TValue1" index="0" api="T:Microsoft.VisualC.StlClr.GenericPair`2" />
                <template name="TValue2" index="1" api="T:Microsoft.VisualC.StlClr.GenericPair`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true" />
      </containers>
      <file name="3b5a111d-f0e2-0a98-cb53-3e154760696e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor(`0)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.GenericPair`2.#ctor" />
      <parameters>
        <parameter name="_Val1">
          <template name="TValue1" index="0" api="T:Microsoft.VisualC.StlClr.GenericPair`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true" />
      </containers>
      <file name="cb4d085b-ddbe-b933-890c-7ad68927a99b" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor(`0,`1)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.VisualC.StlClr.GenericPair`2.#ctor" />
      <parameters>
        <parameter name="_Val1">
          <template name="TValue1" index="0" api="T:Microsoft.VisualC.StlClr.GenericPair`2" />
        </parameter>
        <parameter name="_Val2">
          <template name="TValue2" index="1" api="T:Microsoft.VisualC.StlClr.GenericPair`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true" />
      </containers>
      <file name="174bd447-cd01-0153-9325-bb16b6fd188f" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.GenericPair`2.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="_Right_arg">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true" />
      </containers>
      <file name="18bdf3ff-101a-6eca-e058-651baa137515" />
    </api>
    <api id="F:Microsoft.VisualC.StlClr.GenericPair`2.first">
      <topicdata group="api" />
      <apidata name="first" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <template name="TValue1" index="0" api="T:Microsoft.VisualC.StlClr.GenericPair`2" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true" />
      </containers>
      <file name="2fbb6e20-5023-fd1f-f81b-2a573951fc5d" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.GenericPair`2.op_Assign(Microsoft.VisualC.StlClr.GenericPair{`0,`1}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="Assign" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true">
            <specialization>
              <template name="TValue1" index="0" api="T:Microsoft.VisualC.StlClr.GenericPair`2" />
              <template name="TValue2" index="1" api="T:Microsoft.VisualC.StlClr.GenericPair`2" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true">
          <specialization>
            <template name="TValue1" index="0" api="T:Microsoft.VisualC.StlClr.GenericPair`2" />
            <template name="TValue2" index="1" api="T:Microsoft.VisualC.StlClr.GenericPair`2" />
          </specialization>
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true" />
      </containers>
      <file name="72e49347-f9b1-844e-9c39-6f7ce41e0d1d" />
    </api>
    <api id="F:Microsoft.VisualC.StlClr.GenericPair`2.second">
      <topicdata group="api" />
      <apidata name="second" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <template name="TValue2" index="1" api="T:Microsoft.VisualC.StlClr.GenericPair`2" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true" />
      </containers>
      <file name="ec44cdca-e4ec-d723-d802-f5596d08d841" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.GenericPair`2.swap(Microsoft.VisualC.StlClr.GenericPair{`0,`1}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)">
      <topicdata group="api" />
      <apidata name="swap" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true">
            <specialization>
              <template name="TValue1" index="0" api="T:Microsoft.VisualC.StlClr.GenericPair`2" />
              <template name="TValue2" index="1" api="T:Microsoft.VisualC.StlClr.GenericPair`2" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true" />
      </containers>
      <file name="8fa65731-d558-8787-c57a-1cd356e1197a" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.HashEnumerator`2">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.HashEnumerator`2" />
      <apidata name="HashEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" />
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="9c891c9f-326b-aa91-dfa6-9a72434eeb96" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.HashEnumerator`2">
      <topicdata name="HashEnumerator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.HashEnumerator`2" />
      <apidata name="HashEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.HashEnumerator`2.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`1})" />
        <element api="P:Microsoft.VisualC.StlClr.HashEnumerator`2.Current" />
        <element api="Overload:Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose">
          <element api="M:Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose" />
          <element api="M:Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose(System.Boolean)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.HashEnumerator`2.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.HashEnumerator`2.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" />
      </containers>
      <file name="a2c61204-8027-5421-5ed8-2e33e594e2fb" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.HashEnumerator`2">
      <topicdata name="HashEnumerator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.HashEnumerator`2" />
      <apidata name="HashEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose">
          <element api="M:Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose" />
          <element api="M:Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose(System.Boolean)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.HashEnumerator`2.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.HashEnumerator`2.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" />
      </containers>
      <file name="cd9e8465-d868-0026-947f-2b41c955cc79" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.HashEnumerator`2">
      <topicdata name="HashEnumerator" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.HashEnumerator`2" />
      <apidata name="HashEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.HashEnumerator`2.Current" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" />
      </containers>
      <file name="40dc2dd3-29f0-1712-93bf-9cbaf4a56637" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.HashEnumerator`2" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose" />
        <element api="M:Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" ref="true" />
      </containers>
      <file name="09b07fd5-d70d-d371-19ea-0d0d133bebfe" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.HashEnumerator`2.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`1})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="_First">
          <type api="T:Microsoft.VisualC.StlClr.Generic.INode`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" ref="true" />
      </containers>
      <file name="2d684003-2449-5b29-bf40-6b1cbca50d16" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.HashEnumerator`2.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Current" />
      <setter name="set_Current" />
      <returns>
        <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IEnumerator`1.Current">
          <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" ref="true" />
      </containers>
      <file name="d3225d87-8131-7e40-8427-02f148bdacae" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose" />
      <proceduredata virtual="true" final="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" ref="true" />
      </containers>
      <file name="d5999d2d-dfb7-b7e9-2c2e-5e3cea9c5d91" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:Microsoft.VisualC.StlClr.HashEnumerator`2.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="A_0">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" ref="true" />
      </containers>
      <file name="b447fde0-7d01-36de-39e6-528a439d2014" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.HashEnumerator`2.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.VisualC.StlClr.HashEnumeratorBase`2.MoveNext">
          <type api="T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" />
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" />
            </specialization>
          </type>
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerator.MoveNext">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" ref="true" />
      </containers>
      <file name="ca1480bb-5887-27c0-99c5-ac17faac02a3" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.HashEnumerator`2.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.VisualC.StlClr.HashEnumeratorBase`2.Reset">
          <type api="T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" />
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" />
            </specialization>
          </type>
        </member>
      </overrides>
      <implements>
        <member api="M:System.Collections.IEnumerator.Reset">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" ref="true" />
      </containers>
      <file name="b89ddb23-f827-2292-cb2a-3d00467d52be" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2" />
      <apidata name="HashEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Microsoft.VisualC.StlClr.HashEnumerator`2" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="c7938e2b-31c1-5650-3c2b-020815f2daf4" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2">
      <topicdata name="HashEnumeratorBase" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2" />
      <apidata name="HashEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.HashEnumeratorBase`2.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`1})" />
        <element api="P:Microsoft.VisualC.StlClr.HashEnumeratorBase`2.Current" />
        <element api="M:Microsoft.VisualC.StlClr.HashEnumeratorBase`2.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.HashEnumeratorBase`2.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2" />
      </containers>
      <file name="f71cd9bb-4878-1afb-fa42-7a85334ff8d6" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2">
      <topicdata name="HashEnumeratorBase" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2" />
      <apidata name="HashEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.HashEnumeratorBase`2.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.HashEnumeratorBase`2.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2" />
      </containers>
      <file name="de68ae73-cbf6-a8b7-7dcf-82c2ee55d619" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2">
      <topicdata name="HashEnumeratorBase" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2" />
      <apidata name="HashEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.HashEnumeratorBase`2.Current" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2" />
      </containers>
      <file name="990c288b-61f3-fb60-e01b-5047e3075e1d" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.HashEnumeratorBase`2.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`1})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="_First">
          <type api="T:Microsoft.VisualC.StlClr.Generic.INode`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2" ref="true" />
      </containers>
      <file name="e0c681d3-ea18-a3e9-2265-86ad1c5d3220" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.HashEnumeratorBase`2.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Current" />
      <setter name="set_Current" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IEnumerator.Current">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2" ref="true" />
      </containers>
      <file name="4d656fac-e4f9-845d-301f-f6369cc0fa6a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.HashEnumeratorBase`2.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerator.MoveNext">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2" ref="true" />
      </containers>
      <file name="748d1ed4-4d1a-9573-877f-9605b0ad9217" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.HashEnumeratorBase`2.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:System.Collections.IEnumerator.Reset">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.HashEnumeratorBase`2" ref="true" />
      </containers>
      <file name="00f4ad2b-4281-a3c2-26a4-a63297c6fdaf" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.IDeque`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IDeque`1" />
      <apidata name="IDeque" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
          </specialization>
        </type>
        <type api="T:System.ICloneable" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="74f0f084-1025-062b-fc11-06c859507e76" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.IDeque`1">
      <topicdata name="IDeque" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.IDeque`1" />
      <apidata name="IDeque" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.IDeque`1.assign">
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.assign(System.Collections.IEnumerable)" />
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.assign(System.Int32,`0)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.at(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.back" />
        <element api="P:Microsoft.VisualC.StlClr.IDeque`1.back_item" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.begin_bias" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.clear" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.empty" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.end_bias" />
        <element api="Overload:Microsoft.VisualC.StlClr.IDeque`1.erase">
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.front" />
        <element api="P:Microsoft.VisualC.StlClr.IDeque`1.front_item" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.get_generation" />
        <element api="Overload:Microsoft.VisualC.StlClr.IDeque`1.insert">
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)" />
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)" />
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)" />
        </element>
        <element api="P:Microsoft.VisualC.StlClr.IDeque`1.Item(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.pop_back" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.pop_front" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.push_back(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.push_front(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
        <element api="Overload:Microsoft.VisualC.StlClr.IDeque`1.resize">
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32)" />
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32,`0)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.size" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.swap(Microsoft.VisualC.StlClr.IDeque{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.at_bias(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.valid_bias(System.Int32)" />
        <element api="M:System.ICloneable.Clone" />
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ICollection.Count" />
        <element api="P:System.Collections.ICollection.IsSynchronized" />
        <element api="P:System.Collections.ICollection.SyncRoot" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" />
      </containers>
      <file name="92a7cf9f-46d5-ef5e-1fbf-6f811b60d7c4" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.IDeque`1">
      <topicdata name="IDeque" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.IDeque`1" />
      <apidata name="IDeque" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.IDeque`1.assign">
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.assign(System.Collections.IEnumerable)" />
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.assign(System.Int32,`0)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.at(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.back" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.begin_bias" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.clear" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.empty" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.end_bias" />
        <element api="Overload:Microsoft.VisualC.StlClr.IDeque`1.erase">
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.front" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.get_generation" />
        <element api="Overload:Microsoft.VisualC.StlClr.IDeque`1.insert">
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)" />
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)" />
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.pop_back" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.pop_front" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.push_back(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.push_front(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
        <element api="Overload:Microsoft.VisualC.StlClr.IDeque`1.resize">
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32)" />
          <element api="M:Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32,`0)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.size" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.swap(Microsoft.VisualC.StlClr.IDeque{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.at_bias(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.valid_bias(System.Int32)" />
        <element api="M:System.ICloneable.Clone" />
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" />
      </containers>
      <file name="6882100d-96bd-f30e-5ae0-c7b016318040" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.IDeque`1">
      <topicdata name="IDeque" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.IDeque`1" />
      <apidata name="IDeque" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.IDeque`1.back_item" />
        <element api="P:Microsoft.VisualC.StlClr.IDeque`1.front_item" />
        <element api="P:Microsoft.VisualC.StlClr.IDeque`1.Item(System.Int32)" />
        <element api="P:System.Collections.ICollection.Count" />
        <element api="P:System.Collections.ICollection.IsSynchronized" />
        <element api="P:System.Collections.ICollection.SyncRoot" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" />
      </containers>
      <file name="c29b499c-dc84-ddbd-8a10-a42261cd0ab0" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.IDeque`1.assign">
      <topicdata name="assign" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IDeque`1" />
      <apidata name="assign" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.assign(System.Collections.IEnumerable)" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.assign(System.Int32,`0)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="7f39e534-3088-49f9-b5a8-70c21749c48b" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.IDeque`1.erase">
      <topicdata name="erase" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IDeque`1" />
      <apidata name="erase" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="8a61049e-c952-afa2-f832-b654696f8015" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.IDeque`1.insert">
      <topicdata name="insert" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IDeque`1" />
      <apidata name="insert" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="0e0d6be1-157c-e80b-a8a4-65086ae26cc4" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.IDeque`1.resize">
      <topicdata name="resize" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IDeque`1" />
      <apidata name="resize" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32,`0)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="e4a337fe-c162-62db-8cac-b4edf819c368" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="assign" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IDeque`1.assign" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_First">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_Last">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="7a8c07c8-3023-ab49-34fb-7dc3bb796403" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.assign(System.Collections.IEnumerable)">
      <topicdata group="api" />
      <apidata name="assign" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IDeque`1.assign" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="29c26c05-a3d1-8d2a-30dd-5218943f0f98" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.assign(System.Int32,`0)">
      <topicdata group="api" />
      <apidata name="assign" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IDeque`1.assign" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="d5ddf21b-3309-b105-dd40-867f438cef02" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.at(System.Int32)">
      <topicdata group="api" />
      <apidata name="at" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Pos">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="ebef8918-861a-1054-0216-2ce81d1110a3" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.back">
      <topicdata group="api" />
      <apidata name="back" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="d2eb8378-9c19-62cd-443c-fd3096301ba8" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.IDeque`1.back_item">
      <topicdata group="api" />
      <apidata name="back_item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_back_item" />
      <setter name="set_back_item" />
      <returns>
        <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="e027d4ba-f641-c906-b7ab-90f56bc5344a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="begin" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="1a2fc2a6-7292-4e62-3d52-96962c41c621" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.begin_bias">
      <topicdata group="api" />
      <apidata name="begin_bias" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="3bbb0df2-ca5f-73b6-33d8-dd4e7711d126" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.clear">
      <topicdata group="api" />
      <apidata name="clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="3b19a917-3a11-4f02-0bbe-a69d73833cb6" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.empty">
      <topicdata group="api" />
      <apidata name="empty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="9bd85b79-f63a-bf88-f736-bbeb5b425d0e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="end" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="3296a670-e64f-ac11-7e06-99ef25642c07" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.end_bias">
      <topicdata group="api" />
      <apidata name="end_bias" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="2f1de821-67cd-f582-bf05-98d1a5d27a7c" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
      <topicdata group="api" />
      <apidata name="erase" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IDeque`1.erase" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="cc40fc08-2274-fc7e-121c-850aeeec7405" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
      <topicdata group="api" />
      <apidata name="erase" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IDeque`1.erase" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_First_iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Last_iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="313e706d-e62d-8c61-e803-deec26c912de" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.front">
      <topicdata group="api" />
      <apidata name="front" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="94d86de6-a4a7-249f-6246-2f8dcbb67835" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.IDeque`1.front_item">
      <topicdata group="api" />
      <apidata name="front_item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_front_item" />
      <setter name="set_front_item" />
      <returns>
        <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="29bbc18f-aa63-0c4a-f30c-16c5e6b333af" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.get_generation">
      <topicdata group="api" />
      <apidata name="get_generation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.UInt32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsLong" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="23b52af0-50a4-5711-5b26-86073d8b3c4c" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IDeque`1.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="c09486a4-6512-24a0-fd42-63b2af017db7" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IDeque`1.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_First">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_Last">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="1338e79e-1148-22d6-cdb5-62b46773d3f5" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IDeque`1.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Where_iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Right">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="ec32d300-7c7b-0f0d-d718-ed06053bb5b5" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IDeque`1.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="1a328b8f-59a4-0394-ddc6-ab15d745f58d" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.IDeque`1.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="_Pos">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="edbee7ba-b5d0-68e8-dfc8-af576e491137" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.pop_back">
      <topicdata group="api" />
      <apidata name="pop_back" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="61932f42-3723-6c7d-9356-777c4196b0b7" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.pop_front">
      <topicdata group="api" />
      <apidata name="pop_front" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="bebacb74-f513-29e3-2dd2-01ce4ab4d3dc" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.push_back(`0)">
      <topicdata group="api" />
      <apidata name="push_back" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="674d51f2-37e2-c051-97b1-b1ac700876f5" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.push_front(`0)">
      <topicdata group="api" />
      <apidata name="push_front" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="d564667a-f902-a85e-d016-c06be42defb1" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="rbegin" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="6ce1c4bb-baaa-e02d-32da-9e9008733a84" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="rend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="50e4fcaf-1115-607b-9eb7-ea9987add17f" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32)">
      <topicdata group="api" />
      <apidata name="resize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IDeque`1.resize" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Newsize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="5b698348-0f7c-cce8-4402-758eccb64d92" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.resize(System.Int32,`0)">
      <topicdata group="api" />
      <apidata name="resize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IDeque`1.resize" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Newsize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="c05a40d4-1f4b-f839-fc82-3c5563a94c8c" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.size">
      <topicdata group="api" />
      <apidata name="size" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="bc177cfc-d549-e464-582c-58c1344e96b9" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IDeque`1.swap(Microsoft.VisualC.StlClr.IDeque{`0})">
      <topicdata group="api" />
      <apidata name="swap" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="A_0">
          <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IDeque`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IDeque`1" ref="true" />
      </containers>
      <file name="9d8ce5d2-3441-3f7c-56d8-857d199ab5cf" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.IHash`2">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IHash`2" />
      <apidata name="IHash" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1" ref="true">
          <specialization>
            <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
          </specialization>
        </type>
        <type api="T:System.ICloneable" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="db47bc8b-e8fa-5d14-8ece-b18e8b1d57ef" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.IHash`2">
      <topicdata name="IHash" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.IHash`2" />
      <apidata name="IHash" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.bucket_count" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.clear" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.count(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.empty" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)" />
        <element api="Overload:Microsoft.VisualC.StlClr.IHash`2.erase">
          <element api="M:Microsoft.VisualC.StlClr.IHash`2.erase(`0)" />
          <element api="M:Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)" />
          <element api="M:Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.hash_delegate" />
        <element api="Overload:Microsoft.VisualC.StlClr.IHash`2.insert">
          <element api="M:Microsoft.VisualC.StlClr.IHash`2.insert(System.Collections.IEnumerable)" />
          <element api="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)" />
          <element api="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator{`1},Microsoft.VisualC.StlClr.Generic.IInputIterator{`1})" />
          <element api="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,`1)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.key_comp" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.load_factor" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
        <element api="Overload:Microsoft.VisualC.StlClr.IHash`2.max_load_factor">
          <element api="M:Microsoft.VisualC.StlClr.IHash`2.max_load_factor" />
          <element api="M:Microsoft.VisualC.StlClr.IHash`2.max_load_factor(System.Single)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.rehash(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.size" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.swap(Microsoft.VisualC.StlClr.IHash{`0,`1})" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.value_comp" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1.get_generation" />
        <element api="M:System.ICloneable.Clone" />
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ICollection.Count" />
        <element api="P:System.Collections.ICollection.IsSynchronized" />
        <element api="P:System.Collections.ICollection.SyncRoot" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" />
      </containers>
      <file name="61f4253b-cda2-4323-5cb5-f648911ba9bd" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.IHash`2">
      <topicdata name="IHash" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.IHash`2" />
      <apidata name="IHash" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.bucket_count" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.clear" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.count(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.empty" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)" />
        <element api="Overload:Microsoft.VisualC.StlClr.IHash`2.erase">
          <element api="M:Microsoft.VisualC.StlClr.IHash`2.erase(`0)" />
          <element api="M:Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)" />
          <element api="M:Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.hash_delegate" />
        <element api="Overload:Microsoft.VisualC.StlClr.IHash`2.insert">
          <element api="M:Microsoft.VisualC.StlClr.IHash`2.insert(System.Collections.IEnumerable)" />
          <element api="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)" />
          <element api="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator{`1},Microsoft.VisualC.StlClr.Generic.IInputIterator{`1})" />
          <element api="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,`1)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.key_comp" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.load_factor" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
        <element api="Overload:Microsoft.VisualC.StlClr.IHash`2.max_load_factor">
          <element api="M:Microsoft.VisualC.StlClr.IHash`2.max_load_factor" />
          <element api="M:Microsoft.VisualC.StlClr.IHash`2.max_load_factor(System.Single)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.rehash(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.size" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.swap(Microsoft.VisualC.StlClr.IHash{`0,`1})" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.value_comp" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1.get_generation" />
        <element api="M:System.ICloneable.Clone" />
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" />
      </containers>
      <file name="cdda1310-efdd-44ff-866d-5413d34311f5" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.IHash`2">
      <topicdata name="IHash" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.IHash`2" />
      <apidata name="IHash" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:System.Collections.ICollection.Count" />
        <element api="P:System.Collections.ICollection.IsSynchronized" />
        <element api="P:System.Collections.ICollection.SyncRoot" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" />
      </containers>
      <file name="60ecf23c-22e5-fba6-3e8e-b82863aed486" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.IHash`2.erase">
      <topicdata name="erase" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IHash`2" />
      <apidata name="erase" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.erase(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="c295f5d1-2339-ab2f-938e-344f69e099ec" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.IHash`2.insert">
      <topicdata name="insert" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IHash`2" />
      <apidata name="insert" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.insert(System.Collections.IEnumerable)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator{`1},Microsoft.VisualC.StlClr.Generic.IInputIterator{`1})" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,`1)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="a5b2b997-0787-bada-1166-d46680041c0b" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.IHash`2.max_load_factor">
      <topicdata name="max_load_factor" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IHash`2" />
      <apidata name="max_load_factor" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.max_load_factor" />
        <element api="M:Microsoft.VisualC.StlClr.IHash`2.max_load_factor(System.Single)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="3592e8ab-be35-b931-ebca-ed6dc5f8ab9b" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)">
      <topicdata group="api" />
      <apidata name="begin" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="ca5aa478-8e52-a46d-5e0e-b3df9d560eba" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.bucket_count">
      <topicdata group="api" />
      <apidata name="bucket_count" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="14695422-eb53-a2fd-6f65-b45701f5b508" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.clear">
      <topicdata group="api" />
      <apidata name="clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="87fec31a-34ed-8fe3-866f-0490907ab235" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.count(`0)">
      <topicdata group="api" />
      <apidata name="count" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Keyval">
          <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.IHash`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="7f02835e-5708-8a2c-ba0d-7aebda98607e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.empty">
      <topicdata group="api" />
      <apidata name="empty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="a4731d86-ebaf-77d8-6d44-1bd8a7cb3277" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)">
      <topicdata group="api" />
      <apidata name="end" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="b98c4aa0-e10f-def3-e198-4d607d4474ec" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)">
      <topicdata group="api" />
      <apidata name="equal_range" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true">
              <specialization>
                <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
                  <specialization>
                    <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
                  </specialization>
                </type>
                <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
                  <specialization>
                    <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Keyval">
          <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.IHash`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="372a92d8-7f56-5dad-d9f8-a9711209b2d1" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)">
      <topicdata group="api" />
      <apidata name="erase" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IHash`2.erase" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="cc0d75ee-b4a9-ce2a-14c8-582f1b65d664" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)">
      <topicdata group="api" />
      <apidata name="erase" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IHash`2.erase" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_First_iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Last_iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="35dae68b-3348-ff45-1509-fd4c2eb0fda8" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.erase(`0)">
      <topicdata group="api" />
      <apidata name="erase" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IHash`2.erase" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Keyval">
          <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.IHash`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="e1ca2d56-51d6-f33b-dfdf-55b237ccc33a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)">
      <topicdata group="api" />
      <apidata name="find" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Keyval">
          <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.IHash`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="fbbb2db0-9439-54cf-5fd4-f90213f9edac" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.hash_delegate">
      <topicdata group="api" />
      <apidata name="hash_delegate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.UnaryDelegate`2" ref="true">
          <specialization>
            <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.IHash`2" />
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="d8c47aa6-fd72-060a-b967-871ceed622de" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,`1)">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IHash`2.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Val">
          <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="21827ff2-4b7e-8d9e-6513-2c63f45bde49" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator{`1},Microsoft.VisualC.StlClr.Generic.IInputIterator{`1})">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IHash`2.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_First">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_Last">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="c46a22fa-f360-e4f0-9c90-57aa25563809" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IHash`2.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true">
              <specialization>
                <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
                  <specialization>
                    <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
                  </specialization>
                </type>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Val">
          <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="82e37370-e8c5-09d2-cf32-79d9fd6fb51d" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.insert(System.Collections.IEnumerable)">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IHash`2.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="4e34c8ff-c393-d404-c882-8e451e917be7" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.key_comp">
      <topicdata group="api" />
      <apidata name="key_comp" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.BinaryDelegate`3" ref="true">
          <specialization>
            <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.IHash`2" />
            <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.IHash`2" />
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="32465eb9-7f78-6bba-0cc0-8157410f687b" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.load_factor">
      <topicdata group="api" />
      <apidata name="load_factor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="775e6a5e-73a6-65ec-5bad-143cfb6cf86d" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)">
      <topicdata group="api" />
      <apidata name="lower_bound" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Keyval">
          <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.IHash`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="50783ea8-c106-4de5-fec5-c92581ea6b0b" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.max_load_factor">
      <topicdata group="api" />
      <apidata name="max_load_factor" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IHash`2.max_load_factor" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="f9c3c91d-3ab9-ea40-77ad-26ec7bc0b634" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.max_load_factor(System.Single)">
      <topicdata group="api" />
      <apidata name="max_load_factor" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IHash`2.max_load_factor" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Newmax">
          <type api="T:System.Single" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="385c8671-2f36-3a9c-094d-db06dca27f80" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)">
      <topicdata group="api" />
      <apidata name="rbegin" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="608a84af-4d66-8713-9dff-6867c2bcec1a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.rehash(System.Int32)">
      <topicdata group="api" />
      <apidata name="rehash" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Buckets">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="49780216-2d0f-2ac9-e6c9-db9557624572" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)">
      <topicdata group="api" />
      <apidata name="rend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="17d9d77a-daca-ccf5-b294-5306dcb74936" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.size">
      <topicdata group="api" />
      <apidata name="size" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="a818c8f4-5649-fff7-b233-111eb1aa4420" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.swap(Microsoft.VisualC.StlClr.IHash{`0,`1})">
      <topicdata group="api" />
      <apidata name="swap" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.IHash`2" />
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="e422fe91-27b9-1487-69b0-9b21e8964f90" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)">
      <topicdata group="api" />
      <apidata name="upper_bound" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Keyval">
          <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.IHash`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="fb2aa217-549d-4e98-ceea-c0962d8e2e50" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IHash`2.value_comp">
      <topicdata group="api" />
      <apidata name="value_comp" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.BinaryDelegate`3" ref="true">
          <specialization>
            <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
            <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.IHash`2" />
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IHash`2" ref="true" />
      </containers>
      <file name="a0a56eaa-37c7-bab6-9be4-76352ebea2e0" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.IList`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IList`1" />
      <apidata name="IList" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
          </specialization>
        </type>
        <type api="T:System.ICloneable" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="4b35ffb5-42e8-849e-66ee-6c493408ab1b" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.IList`1">
      <topicdata name="IList" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.IList`1" />
      <apidata name="IList" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.IList`1.assign">
          <element api="M:Microsoft.VisualC.StlClr.IList`1.assign(System.Collections.IEnumerable)" />
          <element api="M:Microsoft.VisualC.StlClr.IList`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.IList`1.assign(System.Int32,`0)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IList`1.back" />
        <element api="P:Microsoft.VisualC.StlClr.IList`1.back_item" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.clear" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.empty" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)" />
        <element api="Overload:Microsoft.VisualC.StlClr.IList`1.erase">
          <element api="M:Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
          <element api="M:Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IList`1.front" />
        <element api="P:Microsoft.VisualC.StlClr.IList`1.front_item" />
        <element api="Overload:Microsoft.VisualC.StlClr.IList`1.insert">
          <element api="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)" />
          <element api="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)" />
          <element api="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IList`1.merge(Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.pop_back" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.pop_front" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.push_back(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.push_front(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.remove(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.remove_if(Microsoft.VisualC.StlClr.UnaryDelegate{`0,System.Boolean})" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)" />
        <element api="Overload:Microsoft.VisualC.StlClr.IList`1.resize">
          <element api="M:Microsoft.VisualC.StlClr.IList`1.resize(System.Int32)" />
          <element api="M:Microsoft.VisualC.StlClr.IList`1.resize(System.Int32,`0)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IList`1.reverse" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.size" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.sort(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})" />
        <element api="Overload:Microsoft.VisualC.StlClr.IList`1.splice">
          <element api="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
          <element api="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IList`1.swap(Microsoft.VisualC.StlClr.IList{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.unique(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1.get_generation" />
        <element api="M:System.ICloneable.Clone" />
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ICollection.Count" />
        <element api="P:System.Collections.ICollection.IsSynchronized" />
        <element api="P:System.Collections.ICollection.SyncRoot" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" />
      </containers>
      <file name="44e31527-4d83-5db8-f16a-1ff557c47eb9" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.IList`1">
      <topicdata name="IList" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.IList`1" />
      <apidata name="IList" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.IList`1.assign">
          <element api="M:Microsoft.VisualC.StlClr.IList`1.assign(System.Collections.IEnumerable)" />
          <element api="M:Microsoft.VisualC.StlClr.IList`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.IList`1.assign(System.Int32,`0)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IList`1.back" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.clear" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.empty" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)" />
        <element api="Overload:Microsoft.VisualC.StlClr.IList`1.erase">
          <element api="M:Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
          <element api="M:Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IList`1.front" />
        <element api="Overload:Microsoft.VisualC.StlClr.IList`1.insert">
          <element api="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)" />
          <element api="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)" />
          <element api="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IList`1.merge(Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.pop_back" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.pop_front" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.push_back(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.push_front(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.remove(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.remove_if(Microsoft.VisualC.StlClr.UnaryDelegate{`0,System.Boolean})" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)" />
        <element api="Overload:Microsoft.VisualC.StlClr.IList`1.resize">
          <element api="M:Microsoft.VisualC.StlClr.IList`1.resize(System.Int32)" />
          <element api="M:Microsoft.VisualC.StlClr.IList`1.resize(System.Int32,`0)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IList`1.reverse" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.size" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.sort(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})" />
        <element api="Overload:Microsoft.VisualC.StlClr.IList`1.splice">
          <element api="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
          <element api="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IList`1.swap(Microsoft.VisualC.StlClr.IList{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.unique(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1.get_generation" />
        <element api="M:System.ICloneable.Clone" />
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" />
      </containers>
      <file name="39b4ed8f-56d8-3340-424e-de4335a02487" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.IList`1">
      <topicdata name="IList" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.IList`1" />
      <apidata name="IList" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.IList`1.back_item" />
        <element api="P:Microsoft.VisualC.StlClr.IList`1.front_item" />
        <element api="P:System.Collections.ICollection.Count" />
        <element api="P:System.Collections.ICollection.IsSynchronized" />
        <element api="P:System.Collections.ICollection.SyncRoot" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" />
      </containers>
      <file name="68c997b3-d128-3bec-9d67-fa636c96487a" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.IList`1.assign">
      <topicdata name="assign" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IList`1" />
      <apidata name="assign" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IList`1.assign(System.Collections.IEnumerable)" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.assign(System.Int32,`0)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="1ef3f6f2-a0b8-ec21-59cc-ceedefcb79d6" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.IList`1.erase">
      <topicdata name="erase" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IList`1" />
      <apidata name="erase" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="3c851419-d317-c5f5-d3ac-77ec49b3feb6" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.IList`1.insert">
      <topicdata name="insert" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IList`1" />
      <apidata name="insert" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="76856448-e7a3-85c6-d434-37e1c70ce05a" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.IList`1.resize">
      <topicdata name="resize" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IList`1" />
      <apidata name="resize" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IList`1.resize(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.resize(System.Int32,`0)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="46713d4f-16e6-5b2a-4758-0e37605ca47a" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.IList`1.splice">
      <topicdata name="splice" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IList`1" />
      <apidata name="splice" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
        <element api="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="9109f089-d129-fbfa-822e-8ff2205d5a22" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="assign" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IList`1.assign" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_First">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_Last">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="a72aff55-303e-c102-4507-363679c86cf4" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.assign(System.Collections.IEnumerable)">
      <topicdata group="api" />
      <apidata name="assign" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IList`1.assign" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="675950c9-493a-281a-f196-ef39d8af50a1" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.assign(System.Int32,`0)">
      <topicdata group="api" />
      <apidata name="assign" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IList`1.assign" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="e6f6009c-c413-00f6-6b4b-e18d4da6945f" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.back">
      <topicdata group="api" />
      <apidata name="back" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="f4a9318f-b2fb-42fb-286e-3ccf1f0dcb55" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.IList`1.back_item">
      <topicdata group="api" />
      <apidata name="back_item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_back_item" />
      <setter name="set_back_item" />
      <returns>
        <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="b83a2f74-451d-348b-e09c-fa799c886721" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="begin" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="bf74d54e-efb9-bde5-5ea2-c530e22c677d" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.clear">
      <topicdata group="api" />
      <apidata name="clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="98a8fe5d-ff0f-bec3-51e1-9a85d185aa04" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.empty">
      <topicdata group="api" />
      <apidata name="empty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="6d1b5d1e-3a86-540b-397f-2a0fbff3401f" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="end" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="56bb138e-559e-e707-eec6-adcbaa9c56d2" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
      <topicdata group="api" />
      <apidata name="erase" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IList`1.erase" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="f55f3222-3f6f-1227-38b2-4bfcf2ad77ea" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
      <topicdata group="api" />
      <apidata name="erase" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IList`1.erase" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_First_iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Last_iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="6d4694af-89b5-8c8c-481a-3ee83f96fc30" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.front">
      <topicdata group="api" />
      <apidata name="front" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="bf2b672e-5de0-b5d2-0f30-597b9fb72ee9" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.IList`1.front_item">
      <topicdata group="api" />
      <apidata name="front_item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_front_item" />
      <setter name="set_front_item" />
      <returns>
        <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="4d5824cc-6ba8-737c-1595-0068281523c1" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IList`1.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="776b0dd6-d2f7-8d3c-eaca-3fa84c12f19a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IList`1.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_First">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_Last">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="ecf26f08-617d-110f-cacc-a2f4d4695719" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IList`1.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Where_iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Right">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="3e4791b2-0fff-1710-d475-63da6dc385c7" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IList`1.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="ff8527a3-5646-4ee1-a15b-40d19eb17d77" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.merge(Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})">
      <topicdata group="api" />
      <apidata name="merge" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_Pred">
          <type api="T:Microsoft.VisualC.StlClr.BinaryDelegate`3" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="2b59a903-1484-e732-28cf-4b0073485f6c" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.pop_back">
      <topicdata group="api" />
      <apidata name="pop_back" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="786b1947-8a88-fb70-fad9-6d4d47acfe81" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.pop_front">
      <topicdata group="api" />
      <apidata name="pop_front" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="33d26f6b-6751-078c-687a-2896b84af9b9" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.push_back(`0)">
      <topicdata group="api" />
      <apidata name="push_back" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="71974949-828c-7b8f-87a2-74405a5c7d75" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.push_front(`0)">
      <topicdata group="api" />
      <apidata name="push_front" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="723ecd95-c05e-f12a-5f6c-9488e92d6df5" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="rbegin" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="d023deb8-d348-a182-3972-f6c028bc7798" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.remove(`0)">
      <topicdata group="api" />
      <apidata name="remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="4477a862-fe87-4197-e925-1ea6d79ba345" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.remove_if(Microsoft.VisualC.StlClr.UnaryDelegate{`0,System.Boolean})">
      <topicdata group="api" />
      <apidata name="remove_if" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Pred">
          <type api="T:Microsoft.VisualC.StlClr.UnaryDelegate`2" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="9efaa368-10d1-521d-0c5c-997bb1fac6bc" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="rend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="73b5329e-9ebd-3cde-6ca6-27f50b17977c" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.resize(System.Int32)">
      <topicdata group="api" />
      <apidata name="resize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IList`1.resize" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Newsize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="96a59a9c-8ff6-27a2-c145-a38eac22ff37" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.resize(System.Int32,`0)">
      <topicdata group="api" />
      <apidata name="resize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IList`1.resize" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Newsize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="480706f5-e304-dafe-0636-12a04ce2ef94" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.reverse">
      <topicdata group="api" />
      <apidata name="reverse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="d1cb3efa-0c5e-cd0d-c944-91748218b1c1" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.size">
      <topicdata group="api" />
      <apidata name="size" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="fb3b9a6b-501e-5245-bb53-94dc75ff7ed8" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.sort(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})">
      <topicdata group="api" />
      <apidata name="sort" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Pred">
          <type api="T:Microsoft.VisualC.StlClr.BinaryDelegate`3" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="a2cd29f3-fbca-e667-5262-4b597d32fe9b" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0})">
      <topicdata group="api" />
      <apidata name="splice" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IList`1.splice" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="1e4c3485-9d91-b16b-b18d-640459b08aab" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
      <topicdata group="api" />
      <apidata name="splice" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IList`1.splice" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_First">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="59698772-d855-98eb-76e0-7ba0e3ba79ed" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.splice(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.IList{`0},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
      <topicdata group="api" />
      <apidata name="splice" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IList`1.splice" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_First">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Last">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="a1a2dad1-273c-eafd-fd7f-9514a158fbc2" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.swap(Microsoft.VisualC.StlClr.IList{`0})">
      <topicdata group="api" />
      <apidata name="swap" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="5908f64b-cf46-5333-e4ec-5530d3a1289e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IList`1.unique(Microsoft.VisualC.StlClr.BinaryDelegate{`0,`0,System.Boolean})">
      <topicdata group="api" />
      <apidata name="unique" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Pred">
          <type api="T:Microsoft.VisualC.StlClr.BinaryDelegate`3" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IList`1" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IList`1" ref="true" />
      </containers>
      <file name="63ab949e-5442-c507-9a83-debc4bbcc18b" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.IPriorityQueue`2">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IPriorityQueue`2" />
      <apidata name="IPriorityQueue" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
        <template name="TCont" />
      </templates>
      <implements>
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="8399f08a-016a-1d67-159a-71576e52f425" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.IPriorityQueue`2">
      <topicdata name="IPriorityQueue" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" />
      <apidata name="IPriorityQueue" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
        <template name="TCont" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.assign(Microsoft.VisualC.StlClr.IPriorityQueue{`0,`1})" />
        <element api="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.empty" />
        <element api="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.get_container" />
        <element api="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.pop" />
        <element api="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.push(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.size" />
        <element api="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.top" />
        <element api="P:Microsoft.VisualC.StlClr.IPriorityQueue`2.top_item" />
        <element api="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.value_comp" />
        <element api="M:System.ICloneable.Clone" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" />
      </containers>
      <file name="cdf78676-3278-2ebf-76f5-3979a93af325" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.IPriorityQueue`2">
      <topicdata name="IPriorityQueue" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" />
      <apidata name="IPriorityQueue" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
        <template name="TCont" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.assign(Microsoft.VisualC.StlClr.IPriorityQueue{`0,`1})" />
        <element api="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.empty" />
        <element api="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.get_container" />
        <element api="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.pop" />
        <element api="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.push(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.size" />
        <element api="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.top" />
        <element api="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.value_comp" />
        <element api="M:System.ICloneable.Clone" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" />
      </containers>
      <file name="aa56f84e-02da-5c5d-fa12-bbfe24d36c65" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.IPriorityQueue`2">
      <topicdata name="IPriorityQueue" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" />
      <apidata name="IPriorityQueue" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
        <template name="TCont" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.IPriorityQueue`2.top_item" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" />
      </containers>
      <file name="f3f4500e-6ce7-165b-28cb-0114edba20b1" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.assign(Microsoft.VisualC.StlClr.IPriorityQueue{`0,`1})">
      <topicdata group="api" />
      <apidata name="assign" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" />
              <template name="TCont" index="1" api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" ref="true" />
      </containers>
      <file name="d225ca6b-ac04-c25a-432a-3dfa6bf76f6c" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.empty">
      <topicdata group="api" />
      <apidata name="empty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" ref="true" />
      </containers>
      <file name="1c4b9d94-7660-b504-e29b-a0e3226c5ba0" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.get_container">
      <topicdata group="api" />
      <apidata name="get_container" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <template name="TCont" index="1" api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" ref="true" />
      </containers>
      <file name="b1b07c0d-8f1d-9722-0b32-512fe48a3476" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.pop">
      <topicdata group="api" />
      <apidata name="pop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" ref="true" />
      </containers>
      <file name="6c8e48f8-5fb2-944c-25ee-489816d745f4" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.push(`0)">
      <topicdata group="api" />
      <apidata name="push" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" ref="true" />
      </containers>
      <file name="fe8a924f-e600-f1cd-8687-186c41b7fde5" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.size">
      <topicdata group="api" />
      <apidata name="size" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" ref="true" />
      </containers>
      <file name="e48276e2-51a9-da38-8880-40306208ffbc" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.top">
      <topicdata group="api" />
      <apidata name="top" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" ref="true" />
      </containers>
      <file name="ef4a1331-3dcd-6608-28f5-87ffc9e8ba4d" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.IPriorityQueue`2.top_item">
      <topicdata group="api" />
      <apidata name="top_item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_top_item" />
      <setter name="set_top_item" />
      <returns>
        <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" ref="true" />
      </containers>
      <file name="da78b367-730a-d836-1020-f639223d56f9" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IPriorityQueue`2.value_comp">
      <topicdata group="api" />
      <apidata name="value_comp" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.BinaryDelegate`3" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" />
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" />
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IPriorityQueue`2" ref="true" />
      </containers>
      <file name="1ece423e-1283-81bb-70e7-1515fd3e0e70" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.IQueue`2">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IQueue`2" />
      <apidata name="IQueue" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
        <template name="TCont" />
      </templates>
      <implements>
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="b0a92f6c-d834-584d-d0d6-d7f525d785ce" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.IQueue`2">
      <topicdata name="IQueue" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.IQueue`2" />
      <apidata name="IQueue" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
        <template name="TCont" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IQueue`2.assign(Microsoft.VisualC.StlClr.IQueue{`0,`1})" />
        <element api="M:Microsoft.VisualC.StlClr.IQueue`2.back" />
        <element api="M:Microsoft.VisualC.StlClr.IQueue`2.empty" />
        <element api="M:Microsoft.VisualC.StlClr.IQueue`2.front" />
        <element api="M:Microsoft.VisualC.StlClr.IQueue`2.get_container" />
        <element api="M:Microsoft.VisualC.StlClr.IQueue`2.pop" />
        <element api="M:Microsoft.VisualC.StlClr.IQueue`2.push(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IQueue`2.size" />
        <element api="M:System.ICloneable.Clone" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IQueue`2" />
      </containers>
      <file name="044b4450-54b2-606d-75c5-842dd5d76f3d" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.IQueue`2">
      <topicdata name="IQueue" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.IQueue`2" />
      <apidata name="IQueue" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
        <template name="TCont" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IQueue`2.assign(Microsoft.VisualC.StlClr.IQueue{`0,`1})" />
        <element api="M:Microsoft.VisualC.StlClr.IQueue`2.back" />
        <element api="M:Microsoft.VisualC.StlClr.IQueue`2.empty" />
        <element api="M:Microsoft.VisualC.StlClr.IQueue`2.front" />
        <element api="M:Microsoft.VisualC.StlClr.IQueue`2.get_container" />
        <element api="M:Microsoft.VisualC.StlClr.IQueue`2.pop" />
        <element api="M:Microsoft.VisualC.StlClr.IQueue`2.push(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IQueue`2.size" />
        <element api="M:System.ICloneable.Clone" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IQueue`2" />
      </containers>
      <file name="36bb0cdb-9ff1-7b64-e479-7da19c440086" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IQueue`2.assign(Microsoft.VisualC.StlClr.IQueue{`0,`1})">
      <topicdata group="api" />
      <apidata name="assign" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.IQueue`2" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IQueue`2" />
              <template name="TCont" index="1" api="T:Microsoft.VisualC.StlClr.IQueue`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IQueue`2" ref="true" />
      </containers>
      <file name="a27909b7-efb4-d93a-623b-37263218bd3e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IQueue`2.back">
      <topicdata group="api" />
      <apidata name="back" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IQueue`2" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IQueue`2" ref="true" />
      </containers>
      <file name="0f5cb56e-54b5-8ea9-92ba-dc2e96f8f445" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IQueue`2.empty">
      <topicdata group="api" />
      <apidata name="empty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IQueue`2" ref="true" />
      </containers>
      <file name="efc3e9f5-6d3d-79f2-a272-18b50cc9abc6" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IQueue`2.front">
      <topicdata group="api" />
      <apidata name="front" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IQueue`2" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IQueue`2" ref="true" />
      </containers>
      <file name="1abb31a9-9fb6-2898-a669-550976550570" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IQueue`2.get_container">
      <topicdata group="api" />
      <apidata name="get_container" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <template name="TCont" index="1" api="T:Microsoft.VisualC.StlClr.IQueue`2" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IQueue`2" ref="true" />
      </containers>
      <file name="0ac2fd87-d8cd-1695-3fd6-51c0953fbbd0" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IQueue`2.pop">
      <topicdata group="api" />
      <apidata name="pop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IQueue`2" ref="true" />
      </containers>
      <file name="c41689ef-a8ac-a275-983f-64d9346850da" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IQueue`2.push(`0)">
      <topicdata group="api" />
      <apidata name="push" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IQueue`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IQueue`2" ref="true" />
      </containers>
      <file name="64f391ed-9828-0476-3901-91dbf324d900" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IQueue`2.size">
      <topicdata group="api" />
      <apidata name="size" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IQueue`2" ref="true" />
      </containers>
      <file name="64b918a6-d8f4-6aa4-ac70-f75660ccfbcb" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.IStack`2">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IStack`2" />
      <apidata name="IStack" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
        <template name="TCont" />
      </templates>
      <implements>
        <type api="T:System.ICloneable" ref="true" />
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="609b6042-d264-3fec-5b85-856e11d8f499" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.IStack`2">
      <topicdata name="IStack" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.IStack`2" />
      <apidata name="IStack" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
        <template name="TCont" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IStack`2.assign(Microsoft.VisualC.StlClr.IStack{`0,`1})" />
        <element api="M:Microsoft.VisualC.StlClr.IStack`2.empty" />
        <element api="M:Microsoft.VisualC.StlClr.IStack`2.get_container" />
        <element api="M:Microsoft.VisualC.StlClr.IStack`2.pop" />
        <element api="M:Microsoft.VisualC.StlClr.IStack`2.push(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IStack`2.size" />
        <element api="M:Microsoft.VisualC.StlClr.IStack`2.top" />
        <element api="P:Microsoft.VisualC.StlClr.IStack`2.top_item" />
        <element api="M:System.ICloneable.Clone" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IStack`2" />
      </containers>
      <file name="ca36f1e4-bfe6-9646-5b04-52b79f582dc8" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.IStack`2">
      <topicdata name="IStack" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.IStack`2" />
      <apidata name="IStack" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
        <template name="TCont" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IStack`2.assign(Microsoft.VisualC.StlClr.IStack{`0,`1})" />
        <element api="M:Microsoft.VisualC.StlClr.IStack`2.empty" />
        <element api="M:Microsoft.VisualC.StlClr.IStack`2.get_container" />
        <element api="M:Microsoft.VisualC.StlClr.IStack`2.pop" />
        <element api="M:Microsoft.VisualC.StlClr.IStack`2.push(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IStack`2.size" />
        <element api="M:Microsoft.VisualC.StlClr.IStack`2.top" />
        <element api="M:System.ICloneable.Clone" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IStack`2" />
      </containers>
      <file name="81300ae9-54f5-cb55-8afd-216c7b1e8ec5" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.IStack`2">
      <topicdata name="IStack" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.IStack`2" />
      <apidata name="IStack" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
        <template name="TCont" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.IStack`2.top_item" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IStack`2" />
      </containers>
      <file name="a87134b5-14e7-de28-f540-1beb9f68a778" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IStack`2.assign(Microsoft.VisualC.StlClr.IStack{`0,`1})">
      <topicdata group="api" />
      <apidata name="assign" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.IStack`2" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IStack`2" />
              <template name="TCont" index="1" api="T:Microsoft.VisualC.StlClr.IStack`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IStack`2" ref="true" />
      </containers>
      <file name="b6a62d7f-7fae-d5e0-a580-bae49043e44e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IStack`2.empty">
      <topicdata group="api" />
      <apidata name="empty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IStack`2" ref="true" />
      </containers>
      <file name="9fbeff19-790f-7afb-b27c-20ebc482d1c1" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IStack`2.get_container">
      <topicdata group="api" />
      <apidata name="get_container" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <template name="TCont" index="1" api="T:Microsoft.VisualC.StlClr.IStack`2" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IStack`2" ref="true" />
      </containers>
      <file name="478538ad-88cc-40f7-1aea-23f7ca46c101" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IStack`2.pop">
      <topicdata group="api" />
      <apidata name="pop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IStack`2" ref="true" />
      </containers>
      <file name="bcfb2861-a18d-cf02-0e8a-83b536c6d21c" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IStack`2.push(`0)">
      <topicdata group="api" />
      <apidata name="push" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IStack`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IStack`2" ref="true" />
      </containers>
      <file name="2b28c1d8-310e-41e6-f98b-d11490eb116f" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IStack`2.size">
      <topicdata group="api" />
      <apidata name="size" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IStack`2" ref="true" />
      </containers>
      <file name="f9f390b8-b002-bcec-37e5-c6842df747d6" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IStack`2.top">
      <topicdata group="api" />
      <apidata name="top" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IStack`2" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IStack`2" ref="true" />
      </containers>
      <file name="3b79bbba-3663-e2c6-f975-c6803cf17db7" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.IStack`2.top_item">
      <topicdata group="api" />
      <apidata name="top_item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_top_item" />
      <setter name="set_top_item" />
      <returns>
        <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IStack`2" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IStack`2" ref="true" />
      </containers>
      <file name="01529af2-17c2-c26e-a323-83ea4f8e8f67" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.ITree`2">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.ITree`2" />
      <apidata name="ITree" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1" ref="true">
          <specialization>
            <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
          </specialization>
        </type>
        <type api="T:System.ICloneable" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="f5d176d9-6918-59e3-cac8-fd58d5272248" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.ITree`2">
      <topicdata name="ITree" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.ITree`2" />
      <apidata name="ITree" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.clear" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.count(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.empty" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)" />
        <element api="Overload:Microsoft.VisualC.StlClr.ITree`2.erase">
          <element api="M:Microsoft.VisualC.StlClr.ITree`2.erase(`0)" />
          <element api="M:Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)" />
          <element api="M:Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
        <element api="Overload:Microsoft.VisualC.StlClr.ITree`2.insert">
          <element api="M:Microsoft.VisualC.StlClr.ITree`2.insert(System.Collections.Generic.IEnumerable{`1})" />
          <element api="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)" />
          <element api="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator{`1},Microsoft.VisualC.StlClr.Generic.IInputIterator{`1})" />
          <element api="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,`1)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.key_comp" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.size" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.swap(Microsoft.VisualC.StlClr.ITree{`0,`1})" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.value_comp" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1.get_generation" />
        <element api="M:System.ICloneable.Clone" />
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ICollection.Count" />
        <element api="P:System.Collections.ICollection.IsSynchronized" />
        <element api="P:System.Collections.ICollection.SyncRoot" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" />
      </containers>
      <file name="16b80572-9025-38f4-67a9-8162aa922b5f" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.ITree`2">
      <topicdata name="ITree" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.ITree`2" />
      <apidata name="ITree" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.clear" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.count(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.empty" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)" />
        <element api="Overload:Microsoft.VisualC.StlClr.ITree`2.erase">
          <element api="M:Microsoft.VisualC.StlClr.ITree`2.erase(`0)" />
          <element api="M:Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)" />
          <element api="M:Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
        <element api="Overload:Microsoft.VisualC.StlClr.ITree`2.insert">
          <element api="M:Microsoft.VisualC.StlClr.ITree`2.insert(System.Collections.Generic.IEnumerable{`1})" />
          <element api="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)" />
          <element api="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator{`1},Microsoft.VisualC.StlClr.Generic.IInputIterator{`1})" />
          <element api="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,`1)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.key_comp" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.size" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.swap(Microsoft.VisualC.StlClr.ITree{`0,`1})" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.value_comp" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IBidirectionalContainer`1.get_generation" />
        <element api="M:System.ICloneable.Clone" />
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" />
      </containers>
      <file name="633868e0-43ce-e2c7-e953-3fbb71ec5f8f" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.ITree`2">
      <topicdata name="ITree" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.ITree`2" />
      <apidata name="ITree" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:System.Collections.ICollection.Count" />
        <element api="P:System.Collections.ICollection.IsSynchronized" />
        <element api="P:System.Collections.ICollection.SyncRoot" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" />
      </containers>
      <file name="e9be5a7a-24ea-4f4d-f0be-774603b53c3e" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.ITree`2.erase">
      <topicdata name="erase" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.ITree`2" />
      <apidata name="erase" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.erase(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="8ad09fd7-5f6a-62ea-f382-1021910dff14" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.ITree`2.insert">
      <topicdata name="insert" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.ITree`2" />
      <apidata name="insert" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.insert(System.Collections.Generic.IEnumerable{`1})" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator{`1},Microsoft.VisualC.StlClr.Generic.IInputIterator{`1})" />
        <element api="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,`1)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="cb1de25f-d0ec-59a2-c2f6-c4317d65a6fe" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.begin(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)">
      <topicdata group="api" />
      <apidata name="begin" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="80d4673c-dda0-5970-0a02-29eb31c226ec" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.clear">
      <topicdata group="api" />
      <apidata name="clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="cbc1367c-884d-c039-abea-261780cebe29" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.count(`0)">
      <topicdata group="api" />
      <apidata name="count" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Keyval">
          <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.ITree`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="04781360-fd7e-02b7-fa04-394b2fa7ab44" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.empty">
      <topicdata group="api" />
      <apidata name="empty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="221d9fc8-997c-7c28-aded-42576f066749" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.end(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@)">
      <topicdata group="api" />
      <apidata name="end" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="11e2a428-37e8-bf07-32bf-0b798b31b34b" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.equal_range(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}}@,`0)">
      <topicdata group="api" />
      <apidata name="equal_range" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true">
              <specialization>
                <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
                  <specialization>
                    <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
                  </specialization>
                </type>
                <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
                  <specialization>
                    <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Keyval">
          <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.ITree`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="24849e61-3169-08ee-fa1e-a48ac2fa469a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)">
      <topicdata group="api" />
      <apidata name="erase" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.ITree`2.erase" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="43aae104-7ef0-2a72-ef42-8341aec9bca8" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.erase(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue)">
      <topicdata group="api" />
      <apidata name="erase" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.ITree`2.erase" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_First_iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Last_iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="50862dcd-12af-324c-5111-4d20919a907e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.erase(`0)">
      <topicdata group="api" />
      <apidata name="erase" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.ITree`2.erase" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Keyval">
          <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.ITree`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="77e3d81c-3df8-17b8-2cf6-052d0083bc6d" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.find(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)">
      <topicdata group="api" />
      <apidata name="find" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Keyval">
          <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.ITree`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="3d2524f6-4cca-0e61-3a42-db1a6c24312b" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}|System.Runtime.CompilerServices.IsByValue,`1)">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.ITree`2.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Val">
          <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="a852b073-9512-5835-992a-83786540d7b0" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.Generic.IInputIterator{`1},Microsoft.VisualC.StlClr.Generic.IInputIterator{`1})">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.ITree`2.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_First">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_Last">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="16c61b6e-aeb6-3e61-982d-24694ff59d78" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.insert(Microsoft.VisualC.StlClr.GenericPair{Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1},System.Boolean}@,`1)">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.ITree`2.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.GenericPair`2" ref="true">
              <specialization>
                <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
                  <specialization>
                    <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
                  </specialization>
                </type>
                <type api="T:System.Boolean" ref="false" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Val">
          <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="a29e1212-f87e-548a-f270-093dd78b4900" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.insert(System.Collections.Generic.IEnumerable{`1})">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.ITree`2.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="f594dcf1-fb67-a9a2-f771-36348ec4ca3e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.key_comp">
      <topicdata group="api" />
      <apidata name="key_comp" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.BinaryDelegate`3" ref="true">
          <specialization>
            <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.ITree`2" />
            <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.ITree`2" />
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="f369e635-6e51-b00c-1ddc-b18857d0cacf" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.lower_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)">
      <topicdata group="api" />
      <apidata name="lower_bound" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Keyval">
          <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.ITree`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="3eb72085-91fe-1f03-4d5b-ffd052153f9f" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)">
      <topicdata group="api" />
      <apidata name="rbegin" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="c483823e-a326-2ce2-3b90-efdc6e6f9b92" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.rend(Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator{`1}@)">
      <topicdata group="api" />
      <apidata name="rend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="40fe8040-22ce-c1af-698e-262fda140d65" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.size">
      <topicdata group="api" />
      <apidata name="size" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="17d5e981-71b3-9fb4-3059-f890f2983222" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.swap(Microsoft.VisualC.StlClr.ITree{`0,`1})">
      <topicdata group="api" />
      <apidata name="swap" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.ITree`2" />
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="754a828f-21be-64f8-10f1-3f05a21fa54e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.upper_bound(Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator{`1}@,`0)">
      <topicdata group="api" />
      <apidata name="upper_bound" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerBidirectionalIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Keyval">
          <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.ITree`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="4958870c-d622-ed44-ef23-a8d2aff4a2e9" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ITree`2.value_comp">
      <topicdata group="api" />
      <apidata name="value_comp" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Microsoft.VisualC.StlClr.BinaryDelegate`3" ref="true">
          <specialization>
            <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
            <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.ITree`2" />
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ITree`2" ref="true" />
      </containers>
      <file name="8f8f99f4-5623-7ac5-ac5c-49d7b663833b" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.IVector`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IVector`1" />
      <apidata name="IVector" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
          </specialization>
        </type>
        <type api="T:System.ICloneable" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="39aafa5c-9a41-5b61-4d91-7a20b528ffba" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.IVector`1">
      <topicdata name="IVector" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.IVector`1" />
      <apidata name="IVector" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.IVector`1.assign">
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.assign(System.Collections.IEnumerable)" />
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.assign(System.Int32,`0)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.at(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.back" />
        <element api="P:Microsoft.VisualC.StlClr.IVector`1.back_item" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.capacity" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.clear" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.empty" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />
        <element api="Overload:Microsoft.VisualC.StlClr.IVector`1.erase">
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.front" />
        <element api="P:Microsoft.VisualC.StlClr.IVector`1.front_item" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.get_generation" />
        <element api="Overload:Microsoft.VisualC.StlClr.IVector`1.insert">
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)" />
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)" />
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)" />
        </element>
        <element api="P:Microsoft.VisualC.StlClr.IVector`1.Item(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.pop_back" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.push_back(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.reserve(System.Int32)" />
        <element api="Overload:Microsoft.VisualC.StlClr.IVector`1.resize">
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32)" />
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32,`0)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.size" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.swap(Microsoft.VisualC.StlClr.IVector{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.at_bias(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.valid_bias(System.Int32)" />
        <element api="M:System.ICloneable.Clone" />
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ICollection.Count" />
        <element api="P:System.Collections.ICollection.IsSynchronized" />
        <element api="P:System.Collections.ICollection.SyncRoot" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" />
      </containers>
      <file name="f5bcb8cb-076f-46eb-14d3-738b72fb4390" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.IVector`1">
      <topicdata name="IVector" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.IVector`1" />
      <apidata name="IVector" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="Overload:Microsoft.VisualC.StlClr.IVector`1.assign">
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.assign(System.Collections.IEnumerable)" />
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.assign(System.Int32,`0)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.at(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.back" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.capacity" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.clear" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.empty" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)" />
        <element api="Overload:Microsoft.VisualC.StlClr.IVector`1.erase">
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.front" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.get_generation" />
        <element api="Overload:Microsoft.VisualC.StlClr.IVector`1.insert">
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)" />
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)" />
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.pop_back" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.push_back(`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.reserve(System.Int32)" />
        <element api="Overload:Microsoft.VisualC.StlClr.IVector`1.resize">
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32)" />
          <element api="M:Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32,`0)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.size" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.swap(Microsoft.VisualC.StlClr.IVector{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.at_bias(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.Generic.IRandomAccessContainer`1.valid_bias(System.Int32)" />
        <element api="M:System.ICloneable.Clone" />
        <element api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.IEnumerable.GetEnumerator" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" />
      </containers>
      <file name="66bca892-402e-026c-92f9-100eda5303ed" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.IVector`1">
      <topicdata name="IVector" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.IVector`1" />
      <apidata name="IVector" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.IVector`1.back_item" />
        <element api="P:Microsoft.VisualC.StlClr.IVector`1.front_item" />
        <element api="P:Microsoft.VisualC.StlClr.IVector`1.Item(System.Int32)" />
        <element api="P:System.Collections.ICollection.Count" />
        <element api="P:System.Collections.ICollection.IsSynchronized" />
        <element api="P:System.Collections.ICollection.SyncRoot" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" />
      </containers>
      <file name="f6103b13-c6b8-3396-8ca1-6ec49487f23b" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.IVector`1.assign">
      <topicdata name="assign" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IVector`1" />
      <apidata name="assign" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.assign(System.Collections.IEnumerable)" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.assign(System.Int32,`0)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="43d9a025-ea90-1d79-ea5f-6ddcdb550062" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.IVector`1.erase">
      <topicdata name="erase" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IVector`1" />
      <apidata name="erase" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="d282045c-b8a2-2a06-c2f6-f15b4667250f" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.IVector`1.insert">
      <topicdata name="insert" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IVector`1" />
      <apidata name="insert" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="2a211380-85f0-aa9f-5a81-46fad3f5ab59" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.IVector`1.resize">
      <topicdata name="resize" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.IVector`1" />
      <apidata name="resize" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32)" />
        <element api="M:Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32,`0)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="9ad0b1e5-33ca-2da4-1470-7d5a6e5d0de5" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.assign(Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="assign" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IVector`1.assign" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_First">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_Last">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="1c9dd426-1f07-4bc8-597f-89597e27ba69" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.assign(System.Collections.IEnumerable)">
      <topicdata group="api" />
      <apidata name="assign" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IVector`1.assign" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Right">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="bb5543f7-9f43-d8c1-8263-52707522d87e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.assign(System.Int32,`0)">
      <topicdata group="api" />
      <apidata name="assign" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IVector`1.assign" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="8276b2ea-4f1c-5566-5af9-25e7d2d3aabb" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.at(System.Int32)">
      <topicdata group="api" />
      <apidata name="at" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Pos">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="ebabdc6b-e505-7c50-8ca2-a2a5c082fa5a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.back">
      <topicdata group="api" />
      <apidata name="back" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="ac98647c-5c48-7e07-d920-787ee66950e3" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.IVector`1.back_item">
      <topicdata group="api" />
      <apidata name="back_item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_back_item" />
      <setter name="set_back_item" />
      <returns>
        <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="d1521d5f-56ae-42fd-118d-745cfb7d3a3f" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.begin(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="begin" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="ff46a8c1-c5b9-315f-58b2-28407831900c" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.capacity">
      <topicdata group="api" />
      <apidata name="capacity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="db0f7037-145a-be40-7a05-94b5731db2e3" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.clear">
      <topicdata group="api" />
      <apidata name="clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="b8256a67-a18c-e540-1d4e-66e8be877c4a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.empty">
      <topicdata group="api" />
      <apidata name="empty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="d990c9c6-9af5-688a-cfc2-b7a1c3d997ea" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.end(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="end" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="48a6d6b7-b9b8-9cc2-28fe-630128a24b55" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
      <topicdata group="api" />
      <apidata name="erase" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IVector`1.erase" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="c61a7f94-f413-a742-1dbd-8b4c90e5bd9c" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.erase(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue)">
      <topicdata group="api" />
      <apidata name="erase" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IVector`1.erase" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_First_iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Last_iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="389c4eed-93a3-2e70-d3cd-12a4df43355f" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.front">
      <topicdata group="api" />
      <apidata name="front" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <referenceTo>
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="dbc624ea-4591-7fbc-9cca-f9dc65d770ab" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.IVector`1.front_item">
      <topicdata group="api" />
      <apidata name="front_item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_front_item" />
      <setter name="set_front_item" />
      <returns>
        <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="da5718cc-a6fa-63fb-05ad-dab3c887a772" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.get_generation">
      <topicdata group="api" />
      <apidata name="get_generation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.UInt32" ref="false">
          <optionalModifier>
            <type api="T:System.Runtime.CompilerServices.IsLong" ref="true" />
          </optionalModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="67f9cfa2-d11b-9057-b616-0f96900305b5" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}@,Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,`0)">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IVector`1.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="c3c69282-7c20-fbde-51b2-e08146f2ddb2" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,Microsoft.VisualC.StlClr.Generic.IInputIterator{`0},Microsoft.VisualC.StlClr.Generic.IInputIterator{`0})">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IVector`1.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_First">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_Last">
          <type api="T:Microsoft.VisualC.StlClr.Generic.IInputIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="eb061a77-dea0-d448-a58f-db4ed6dbd09d" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Collections.IEnumerable)">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IVector`1.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Where_iter">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Right">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="18c75fd4-4d1c-6839-314a-2fb4646e60b8" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.insert(Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator{`0}|System.Runtime.CompilerServices.IsByValue,System.Int32,`0)">
      <topicdata group="api" />
      <apidata name="insert" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IVector`1.insert" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Where">
          <type api="T:Microsoft.VisualC.StlClr.Generic.ContainerRandomAccessIterator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
            </specialization>
            <requiredModifier>
              <type api="T:System.Runtime.CompilerServices.IsByValue" ref="true" />
            </requiredModifier>
          </type>
        </parameter>
        <parameter name="_Count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="88ff8a31-68b4-43c8-e93b-876d080df278" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.IVector`1.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="_Pos">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="4dd19d98-a8e9-7cc7-82d1-8f192043066c" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.pop_back">
      <topicdata group="api" />
      <apidata name="pop_back" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="b006e7f1-9048-824d-11a2-330a67ad7f63" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.push_back(`0)">
      <topicdata group="api" />
      <apidata name="push_back" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="020573e1-e5ca-8e90-dd17-c78630c7b5be" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.rbegin(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="rbegin" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="2b627aaf-6446-1d58-a8d1-343354ae551a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.rend(Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator{`0}@)">
      <topicdata group="api" />
      <apidata name="rend" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="">
          <referenceTo>
            <type api="T:Microsoft.VisualC.StlClr.Generic.ReverseRandomAccessIterator`1" ref="true">
              <specialization>
                <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
              </specialization>
            </type>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Void" ref="false">
          <requiredModifier>
            <type api="T:System.Runtime.CompilerServices.IsUdtReturn" ref="true" />
          </requiredModifier>
        </type>
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="7fbe19f9-e332-7a26-44ff-e8e41bc74609" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.reserve(System.Int32)">
      <topicdata group="api" />
      <apidata name="reserve" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="153272eb-03b1-1d43-f909-79eea2bebfba" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32)">
      <topicdata group="api" />
      <apidata name="resize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IVector`1.resize" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Newsize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="3e3f2d6a-092c-d533-e62b-488943276b7d" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.resize(System.Int32,`0)">
      <topicdata group="api" />
      <apidata name="resize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.IVector`1.resize" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="_Newsize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="_Val">
          <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="72d41440-8a8b-bf4b-4773-ddaae5d7204d" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.size">
      <topicdata group="api" />
      <apidata name="size" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="c9c1d777-e6f1-d615-3d5e-ba3dc446494d" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.IVector`1.swap(Microsoft.VisualC.StlClr.IVector{`0})">
      <topicdata group="api" />
      <apidata name="swap" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="A_0">
          <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.IVector`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true" />
      </containers>
      <file name="c62dd875-8c71-446a-9336-093e8b3c93be" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.ListEnumerator`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.ListEnumerator`1" />
      <apidata name="ListEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.ListEnumerator`1" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.ListEnumerator`1" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="347496a2-a7b3-98d0-0002-4b8830d5855f" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.ListEnumerator`1">
      <topicdata name="ListEnumerator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.ListEnumerator`1" />
      <apidata name="ListEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.ListEnumerator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})" />
        <element api="P:Microsoft.VisualC.StlClr.ListEnumerator`1.Current" />
        <element api="Overload:Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose">
          <element api="M:Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose" />
          <element api="M:Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose(System.Boolean)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.ListEnumerator`1.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.ListEnumerator`1.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ListEnumerator`1" />
      </containers>
      <file name="b891523d-c050-21d3-4e86-b52e408a76c8" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.ListEnumerator`1">
      <topicdata name="ListEnumerator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.ListEnumerator`1" />
      <apidata name="ListEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose">
          <element api="M:Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose" />
          <element api="M:Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose(System.Boolean)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.ListEnumerator`1.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.ListEnumerator`1.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ListEnumerator`1" />
      </containers>
      <file name="a6764bae-ba3f-9a58-3f92-ffde58245e55" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.ListEnumerator`1">
      <topicdata name="ListEnumerator" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.ListEnumerator`1" />
      <apidata name="ListEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.ListEnumerator`1.Current" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ListEnumerator`1" />
      </containers>
      <file name="7c29fb64-81bc-d3be-d989-801a1dd26399" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.ListEnumerator`1" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose" />
        <element api="M:Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ListEnumerator`1" ref="true" />
      </containers>
      <file name="5f935172-439e-3dab-5925-cc0fbb495bdd" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ListEnumerator`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="_First">
          <type api="T:Microsoft.VisualC.StlClr.Generic.INode`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.ListEnumerator`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ListEnumerator`1" ref="true" />
      </containers>
      <file name="30409fd4-f377-4cfd-303c-b2cf0aed5de4" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.ListEnumerator`1.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Current" />
      <setter name="set_Current" />
      <returns>
        <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.ListEnumerator`1" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IEnumerator`1.Current">
          <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.ListEnumerator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ListEnumerator`1" ref="true" />
      </containers>
      <file name="b01481d3-8008-5707-3b68-2b5bc6a74266" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose" />
      <proceduredata virtual="true" final="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ListEnumerator`1" ref="true" />
      </containers>
      <file name="99526aea-0e4a-543a-ad3d-59d69c68c9ca" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:Microsoft.VisualC.StlClr.ListEnumerator`1.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="A_0">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ListEnumerator`1" ref="true" />
      </containers>
      <file name="78507fbf-b4f6-ee15-26a6-8a96dfc530ab" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ListEnumerator`1.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.VisualC.StlClr.ListEnumeratorBase`1.MoveNext">
          <type api="T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.ListEnumerator`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerator.MoveNext">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ListEnumerator`1" ref="true" />
      </containers>
      <file name="63663654-50af-511b-d25a-6010397c53f7" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ListEnumerator`1.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.VisualC.StlClr.ListEnumeratorBase`1.Reset">
          <type api="T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.ListEnumerator`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <implements>
        <member api="M:System.Collections.IEnumerator.Reset">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ListEnumerator`1" ref="true" />
      </containers>
      <file name="efb861e0-bd3e-1a70-956e-472242edb4f4" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1" />
      <apidata name="ListEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Microsoft.VisualC.StlClr.ListEnumerator`1" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="026315ce-c336-cf82-1104-d36c42e7b5d7" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1">
      <topicdata name="ListEnumeratorBase" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1" />
      <apidata name="ListEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.ListEnumeratorBase`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})" />
        <element api="P:Microsoft.VisualC.StlClr.ListEnumeratorBase`1.Current" />
        <element api="M:Microsoft.VisualC.StlClr.ListEnumeratorBase`1.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.ListEnumeratorBase`1.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1" />
      </containers>
      <file name="7f81c870-9594-59c4-8766-1ca5ac2cd93e" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1">
      <topicdata name="ListEnumeratorBase" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1" />
      <apidata name="ListEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.ListEnumeratorBase`1.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.ListEnumeratorBase`1.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1" />
      </containers>
      <file name="abc2bc64-ad95-bdde-f95a-1bea8e6ba099" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1">
      <topicdata name="ListEnumeratorBase" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1" />
      <apidata name="ListEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.ListEnumeratorBase`1.Current" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1" />
      </containers>
      <file name="6b86357b-8d35-ca13-168a-4e0723c69219" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ListEnumeratorBase`1.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`0})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="_First">
          <type api="T:Microsoft.VisualC.StlClr.Generic.INode`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1" ref="true" />
      </containers>
      <file name="81af4938-0481-af10-2e0b-6b78fda3ddaf" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.ListEnumeratorBase`1.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Current" />
      <setter name="set_Current" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IEnumerator.Current">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1" ref="true" />
      </containers>
      <file name="90522ee7-3590-305a-f808-f21446e39523" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ListEnumeratorBase`1.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerator.MoveNext">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1" ref="true" />
      </containers>
      <file name="b1314d7a-2e35-ec9d-1994-193e9a228759" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.ListEnumeratorBase`1.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:System.Collections.IEnumerator.Reset">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.ListEnumeratorBase`1" ref="true" />
      </containers>
      <file name="02aa8f50-57e7-fa64-91f2-256b2bb83010" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.TreeEnumerator`2">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.TreeEnumerator`2" />
      <apidata name="TreeEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" />
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="a196a518-f218-bd97-9e45-46f87fc93762" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.TreeEnumerator`2">
      <topicdata name="TreeEnumerator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" />
      <apidata name="TreeEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`1})" />
        <element api="P:Microsoft.VisualC.StlClr.TreeEnumerator`2.Current" />
        <element api="Overload:Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose">
          <element api="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose" />
          <element api="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose(System.Boolean)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" />
      </containers>
      <file name="ac564161-6808-fdda-e9a4-acb28790d587" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.TreeEnumerator`2">
      <topicdata name="TreeEnumerator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" />
      <apidata name="TreeEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose">
          <element api="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose" />
          <element api="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose(System.Boolean)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" />
      </containers>
      <file name="bbebbdf7-46bb-6cfe-fd4e-e3c40fa8af50" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.TreeEnumerator`2">
      <topicdata name="TreeEnumerator" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" />
      <apidata name="TreeEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.TreeEnumerator`2.Current" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" />
      </containers>
      <file name="da0ed181-15d3-6b70-4ad3-8252b4780e7d" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.TreeEnumerator`2" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose" />
        <element api="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" ref="true" />
      </containers>
      <file name="73d3cf38-8667-acc4-813f-278f93996512" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`1})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="_First">
          <type api="T:Microsoft.VisualC.StlClr.Generic.INode`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" ref="true" />
      </containers>
      <file name="55a6da63-8fa1-c701-2117-de3bd826116b" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.TreeEnumerator`2.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Current" />
      <setter name="set_Current" />
      <returns>
        <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IEnumerator`1.Current">
          <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" ref="true" />
      </containers>
      <file name="9057d0ae-8aae-f8fc-1be6-e72b039eede9" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose" />
      <proceduredata virtual="true" final="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" ref="true" />
      </containers>
      <file name="a2d5859e-5919-57bd-e954-20ee66b37d37" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:Microsoft.VisualC.StlClr.TreeEnumerator`2.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="A_0">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" ref="true" />
      </containers>
      <file name="b9c44997-67a4-e62a-e67a-e7b2e0cfb0ee" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.MoveNext">
          <type api="T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" />
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" />
            </specialization>
          </type>
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerator.MoveNext">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" ref="true" />
      </containers>
      <file name="6c0322f2-2219-7d87-8653-e7a7a1af08eb" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.TreeEnumerator`2.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.Reset">
          <type api="T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" />
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" />
            </specialization>
          </type>
        </member>
      </overrides>
      <implements>
        <member api="M:System.Collections.IEnumerator.Reset">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" ref="true" />
      </containers>
      <file name="762f52a2-6f8a-c897-5db9-13bf04961e22" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2" />
      <apidata name="TreeEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Microsoft.VisualC.StlClr.TreeEnumerator`2" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="93e9e730-6d20-20b0-691f-40e85d3df1d8" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2">
      <topicdata name="TreeEnumeratorBase" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2" />
      <apidata name="TreeEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`1})" />
        <element api="P:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.Current" />
        <element api="M:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2" />
      </containers>
      <file name="20e9304a-92ab-55c7-20e4-8ec245dca229" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2">
      <topicdata name="TreeEnumeratorBase" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2" />
      <apidata name="TreeEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2" />
      </containers>
      <file name="16e43e3b-5022-48ff-1d9b-bb13a523e1b6" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2">
      <topicdata name="TreeEnumeratorBase" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2" />
      <apidata name="TreeEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.Current" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2" />
      </containers>
      <file name="ba1a98d3-5495-cbcc-95ef-a5782051bd13" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.#ctor(Microsoft.VisualC.StlClr.Generic.INode{`1})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="_First">
          <type api="T:Microsoft.VisualC.StlClr.Generic.INode`1" ref="true">
            <specialization>
              <template name="TValue" index="1" api="T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2" ref="true" />
      </containers>
      <file name="99e866a7-1270-a249-bafc-a7f909e29dec" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Current" />
      <setter name="set_Current" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IEnumerator.Current">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2" ref="true" />
      </containers>
      <file name="4e44f1dd-f1a3-d6f9-f474-6cb021740f0d" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerator.MoveNext">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2" ref="true" />
      </containers>
      <file name="56e8e36a-5b61-629c-4a34-98f689cef824" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:System.Collections.IEnumerator.Reset">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.TreeEnumeratorBase`2" ref="true" />
      </containers>
      <file name="453fa155-0712-88c5-5dc3-04ca86ba9dec" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.UnaryDelegate`2">
      <topicdata group="api" />
      <apidata name="UnaryDelegate" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <templates>
        <template name="TArg" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="A_0">
          <template name="TArg" index="0" api="T:Microsoft.VisualC.StlClr.UnaryDelegate`2" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="1" api="T:Microsoft.VisualC.StlClr.UnaryDelegate`2" />
      </returns>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="a73c7e10-d847-b237-0a57-164727111587" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.VectorEnumerator`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.VectorEnumerator`1" />
      <apidata name="VectorEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" />
          </specialization>
        </type>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="71f437c0-9f92-7dd0-b4bb-c6e03f6f6bbc" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.VectorEnumerator`1">
      <topicdata name="VectorEnumerator" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" />
      <apidata name="VectorEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.#ctor(Microsoft.VisualC.StlClr.IVector{`0},System.Int32)" />
        <element api="P:Microsoft.VisualC.StlClr.VectorEnumerator`1.Current" />
        <element api="Overload:Microsoft.VisualC.StlClr.VectorEnumerator`1.Dispose">
          <element api="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.Dispose" />
          <element api="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.Dispose(System.Boolean)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" />
      </containers>
      <file name="7682c2df-6b0d-7d60-b50f-580de587a436" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.VectorEnumerator`1">
      <topicdata name="VectorEnumerator" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" />
      <apidata name="VectorEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.VisualC.StlClr.VectorEnumerator`1.Dispose">
          <element api="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.Dispose" />
          <element api="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.Dispose(System.Boolean)" />
        </element>
        <element api="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" />
      </containers>
      <file name="5859246c-6052-9337-9c34-4e466057294c" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.VectorEnumerator`1">
      <topicdata name="VectorEnumerator" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" />
      <apidata name="VectorEnumerator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.VectorEnumerator`1.Current" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" />
      </containers>
      <file name="ac570b1a-a5d1-c7e0-020d-81dc16b6efc5" />
    </api>
    <api id="Overload:Microsoft.VisualC.StlClr.VectorEnumerator`1.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.VectorEnumerator`1" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.Dispose" />
        <element api="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" ref="true" />
      </containers>
      <file name="4de8b6f4-d10f-7f47-3f40-ffd283ca7846" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.#ctor(Microsoft.VisualC.StlClr.IVector{`0},System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="_Cont">
          <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_First">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" ref="true" />
      </containers>
      <file name="24d3e78e-52fc-46da-4605-cd1ad6b601d3" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.VectorEnumerator`1.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Current" />
      <setter name="set_Current" />
      <returns>
        <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IEnumerator`1.Current">
          <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" ref="true" />
      </containers>
      <file name="ebdd926c-c2e5-3ad8-d486-966691f8599a" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.VisualC.StlClr.VectorEnumerator`1.Dispose" />
      <proceduredata virtual="true" final="true" />
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" ref="true" />
      </containers>
      <file name="0b09d073-f038-981d-eb98-14b06104323e" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:Microsoft.VisualC.StlClr.VectorEnumerator`1.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="A_0">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" ref="true" />
      </containers>
      <file name="b1fac51b-fd02-633f-15c5-72d67a8277c0" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1.MoveNext">
          <type api="T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerator.MoveNext">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" ref="true" />
      </containers>
      <file name="693154e8-28f6-dc44-1d7d-b3653f586d7d" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.VectorEnumerator`1.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1.Reset">
          <type api="T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" />
            </specialization>
          </type>
        </member>
      </overrides>
      <implements>
        <member api="M:System.Collections.IEnumerator.Reset">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" ref="true" />
      </containers>
      <file name="9ec70f3e-da27-ffcf-445c-3eeee280d28d" />
    </api>
    <api id="T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1" />
      <apidata name="VectorEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Microsoft.VisualC.StlClr.VectorEnumerator`1" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
      </containers>
      <file name="e884071a-46d2-6160-cc51-297d15fcf317" />
    </api>
    <api id="AllMembers.T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1">
      <topicdata name="VectorEnumeratorBase" group="list" subgroup="members" typeTopicId="T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1" />
      <apidata name="VectorEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1.#ctor(Microsoft.VisualC.StlClr.IVector{`0},System.Int32)" />
        <element api="P:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1.Current" />
        <element api="M:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1" />
      </containers>
      <file name="7036486e-8535-0297-749f-50c2eb236021" />
    </api>
    <api id="Methods.T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1">
      <topicdata name="VectorEnumeratorBase" group="list" subgroup="Methods" typeTopicId="T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1" />
      <apidata name="VectorEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="M:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1.MoveNext" />
        <element api="M:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1.Reset" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1" />
      </containers>
      <file name="01785992-1cac-0740-8888-06e09c1686b8" />
    </api>
    <api id="Properties.T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1">
      <topicdata name="VectorEnumeratorBase" group="list" subgroup="Properties" typeTopicId="T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1" />
      <apidata name="VectorEnumeratorBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TValue" />
      </templates>
      <elements>
        <element api="P:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1.Current" />
      </elements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1" />
      </containers>
      <file name="2c858915-d7de-6df0-cae8-6261c42152f8" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1.#ctor(Microsoft.VisualC.StlClr.IVector{`0},System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="_Cont">
          <type api="T:Microsoft.VisualC.StlClr.IVector`1" ref="true">
            <specialization>
              <template name="TValue" index="0" api="T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="_First">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1" ref="true" />
      </containers>
      <file name="7add2e54-fb60-2cb6-8050-fcc112e3d6cf" />
    </api>
    <api id="P:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Current" />
      <setter name="set_Current" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IEnumerator.Current">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1" ref="true" />
      </containers>
      <file name="d6370102-b004-6956-5b40-bd874097c619" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerator.MoveNext">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1" ref="true" />
      </containers>
      <file name="e0017847-7536-34ea-0dcf-6635d99f3b64" />
    </api>
    <api id="M:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1.Reset">
      <topicdata group="api" />
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:System.Collections.IEnumerator.Reset">
          <type api="T:System.Collections.IEnumerator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Microsoft.VisualC.STLCLR" module="Microsoft.VisualC.STLCLR" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.VisualC.StlClr" />
        <type api="T:Microsoft.VisualC.StlClr.VectorEnumeratorBase`1" ref="true" />
      </containers>
      <file name="ba703c00-e822-bb9e-e3a1-8c2cd551b377" />
    </api>
  </apis>
</reflection>